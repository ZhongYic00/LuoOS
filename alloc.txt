
obj/kernel/alloc.o:     file format elf64-littleriscv


Disassembly of section .group:

0000000000000000 <.group>:
    tlsf_create_with_pool() create and add a pool
    */
    this->pool=addr;
    tlsf_create_with_pool(reinterpret_cast<ptr_t>(addr),len);
}
HeapMgr::~HeapMgr(){}
   0:	0001                	nop
   2:	0000                	unimp
HeapMgr::HeapMgr(ptr_t addr,xlen_t len){
   4:	0000001b          	sext.w	zero,zero
    this->pool=addr;
   8:	001c                	0x1c
	...

Disassembly of section .text:

0000000000000000 <_ZN5alloc7HeapMgrD1Ev>:
HeapMgr::~HeapMgr(){}
   0:	00008067          	ret

0000000000000004 <_ZN5alloc7HeapMgrC1EPvm>:
HeapMgr::HeapMgr(ptr_t addr,xlen_t len){
   4:	00050793          	mv	a5,a0
    this->pool=addr;
   8:	00b7b023          	sd	a1,0(a5)
HeapMgr::HeapMgr(ptr_t addr,xlen_t len){
   c:	00058513          	mv	a0,a1

0000000000000010 <.LVL2>:
    tlsf_create_with_pool(reinterpret_cast<ptr_t>(addr),len);
  10:	00060593          	mv	a1,a2

0000000000000014 <.LVL3>:
  14:	00000317          	auipc	t1,0x0
  18:	00030067          	jr	t1 # 14 <.LVL3>

000000000000001c <_ZN5alloc15HeapMgrGrowableC1EPvmRNS_7PageMgrE>:
    DBG(
        printf("newPool=%p reservedNode=%p\n",newPool,reservedNode);
        tlsf_walk_pool(newPool);
    )
}
HeapMgrGrowable::HeapMgrGrowable(ptr_t addr,xlen_t len,PageMgr &pmgr):HeapMgr(addr,len),pmgr(pmgr),growsize(2){
  1c:	fe010113          	addi	sp,sp,-32
  20:	00813823          	sd	s0,16(sp)
  24:	00913423          	sd	s1,8(sp)
  28:	00050413          	mv	s0,a0

000000000000002c <.LVL6>:
  2c:	00113c23          	sd	ra,24(sp)
  30:	00058513          	mv	a0,a1

0000000000000034 <.LBB188>:
    this->pool=addr;
  34:	00a43023          	sd	a0,0(s0)
    tlsf_create_with_pool(reinterpret_cast<ptr_t>(addr),len);
  38:	00060593          	mv	a1,a2

000000000000003c <.LBE188>:
HeapMgrGrowable::HeapMgrGrowable(ptr_t addr,xlen_t len,PageMgr &pmgr):HeapMgr(addr,len),pmgr(pmgr),growsize(2){
  3c:	00068493          	mv	s1,a3

0000000000000040 <.LBB191>:
    tlsf_create_with_pool(reinterpret_cast<ptr_t>(addr),len);
  40:	00000097          	auipc	ra,0x0
  44:	000080e7          	jalr	ra # 40 <.LBB191>

0000000000000048 <.LBE191>:
HeapMgrGrowable::HeapMgrGrowable(ptr_t addr,xlen_t len,PageMgr &pmgr):HeapMgr(addr,len),pmgr(pmgr),growsize(2){
  48:	00200793          	li	a5,2
  4c:	00943423          	sd	s1,8(s0)

0000000000000050 <.LBB192>:
template<typename T>
struct list{
  typedef ListNode<T>* listndptr;
  listndptr head;
  listndptr tail;
  inline list(){ head=tail=nullptr; }
  50:	00043c23          	sd	zero,24(s0)
  54:	00043823          	sd	zero,16(s0)

0000000000000058 <.LBE192>:
  58:	02f42423          	sw	a5,40(s0)

000000000000005c <.LBB194>:
    }
}

ptr_t HeapMgr::alloc(xlen_t size){
    for(int retry=0;retry<retryLimit;retry++){
        ptr_t rt=(tlsf_malloc(size));
  5c:	01800513          	li	a0,24
  60:	00000097          	auipc	ra,0x0
  64:	000080e7          	jalr	ra # 60 <.LBB194+0x4>

0000000000000068 <.LVL13>:
        if(rt!=nullptr)return rt;
  68:	00051863          	bnez	a0,78 <.L5>

000000000000006c <.LBB198>:
        ptr_t rt=(tlsf_malloc(size));
  6c:	01800513          	li	a0,24

0000000000000070 <.LVL15>:
  70:	00000097          	auipc	ra,0x0
  74:	000080e7          	jalr	ra # 70 <.LVL15>

0000000000000078 <.L5>:
}
  78:	01813083          	ld	ra,24(sp)
    reservedNode=(klib::ListNode<Span>*)(alloc(sizeof(klib::ListNode<Span>)));
  7c:	02a43023          	sd	a0,32(s0)
}
  80:	01013403          	ld	s0,16(sp)

0000000000000084 <.LVL17>:
  84:	00813483          	ld	s1,8(sp)

0000000000000088 <.LVL18>:
  88:	02010113          	addi	sp,sp,32
  8c:	00008067          	ret

0000000000000090 <_ZN5alloc15HeapMgrGrowableC1ERNS_7HeapMgrERNS_7PageMgrE>:
HeapMgrGrowable::HeapMgrGrowable(HeapMgr &other,PageMgr &pmgr):pmgr(pmgr),HeapMgr(other),growsize(2){
  90:	0005b783          	ld	a5,0(a1)
  94:	ff010113          	addi	sp,sp,-16
  98:	00813023          	sd	s0,0(sp)
  9c:	00113423          	sd	ra,8(sp)
  a0:	00f53023          	sd	a5,0(a0)
  a4:	00200793          	li	a5,2
  a8:	00050413          	mv	s0,a0
  ac:	00c53423          	sd	a2,8(a0)

00000000000000b0 <.LBB202>:
  b0:	00053c23          	sd	zero,24(a0)
  b4:	00053823          	sd	zero,16(a0)

00000000000000b8 <.LBE202>:
  b8:	02f52423          	sw	a5,40(a0)

00000000000000bc <.LBB204>:
        ptr_t rt=(tlsf_malloc(size));
  bc:	01800513          	li	a0,24

00000000000000c0 <.LVL23>:
  c0:	00000097          	auipc	ra,0x0
  c4:	000080e7          	jalr	ra # c0 <.LVL23>

00000000000000c8 <.LVL24>:
        if(rt!=nullptr)return rt;
  c8:	00051863          	bnez	a0,d8 <.L8>

00000000000000cc <.LBB208>:
        ptr_t rt=(tlsf_malloc(size));
  cc:	01800513          	li	a0,24

00000000000000d0 <.LVL26>:
  d0:	00000097          	auipc	ra,0x0
  d4:	000080e7          	jalr	ra # d0 <.LVL26>

00000000000000d8 <.L8>:
}
  d8:	00813083          	ld	ra,8(sp)
    reservedNode=(klib::ListNode<Span>*)(alloc(sizeof(klib::ListNode<Span>)));
  dc:	02a43023          	sd	a0,32(s0)
}
  e0:	00013403          	ld	s0,0(sp)

00000000000000e4 <.LVL28>:
  e4:	01010113          	addi	sp,sp,16
  e8:	00008067          	ret

00000000000000ec <_ZN5alloc15HeapMgrGrowableD1Ev>:
HeapMgrGrowable::~HeapMgrGrowable(){
  ec:	fd010113          	addi	sp,sp,-48
  f0:	00913c23          	sd	s1,24(sp)

00000000000000f4 <.LBB247>:
    DBG(printf("%s()\n",__func__);)
  f4:	00000597          	auipc	a1,0x0
  f8:	00058593          	mv	a1,a1

00000000000000fc <.LBE247>:
HeapMgrGrowable::~HeapMgrGrowable(){
  fc:	00050493          	mv	s1,a0

0000000000000100 <.LBB248>:
    DBG(printf("%s()\n",__func__);)
 100:	00000517          	auipc	a0,0x0
 104:	00050513          	mv	a0,a0

0000000000000108 <.LBE248>:
HeapMgrGrowable::~HeapMgrGrowable(){
 108:	02113423          	sd	ra,40(sp)
 10c:	02813023          	sd	s0,32(sp)
 110:	01213823          	sd	s2,16(sp)
 114:	01313423          	sd	s3,8(sp)
 118:	01413023          	sd	s4,0(sp)

000000000000011c <.LBB249>:
    DBG(printf("%s()\n",__func__);)
 11c:	00000097          	auipc	ra,0x0
 120:	000080e7          	jalr	ra # 11c <.LBB249>

0000000000000124 <.LVL31>:
        printf("pool=%p\n",pool);
 124:	0004b583          	ld	a1,0(s1)
 128:	00000517          	auipc	a0,0x0
 12c:	00050513          	mv	a0,a0
 130:	00000097          	auipc	ra,0x0
 134:	000080e7          	jalr	ra # 130 <.LVL31+0xc>

0000000000000138 <.LVL32>:
        tlsf_walk_pool(pool);
 138:	0004b503          	ld	a0,0(s1)
 13c:	00000097          	auipc	ra,0x0
 140:	000080e7          	jalr	ra # 13c <.LVL32+0x4>

0000000000000144 <.LVL33>:
        if(!dynPages.empty())for(auto node=dynPages.head;node->iter.next!=nullptr;node=node->iter.next){
 144:	0104b403          	ld	s0,16(s1)
 148:	08040263          	beqz	s0,1cc <.L10>

000000000000014c <.LBB231>:
 14c:	01043783          	ld	a5,16(s0)
 150:	02078463          	beqz	a5,178 <.L12>

0000000000000154 <.L13>:
    // struct alignas(4096) Page{char raw[4096];};
    union PageTableEntry;
    typedef PageTableEntry* pgtbl_t;
    typedef xlen_t PageNum;
    typedef uint8_t perm_t;
    inline xlen_t pn2addr(xlen_t pn){ return pn<<12; }
 154:	00043503          	ld	a0,0(s0)

0000000000000158 <.LBE232>:
            tlsf_walk_pool((ptr_t)vm::pn2addr(node->data.first));
 158:	00c51513          	slli	a0,a0,0xc
 15c:	00000097          	auipc	ra,0x0
 160:	000080e7          	jalr	ra # 15c <.LBE232+0x4>

0000000000000164 <.LVL37>:
        if(!dynPages.empty())for(auto node=dynPages.head;node->iter.next!=nullptr;node=node->iter.next){
 164:	01043403          	ld	s0,16(s0)
 168:	01043783          	ld	a5,16(s0)
 16c:	fe0794e3          	bnez	a5,154 <.L13>

0000000000000170 <.LBE231>:
    while(!dynPages.empty()){
 170:	0104b403          	ld	s0,16(s1)

0000000000000174 <.LVL39>:
 174:	04040c63          	beqz	s0,1cc <.L10>

0000000000000178 <.L12>:
        DBG(printf("0x%lx %d\n",span.first,span.second);)
 178:	00000a17          	auipc	s4,0x0
 17c:	000a0a13          	mv	s4,s4
 180:	0340006f          	j	1b4 <.L18>

0000000000000184 <.L16>:
    push_front(newNode);
  }
  inline T pop_front(){
    T rt=head->data;
    if(head==tail)tail=nullptr;
    head=head->iter.next;
 184:	01043503          	ld	a0,16(s0)
 188:	00a4b823          	sd	a0,16(s1)
    delete head;
 18c:	00050663          	beqz	a0,198 <.L17>

0000000000000190 <.LBB237>:
        if(rt!=nullptr)return rt;
        growHeap();
    }
    return nullptr;
}
void HeapMgr::free(ptr_t ptr){ tlsf_free(ptr); }
 190:	00000097          	auipc	ra,0x0
 194:	000080e7          	jalr	ra # 190 <.LBB237>

0000000000000198 <.L17>:
        DBG(printf("0x%lx %d\n",span.first,span.second);)
 198:	00098613          	mv	a2,s3
 19c:	00090593          	mv	a1,s2
 1a0:	000a0513          	mv	a0,s4
 1a4:	00000097          	auipc	ra,0x0
 1a8:	000080e7          	jalr	ra # 1a4 <.L17+0xc>

00000000000001ac <.LBE234>:
    while(!dynPages.empty()){
 1ac:	0104b403          	ld	s0,16(s1)
 1b0:	00040e63          	beqz	s0,1cc <.L10>

00000000000001b4 <.L18>:
    if(head==tail)tail=nullptr;
 1b4:	0184b783          	ld	a5,24(s1)
    T rt=head->data;
 1b8:	00043903          	ld	s2,0(s0)

00000000000001bc <.LVL46>:
 1bc:	00842983          	lw	s3,8(s0)

00000000000001c0 <.LVL47>:
    if(head==tail)tail=nullptr;
 1c0:	fcf412e3          	bne	s0,a5,184 <.L16>
 1c4:	0004bc23          	sd	zero,24(s1)
 1c8:	fbdff06f          	j	184 <.L16>

00000000000001cc <.L10>:
}
 1cc:	02813083          	ld	ra,40(sp)
 1d0:	02013403          	ld	s0,32(sp)
 1d4:	01813483          	ld	s1,24(sp)

00000000000001d8 <.LVL49>:
 1d8:	01013903          	ld	s2,16(sp)
 1dc:	00813983          	ld	s3,8(sp)
 1e0:	00013a03          	ld	s4,0(sp)
 1e4:	03010113          	addi	sp,sp,48
 1e8:	00008067          	ret

00000000000001ec <_ZN5alloc7HeapMgr5allocEm>:
ptr_t HeapMgr::alloc(xlen_t size){
 1ec:	ff010113          	addi	sp,sp,-16

00000000000001f0 <.LBB252>:
        ptr_t rt=(tlsf_malloc(size));
 1f0:	00058513          	mv	a0,a1

00000000000001f4 <.LBE252>:
ptr_t HeapMgr::alloc(xlen_t size){
 1f4:	00813023          	sd	s0,0(sp)
 1f8:	00113423          	sd	ra,8(sp)
 1fc:	00058413          	mv	s0,a1

0000000000000200 <.LBB253>:
        ptr_t rt=(tlsf_malloc(size));
 200:	00000097          	auipc	ra,0x0
 204:	000080e7          	jalr	ra # 200 <.LBB253>

0000000000000208 <.LVL52>:
        if(rt!=nullptr)return rt;
 208:	00051e63          	bnez	a0,224 <.L27>

000000000000020c <.LBB254>:
        ptr_t rt=(tlsf_malloc(size));
 20c:	00040513          	mv	a0,s0

0000000000000210 <.LBE254>:
}
 210:	00013403          	ld	s0,0(sp)

0000000000000214 <.LVL55>:
 214:	00813083          	ld	ra,8(sp)
 218:	01010113          	addi	sp,sp,16

000000000000021c <.LBB255>:
        ptr_t rt=(tlsf_malloc(size));
 21c:	00000317          	auipc	t1,0x0
 220:	00030067          	jr	t1 # 21c <.LBB255>

0000000000000224 <.L27>:
}
 224:	00813083          	ld	ra,8(sp)
 228:	00013403          	ld	s0,0(sp)

000000000000022c <.LVL57>:
 22c:	01010113          	addi	sp,sp,16
 230:	00008067          	ret

0000000000000234 <_ZN5alloc7HeapMgr14alligned_allocEmm>:
ptr_t HeapMgr::alligned_alloc(xlen_t size,xlen_t alignment){
 234:	fe010113          	addi	sp,sp,-32

0000000000000238 <.LBB261>:
        ptr_t rt=(tlsf_memalign(alignment,size));
 238:	00060513          	mv	a0,a2

000000000000023c <.LBE261>:
ptr_t HeapMgr::alligned_alloc(xlen_t size,xlen_t alignment){
 23c:	00813823          	sd	s0,16(sp)
 240:	00913423          	sd	s1,8(sp)
 244:	00113c23          	sd	ra,24(sp)
 248:	00060413          	mv	s0,a2
 24c:	00058493          	mv	s1,a1

0000000000000250 <.LBB262>:
        ptr_t rt=(tlsf_memalign(alignment,size));
 250:	00000097          	auipc	ra,0x0
 254:	000080e7          	jalr	ra # 250 <.LBB262>

0000000000000258 <.LVL60>:
        if(rt!=nullptr)return rt;
 258:	02051263          	bnez	a0,27c <.L30>

000000000000025c <.LBB263>:
        ptr_t rt=(tlsf_memalign(alignment,size));
 25c:	00040513          	mv	a0,s0

0000000000000260 <.LBE263>:
}
 260:	01013403          	ld	s0,16(sp)

0000000000000264 <.LVL63>:
 264:	01813083          	ld	ra,24(sp)

0000000000000268 <.LBB264>:
        ptr_t rt=(tlsf_memalign(alignment,size));
 268:	00048593          	mv	a1,s1

000000000000026c <.LBE264>:
}
 26c:	00813483          	ld	s1,8(sp)

0000000000000270 <.LVL64>:
 270:	02010113          	addi	sp,sp,32

0000000000000274 <.LBB265>:
        ptr_t rt=(tlsf_memalign(alignment,size));
 274:	00000317          	auipc	t1,0x0
 278:	00030067          	jr	t1 # 274 <.LBB265>

000000000000027c <.L30>:
}
 27c:	01813083          	ld	ra,24(sp)
 280:	01013403          	ld	s0,16(sp)

0000000000000284 <.LVL66>:
 284:	00813483          	ld	s1,8(sp)

0000000000000288 <.LVL67>:
 288:	02010113          	addi	sp,sp,32
 28c:	00008067          	ret

0000000000000290 <_ZN5alloc7HeapMgr4freeEPv>:
void HeapMgr::free(ptr_t ptr){ tlsf_free(ptr); }
 290:	00058513          	mv	a0,a1

0000000000000294 <.LVL69>:
 294:	00000317          	auipc	t1,0x0
 298:	00030067          	jr	t1 # 294 <.LVL69>

000000000000029c <_ZN5alloc7PageMgrD1Ev>:
    DBG(
        this->print();
        printf("PageMgr::PageMgr() over\n");
    )
}
PageMgr::~PageMgr(){ delete[] buddyNodes; }
 29c:	02053503          	ld	a0,32(a0) # 148 <.LVL33+0x4>

00000000000002a0 <.LVL72>:
 2a0:	02050063          	beqz	a0,2c0 <.L40>

00000000000002a4 <.LBB271>:
 2a4:	ff010113          	addi	sp,sp,-16
 2a8:	00113423          	sd	ra,8(sp)

00000000000002ac <.LBB276>:
void HeapMgr::free(ptr_t ptr){ tlsf_free(ptr); }
 2ac:	00000097          	auipc	ra,0x0
 2b0:	000080e7          	jalr	ra # 2ac <.LBB276>

00000000000002b4 <.LBE276>:
PageMgr::~PageMgr(){ delete[] buddyNodes; }
 2b4:	00813083          	ld	ra,8(sp)
 2b8:	01010113          	addi	sp,sp,16
 2bc:	00008067          	ret

00000000000002c0 <.L40>:
 2c0:	00008067          	ret

00000000000002c4 <_ZN5alloc7PageMgr5allocEm>:

PageNum PageMgr::alloc(size_t pages){
 2c4:	fc010113          	addi	sp,sp,-64
 2c8:	01613023          	sd	s6,0(sp)
 2cc:	02113c23          	sd	ra,56(sp)
 2d0:	02813823          	sd	s0,48(sp)
 2d4:	02913423          	sd	s1,40(sp)
 2d8:	03213023          	sd	s2,32(sp)
 2dc:	01313c23          	sd	s3,24(sp)
 2e0:	01413823          	sd	s4,16(sp)
 2e4:	01513423          	sd	s5,8(sp)

00000000000002e8 <.LBB285>:
    for(i=0;a>1;a>>=1,i++)r|=a&1;
 2e8:	00100793          	li	a5,1

00000000000002ec <.LBE285>:
 2ec:	00050b13          	mv	s6,a0

00000000000002f0 <.LBB286>:
 2f0:	24b7f863          	bgeu	a5,a1,540 <.L59>
    int i=0,r=0;
 2f4:	00000a13          	li	s4,0
    for(i=0;a>1;a>>=1,i++)r|=a&1;
 2f8:	00000793          	li	a5,0
 2fc:	00100693          	li	a3,1

0000000000000300 <.L45>:
 300:	0015f713          	andi	a4,a1,1
 304:	0015d593          	srli	a1,a1,0x1

0000000000000308 <.LVL77>:
 308:	01476a33          	or	s4,a4,s4

000000000000030c <.LVL78>:
 30c:	0017879b          	addiw	a5,a5,1

0000000000000310 <.LVL79>:
 310:	fed598e3          	bne	a1,a3,300 <.L45>
 314:	014789bb          	addw	s3,a5,s4
 318:	00198a1b          	addiw	s4,s3,1

000000000000031c <.L44>:
    int rounded=klib::log2up(pages)+1; //biased size
    if(buddyNodes[0]<rounded) return 0;
 31c:	020b3783          	ld	a5,32(s6)
 320:	00000413          	li	s0,0
 324:	0007c783          	lbu	a5,0(a5)
 328:	1347c263          	blt	a5,s4,44c <.L43>

000000000000032c <.LBB287>:
    xlen_t node=0;
    for(xlen_t nd=0,size=rootOrder+1;rounded<=size;size-=1){ // find suitable node; size is biased size
 32c:	010b3483          	ld	s1,16(s6)
 330:	00148493          	addi	s1,s1,1

0000000000000334 <.LVL82>:
 334:	1d44ec63          	bltu	s1,s4,50c <.L61>

0000000000000338 <.LBE287>:
    xlen_t node=0;
 338:	00000913          	li	s2,0

000000000000033c <.LBB296>:
        DBG(printf("nd=%ld ",nd);)
 33c:	00000a97          	auipc	s5,0x0
 340:	000a8a93          	mv	s5,s5

0000000000000344 <.L52>:
 344:	00040593          	mv	a1,s0
 348:	000a8513          	mv	a0,s5
 34c:	00000097          	auipc	ra,0x0
 350:	000080e7          	jalr	ra # 34c <.L52+0x8>

0000000000000354 <.LVL84>:
        if(buddyNodes[nd]==size && buddyNodes[nd]==rounded) node=nd;
 354:	020b3783          	ld	a5,32(s6)
 358:	00878733          	add	a4,a5,s0
 35c:	00074703          	lbu	a4,0(a4)
 360:	12970663          	beq	a4,s1,48c <.L71>

0000000000000364 <.LBB288>:
            printf("buddy: |"); for(xlen_t i=0;i<buddyTreeSize;i++)printf("%d | ",buddyNodes[i]-1);printf("\n");
        }
    private:
        // void split();
        // void merge();
        inline constexpr xlen_t lsub(xlen_t x){return ((x+1)<<1)-1;}
 364:	00140413          	addi	s0,s0,1
 368:	00141593          	slli	a1,s0,0x1

000000000000036c <.LVL86>:
 36c:	fff58413          	addi	s0,a1,-1 # f3 <_ZN5alloc15HeapMgrGrowableD1Ev+0x7>

0000000000000370 <.LBE288>:
        else {
            if(buddyNodes[nd]==size){ // split to smaller
                buddyNodes[lsub(nd)]=buddyNodes[rsub(nd)]=size-1;
                nd=lsub(nd);
            } else {
                if(klib::min(buddyNodes[lsub(nd)],buddyNodes[rsub(nd)])>=rounded)
 370:	00878733          	add	a4,a5,s0
 374:	00b787b3          	add	a5,a5,a1
 378:	00074703          	lbu	a4,0(a4)

000000000000037c <.LBB297>:
 37c:	0007c683          	lbu	a3,0(a5)
 380:	0ff77793          	andi	a5,a4,255
 384:	00e6f463          	bgeu	a3,a4,38c <.L51>
 388:	0ff6f793          	andi	a5,a3,255

000000000000038c <.L51>:
 38c:	0f47c663          	blt	a5,s4,478 <.L50>

0000000000000390 <.LBB298>:
                    nd=buddyNodes[lsub(nd)]<buddyNodes[rsub(nd)]?lsub(nd):rsub(nd);
 390:	0ed77663          	bgeu	a4,a3,47c <.L70>

0000000000000394 <.L49>:
    for(xlen_t nd=0,size=rootOrder+1;rounded<=size;size-=1){ // find suitable node; size is biased size
 394:	fff48493          	addi	s1,s1,-1
 398:	fb44f6e3          	bgeu	s1,s4,344 <.L52>

000000000000039c <.L74>:
                else
                    nd=buddyNodes[lsub(nd)]>buddyNodes[rsub(nd)]?lsub(nd):rsub(nd);
            }
        }
    }
    assert(node>0);
 39c:	00190413          	addi	s0,s2,1
 3a0:	00145413          	srli	s0,s0,0x1
 3a4:	fff40413          	addi	s0,s0,-1
 3a8:	16090463          	beqz	s2,510 <.L47>

00000000000003ac <.L53>:
    buddyNodes[node]=0;
 3ac:	020b3783          	ld	a5,32(s6)
 3b0:	012787b3          	add	a5,a5,s2
 3b4:	00078023          	sb	zero,0(a5)

00000000000003b8 <.LBB299>:
    for(xlen_t nd=prnt(node);nd>0;nd=prnt(nd))
 3b8:	02040c63          	beqz	s0,3f0 <.L58>

00000000000003bc <.L54>:
        buddyNodes[nd]=klib::max(buddyNodes[lsub(nd)],buddyNodes[rsub(nd)]);
 3bc:	020b3783          	ld	a5,32(s6)

00000000000003c0 <.LBB300>:
 3c0:	00140713          	addi	a4,s0,1
 3c4:	00171693          	slli	a3,a4,0x1

00000000000003c8 <.LBB308>:
 3c8:	00d786b3          	add	a3,a5,a3
 3cc:	0006c603          	lbu	a2,0(a3)
 3d0:	fff6c683          	lbu	a3,-1(a3)

00000000000003d4 <.LBB302>:
        inline constexpr xlen_t rsub(xlen_t x){return ((x+1)<<1);}
        inline constexpr xlen_t prnt(xlen_t x){return ((x+1)>>1)-1;}
 3d4:	00175713          	srli	a4,a4,0x1

00000000000003d8 <.LBE302>:
 3d8:	008787b3          	add	a5,a5,s0

00000000000003dc <.LBB306>:
 3dc:	fff70413          	addi	s0,a4,-1

00000000000003e0 <.LBE306>:
 3e0:	00c6f463          	bgeu	a3,a2,3e8 <.L57>
 3e4:	00060693          	mv	a3,a2

00000000000003e8 <.L57>:
 3e8:	00d78023          	sb	a3,0(a5)

00000000000003ec <.LBB307>:
    for(xlen_t nd=prnt(node);nd>0;nd=prnt(nd))
 3ec:	fc0418e3          	bnez	s0,3bc <.L54>

00000000000003f0 <.L58>:
    buddyNodes[0]=klib::max(buddyNodes[lsub(0)],buddyNodes[rsub(0)]);
 3f0:	020b3783          	ld	a5,32(s6)
 3f4:	0027c683          	lbu	a3,2(a5)
 3f8:	0017c703          	lbu	a4,1(a5)
 3fc:	0cd76e63          	bltu	a4,a3,4d8 <.L72>

0000000000000400 <.L55>:
 400:	00e78023          	sb	a4,0(a5)
    
    PageNum ppn=start+(node+1-(1l<<(rootOrder+1-rounded)))*(1l<<(rounded-1));//((node+1)*rounded-(1l<<rootOrder));
 404:	010b3403          	ld	s0,16(s6)
 408:	00100713          	li	a4,1
 40c:	000b3783          	ld	a5,0(s6)
 410:	0014041b          	addiw	s0,s0,1
 414:	4144043b          	subw	s0,s0,s4
 418:	00871433          	sll	s0,a4,s0
 41c:	40870733          	sub	a4,a4,s0
 420:	01270433          	add	s0,a4,s2
 424:	013419b3          	sll	s3,s0,s3
 428:	00f98433          	add	s0,s3,a5

000000000000042c <.LVL101>:
    DBG(
 42c:	00040613          	mv	a2,s0
 430:	00090593          	mv	a1,s2
 434:	00000517          	auipc	a0,0x0
 438:	00050513          	mv	a0,a0
 43c:	00000097          	auipc	ra,0x0
 440:	000080e7          	jalr	ra # 43c <.LVL101+0x10>

0000000000000444 <.LVL102>:
        printf("node=0x%lx ppn=0x%lx\n",node,ppn);
    )
    assert(ppn<end);
 444:	008b3783          	ld	a5,8(s6)
 448:	08f47c63          	bgeu	s0,a5,4e0 <.L73>

000000000000044c <.L43>:
    return ppn;
}
 44c:	03813083          	ld	ra,56(sp)
 450:	00040513          	mv	a0,s0
 454:	03013403          	ld	s0,48(sp)
 458:	02813483          	ld	s1,40(sp)
 45c:	02013903          	ld	s2,32(sp)
 460:	01813983          	ld	s3,24(sp)
 464:	01013a03          	ld	s4,16(sp)
 468:	00813a83          	ld	s5,8(sp)
 46c:	00013b03          	ld	s6,0(sp)

0000000000000470 <.LVL104>:
 470:	04010113          	addi	sp,sp,64
 474:	00008067          	ret

0000000000000478 <.L50>:
                    nd=buddyNodes[lsub(nd)]>buddyNodes[rsub(nd)]?lsub(nd):rsub(nd);
 478:	f0e6eee3          	bltu	a3,a4,394 <.L49>

000000000000047c <.L70>:
    for(xlen_t nd=0,size=rootOrder+1;rounded<=size;size-=1){ // find suitable node; size is biased size
 47c:	fff48493          	addi	s1,s1,-1

0000000000000480 <.LVL107>:
                    nd=buddyNodes[lsub(nd)]>buddyNodes[rsub(nd)]?lsub(nd):rsub(nd);
 480:	00058413          	mv	s0,a1

0000000000000484 <.LVL108>:
    for(xlen_t nd=0,size=rootOrder+1;rounded<=size;size-=1){ // find suitable node; size is biased size
 484:	ed44f0e3          	bgeu	s1,s4,344 <.L52>

0000000000000488 <.LVL109>:
 488:	f15ff06f          	j	39c <.L74>

000000000000048c <.L71>:
        if(buddyNodes[nd]==size && buddyNodes[nd]==rounded) node=nd;
 48c:	0004871b          	sext.w	a4,s1
 490:	03470c63          	beq	a4,s4,4c8 <.L62>

0000000000000494 <.LBB290>:
        inline constexpr xlen_t rsub(xlen_t x){return ((x+1)<<1);}
 494:	00140413          	addi	s0,s0,1
 498:	00141413          	slli	s0,s0,0x1

000000000000049c <.LBE290>:
                buddyNodes[lsub(nd)]=buddyNodes[rsub(nd)]=size-1;
 49c:	fff4871b          	addiw	a4,s1,-1
 4a0:	008787b3          	add	a5,a5,s0
 4a4:	0ff77713          	andi	a4,a4,255
 4a8:	00e78023          	sb	a4,0(a5)

00000000000004ac <.LBB292>:
 4ac:	020b3783          	ld	a5,32(s6)

00000000000004b0 <.LBB295>:
        inline constexpr xlen_t lsub(xlen_t x){return ((x+1)<<1)-1;}
 4b0:	fff40413          	addi	s0,s0,-1

00000000000004b4 <.LBE295>:
    for(xlen_t nd=0,size=rootOrder+1;rounded<=size;size-=1){ // find suitable node; size is biased size
 4b4:	fff48493          	addi	s1,s1,-1

00000000000004b8 <.LVL114>:
                buddyNodes[lsub(nd)]=buddyNodes[rsub(nd)]=size-1;
 4b8:	008787b3          	add	a5,a5,s0
 4bc:	00e78023          	sb	a4,0(a5)

00000000000004c0 <.LBB311>:
    for(xlen_t nd=0,size=rootOrder+1;rounded<=size;size-=1){ // find suitable node; size is biased size
 4c0:	e944f2e3          	bgeu	s1,s4,344 <.L52>
 4c4:	ed9ff06f          	j	39c <.L74>

00000000000004c8 <.L62>:
 4c8:	fff48493          	addi	s1,s1,-1

00000000000004cc <.LVL117>:
 4cc:	00040913          	mv	s2,s0

00000000000004d0 <.LVL118>:
 4d0:	e744fae3          	bgeu	s1,s4,344 <.L52>

00000000000004d4 <.LVL119>:
 4d4:	ec9ff06f          	j	39c <.L74>

00000000000004d8 <.L72>:
    buddyNodes[0]=klib::max(buddyNodes[lsub(0)],buddyNodes[rsub(0)]);
 4d8:	00068713          	mv	a4,a3
 4dc:	f25ff06f          	j	400 <.L55>

00000000000004e0 <.L73>:
    assert(ppn<end);
 4e0:	09600613          	li	a2,150
 4e4:	00000597          	auipc	a1,0x0
 4e8:	00058593          	mv	a1,a1
 4ec:	00000517          	auipc	a0,0x0
 4f0:	00050513          	mv	a0,a0
 4f4:	00000097          	auipc	ra,0x0
 4f8:	000080e7          	jalr	ra # 4f4 <.L73+0x14>

00000000000004fc <.LVL122>:
 4fc:	00100513          	li	a0,1
 500:	00000097          	auipc	ra,0x0
 504:	000080e7          	jalr	ra # 500 <.LVL122+0x4>

0000000000000508 <.LVL123>:
 508:	f45ff06f          	j	44c <.L43>

000000000000050c <.L61>:
    for(xlen_t nd=0,size=rootOrder+1;rounded<=size;size-=1){ // find suitable node; size is biased size
 50c:	fff00413          	li	s0,-1

0000000000000510 <.L47>:
    assert(node>0);
 510:	08c00613          	li	a2,140
 514:	00000597          	auipc	a1,0x0
 518:	00058593          	mv	a1,a1
 51c:	00000517          	auipc	a0,0x0
 520:	00050513          	mv	a0,a0
 524:	00000097          	auipc	ra,0x0
 528:	000080e7          	jalr	ra # 524 <.L47+0x14>

000000000000052c <.LVL126>:
 52c:	00100513          	li	a0,1
 530:	00000097          	auipc	ra,0x0
 534:	000080e7          	jalr	ra # 530 <.LVL126+0x4>

0000000000000538 <.LVL127>:
 538:	00000913          	li	s2,0
 53c:	e71ff06f          	j	3ac <.L53>

0000000000000540 <.L59>:
 540:	00000993          	li	s3,0
 544:	00100a13          	li	s4,1
 548:	dd5ff06f          	j	31c <.L44>

000000000000054c <_ZN5alloc15HeapMgrGrowable8growHeapEv>:
    DBG(
 54c:	02852603          	lw	a2,40(a0) # 544 <.L59+0x4>
void HeapMgrGrowable::growHeap(){
 550:	fe010113          	addi	sp,sp,-32
 554:	00813823          	sd	s0,16(sp)
    DBG(
 558:	00000597          	auipc	a1,0x0
 55c:	00058593          	mv	a1,a1
void HeapMgrGrowable::growHeap(){
 560:	00050413          	mv	s0,a0
    DBG(
 564:	00000517          	auipc	a0,0x0
 568:	00050513          	mv	a0,a0

000000000000056c <.LVL130>:
void HeapMgrGrowable::growHeap(){
 56c:	00113c23          	sd	ra,24(sp)
 570:	00913423          	sd	s1,8(sp)
    DBG(
 574:	00000097          	auipc	ra,0x0
 578:	000080e7          	jalr	ra # 574 <.LVL130+0x8>

000000000000057c <.LVL131>:
    Span newSpan={pmgr.alloc(growsize),growsize};
 57c:	02842583          	lw	a1,40(s0)
 580:	00843503          	ld	a0,8(s0)
 584:	00000097          	auipc	ra,0x0
 588:	000080e7          	jalr	ra # 584 <.LVL131+0x8>

000000000000058c <.LVL132>:
 58c:	02842583          	lw	a1,40(s0)
    reservedNode->data=newSpan;
 590:	02043783          	ld	a5,32(s0)

0000000000000594 <.LBB314>:
 594:	00c51493          	slli	s1,a0,0xc

0000000000000598 <.LBE314>:
 598:	00a7b023          	sd	a0,0(a5)
 59c:	00b7a423          	sw	a1,8(a5)

00000000000005a0 <.LBB317>:
    tlsf_add_pool(newPool,growsize*vm::pageSize);
 5a0:	00048513          	mv	a0,s1

00000000000005a4 <.LVL135>:
 5a4:	00c59593          	slli	a1,a1,0xc

00000000000005a8 <.LVL136>:
 5a8:	00000097          	auipc	ra,0x0
 5ac:	000080e7          	jalr	ra # 5a8 <.LVL136>

00000000000005b0 <.LBB318>:
    if(tail)
 5b0:	01843703          	ld	a4,24(s0)

00000000000005b4 <.LBE318>:
    dynPages.push_back(reservedNode);
 5b4:	02043783          	ld	a5,32(s0)

00000000000005b8 <.LBB324>:
 5b8:	06070663          	beqz	a4,624 <.L76>

00000000000005bc <.LBB320>:
    nd->iter.next=cur->iter.next;
 5bc:	01073683          	ld	a3,16(a4)
 5c0:	00d7b823          	sd	a3,16(a5)
    cur->iter.next=nd;
 5c4:	00f73823          	sd	a5,16(a4)

00000000000005c8 <.LBE320>:
      list::insertAfter(tail,newNode),tail=newNode;
 5c8:	00f43c23          	sd	a5,24(s0)

00000000000005cc <.L77>:
        ptr_t rt=(tlsf_malloc(size));
 5cc:	01800513          	li	a0,24
 5d0:	00000097          	auipc	ra,0x0
 5d4:	000080e7          	jalr	ra # 5d0 <.L77+0x4>

00000000000005d8 <.LVL142>:
 5d8:	00050613          	mv	a2,a0

00000000000005dc <.LVL143>:
        if(rt!=nullptr)return rt;
 5dc:	00051a63          	bnez	a0,5f0 <.L78>

00000000000005e0 <.LBB329>:
        ptr_t rt=(tlsf_malloc(size));
 5e0:	01800513          	li	a0,24

00000000000005e4 <.LVL145>:
 5e4:	00000097          	auipc	ra,0x0
 5e8:	000080e7          	jalr	ra # 5e4 <.LVL145>

00000000000005ec <.LVL146>:
 5ec:	00050613          	mv	a2,a0

00000000000005f0 <.L78>:
    reservedNode=(klib::ListNode<Span>*)(alloc(sizeof(klib::ListNode<Span>)));
 5f0:	02c43023          	sd	a2,32(s0)
    DBG(
 5f4:	00048593          	mv	a1,s1
 5f8:	00000517          	auipc	a0,0x0
 5fc:	00050513          	mv	a0,a0

0000000000000600 <.LVL148>:
 600:	00000097          	auipc	ra,0x0
 604:	000080e7          	jalr	ra # 600 <.LVL148>

0000000000000608 <.LVL149>:
}
 608:	01013403          	ld	s0,16(sp)

000000000000060c <.LVL150>:
 60c:	01813083          	ld	ra,24(sp)
    DBG(
 610:	00048513          	mv	a0,s1
}
 614:	00813483          	ld	s1,8(sp)

0000000000000618 <.LVL151>:
 618:	02010113          	addi	sp,sp,32
    DBG(
 61c:	00000317          	auipc	t1,0x0
 620:	00030067          	jr	t1 # 61c <.LVL151+0x4>

0000000000000624 <.L76>:
      head=tail=newNode;
 624:	00f43c23          	sd	a5,24(s0)
 628:	00f43823          	sd	a5,16(s0)
 62c:	fa1ff06f          	j	5cc <.L77>

0000000000000630 <_ZN5alloc7PageMgr4freeEmi>:
PageNum PageMgr::free(PageNum ppn,int order){
 630:	fc010113          	addi	sp,sp,-64
 634:	01413823          	sd	s4,16(sp)
    xlen_t idx=pos2node(ppn-start,order);
 638:	00053a03          	ld	s4,0(a0) # 5f8 <.L78+0x8>

000000000000063c <.LBB344>:
        // inline constexpr xlen_t lsib(xlen_t x){return x-1;}
        // inline constexpr xlen_t rsib(xlen_t x){return x+1;}
        inline xlen_t pos2node(xlen_t pos,int order){
            DBG(assert(((pos>>rootOrder)&1)==0);)
 63c:	01052783          	lw	a5,16(a0)

0000000000000640 <.LBE344>:
PageNum PageMgr::free(PageNum ppn,int order){
 640:	02913423          	sd	s1,40(sp)
    xlen_t idx=pos2node(ppn-start,order);
 644:	41458a33          	sub	s4,a1,s4

0000000000000648 <.LBB358>:
 648:	00fa5733          	srl	a4,s4,a5

000000000000064c <.LBE358>:
PageNum PageMgr::free(PageNum ppn,int order){
 64c:	03213023          	sd	s2,32(sp)
 650:	02113c23          	sd	ra,56(sp)
 654:	02813823          	sd	s0,48(sp)
 658:	01313c23          	sd	s3,24(sp)
 65c:	01513423          	sd	s5,8(sp)

0000000000000660 <.LBB359>:
 660:	00177713          	andi	a4,a4,1

0000000000000664 <.LBE359>:
 664:	00050493          	mv	s1,a0
 668:	00060913          	mv	s2,a2

000000000000066c <.LBB360>:
 66c:	0e071263          	bnez	a4,750 <.L101>
 670:	000a0593          	mv	a1,s4

0000000000000674 <.L81>:
            xlen_t nd=0;
            for(int size=rootOrder-1;size>=order;size-=1){
 674:	0019099b          	addiw	s3,s2,1

0000000000000678 <.LBB346>:
 678:	fff7879b          	addiw	a5,a5,-1
 67c:	0ff9f993          	andi	s3,s3,255
 680:	1127c663          	blt	a5,s2,78c <.L82>

0000000000000684 <.LBE346>:
            xlen_t nd=0;
 684:	00000a93          	li	s5,0
 688:	0140006f          	j	69c <.L85>

000000000000068c <.L103>:
            for(int size=rootOrder-1;size>=order;size-=1){
 68c:	fff7879b          	addiw	a5,a5,-1

0000000000000690 <.LVL159>:
 690:	00160413          	addi	s0,a2,1

0000000000000694 <.LVL160>:
                if((pos>>size)&1)nd=rsub(nd);
 694:	00060a93          	mv	s5,a2
            for(int size=rootOrder-1;size>=order;size-=1){
 698:	0327c463          	blt	a5,s2,6c0 <.L102>

000000000000069c <.L85>:
                if((pos>>size)&1)nd=rsub(nd);
 69c:	00fa5733          	srl	a4,s4,a5
 6a0:	001a8693          	addi	a3,s5,1 # 33d <.LBB296+0x1>
 6a4:	00177713          	andi	a4,a4,1
 6a8:	00169613          	slli	a2,a3,0x1
 6ac:	fe0710e3          	bnez	a4,68c <.L103>

00000000000006b0 <.LBB347>:
            for(int size=rootOrder-1;size>=order;size-=1){
 6b0:	fff7879b          	addiw	a5,a5,-1

00000000000006b4 <.LBB350>:
        inline constexpr xlen_t lsub(xlen_t x){return ((x+1)<<1)-1;}
 6b4:	fff60a93          	addi	s5,a2,-1

00000000000006b8 <.LVL164>:
 6b8:	00060413          	mv	s0,a2

00000000000006bc <.LBE350>:
            for(int size=rootOrder-1;size>=order;size-=1){
 6bc:	ff27d0e3          	bge	a5,s2,69c <.L85>

00000000000006c0 <.L102>:
    DBG(printf("PageMgr::free(pos=%ld order=%d) idx=0x%lx\n",ppn-start,order,idx);)
 6c0:	000a8693          	mv	a3,s5
 6c4:	00090613          	mv	a2,s2
 6c8:	00000517          	auipc	a0,0x0
 6cc:	00050513          	mv	a0,a0
 6d0:	00000097          	auipc	ra,0x0
 6d4:	000080e7          	jalr	ra # 6d0 <.L102+0x10>

00000000000006d8 <.LVL166>:
    // xlen_t idx=ppn-start+(1l<<rootOrder);
    buddyNodes[idx]=order+1;
 6d8:	0204b703          	ld	a4,32(s1)

00000000000006dc <.LBB362>:
        inline constexpr xlen_t prnt(xlen_t x){return ((x+1)>>1)-1;}
 6dc:	00145793          	srli	a5,s0,0x1
 6e0:	fff78593          	addi	a1,a5,-1

00000000000006e4 <.LBE362>:
 6e4:	01570733          	add	a4,a4,s5
 6e8:	01370023          	sb	s3,0(a4)

00000000000006ec <.LBB367>:
    for(idx=prnt(idx);idx>0;idx=prnt(idx)){
 6ec:	04058263          	beqz	a1,730 <.L91>

00000000000006f0 <.L92>:
        buddyNodes[idx]=buddyNodes[lsub(idx)]==buddyNodes[rsub(idx)]?buddyNodes[lsub(idx)]+1:klib::max(buddyNodes[lsub(idx)],buddyNodes[rsub(idx)]); // the free'd leaf node ensures lsub or rsub being not null
 6f0:	0204b703          	ld	a4,32(s1)

00000000000006f4 <.LBB368>:
        inline constexpr xlen_t lsub(xlen_t x){return ((x+1)<<1)-1;}
 6f4:	00158793          	addi	a5,a1,1 # 559 <_ZN5alloc15HeapMgrGrowable8growHeapEv+0xd>
 6f8:	00179693          	slli	a3,a5,0x1

00000000000006fc <.LBE368>:
 6fc:	00d706b3          	add	a3,a4,a3
 700:	fff6c603          	lbu	a2,-1(a3)
 704:	0006c503          	lbu	a0,0(a3)
 708:	02a60e63          	beq	a2,a0,744 <.L104>
        inline constexpr xlen_t rsub(xlen_t x){return ((x+1)<<1);}
 70c:	00060693          	mv	a3,a2
 710:	00a67463          	bgeu	a2,a0,718 <.L90>
 714:	00050693          	mv	a3,a0

0000000000000718 <.L90>:
 718:	0ff6f613          	andi	a2,a3,255

000000000000071c <.L89>:
 71c:	00b70733          	add	a4,a4,a1

0000000000000720 <.LBB370>:
        inline constexpr xlen_t prnt(xlen_t x){return ((x+1)>>1)-1;}
 720:	0017d793          	srli	a5,a5,0x1

0000000000000724 <.LBE370>:
 724:	00c70023          	sb	a2,0(a4)

0000000000000728 <.LBB373>:
 728:	fff78593          	addi	a1,a5,-1

000000000000072c <.LBE373>:
    for(idx=prnt(idx);idx>0;idx=prnt(idx)){
 72c:	fc0592e3          	bnez	a1,6f0 <.L92>

0000000000000730 <.L91>:
    }
    buddyNodes[0]=klib::max(buddyNodes[lsub(0)],buddyNodes[rsub(0)]);
 730:	0204b783          	ld	a5,32(s1)
 734:	0027c683          	lbu	a3,2(a5)
 738:	0017c703          	lbu	a4,1(a5)
 73c:	06d76c63          	bltu	a4,a3,7b4 <.L105>
 740:	00e78023          	sb	a4,0(a5)

0000000000000744 <.L104>:
        buddyNodes[idx]=buddyNodes[lsub(idx)]==buddyNodes[rsub(idx)]?buddyNodes[lsub(idx)]+1:klib::max(buddyNodes[lsub(idx)],buddyNodes[rsub(idx)]); // the free'd leaf node ensures lsub or rsub being not null
 744:	0016061b          	addiw	a2,a2,1
 748:	0ff67613          	andi	a2,a2,255
 74c:	fd1ff06f          	j	71c <.L89>

0000000000000750 <.L101>:
            DBG(assert(((pos>>rootOrder)&1)==0);)
 750:	00058413          	mv	s0,a1
 754:	01e00613          	li	a2,30

0000000000000758 <.LVL179>:
 758:	00000597          	auipc	a1,0x0
 75c:	00058593          	mv	a1,a1

0000000000000760 <.LVL180>:
 760:	00000517          	auipc	a0,0x0
 764:	00050513          	mv	a0,a0
 768:	00000097          	auipc	ra,0x0
 76c:	000080e7          	jalr	ra # 768 <.LVL180+0x8>

0000000000000770 <.LVL181>:
 770:	00100513          	li	a0,1
 774:	00000097          	auipc	ra,0x0
 778:	000080e7          	jalr	ra # 774 <.LVL181+0x4>

000000000000077c <.LVL182>:
 77c:	0004b583          	ld	a1,0(s1)
 780:	0104a783          	lw	a5,16(s1)
 784:	40b405b3          	sub	a1,s0,a1
 788:	eedff06f          	j	674 <.L81>

000000000000078c <.L82>:
    DBG(printf("PageMgr::free(pos=%ld order=%d) idx=0x%lx\n",ppn-start,order,idx);)
 78c:	00000693          	li	a3,0
 790:	00090613          	mv	a2,s2
 794:	00000517          	auipc	a0,0x0
 798:	00050513          	mv	a0,a0
 79c:	00000097          	auipc	ra,0x0
 7a0:	000080e7          	jalr	ra # 79c <.L82+0x10>

00000000000007a4 <.LVL184>:
    buddyNodes[idx]=order+1;
 7a4:	0204b783          	ld	a5,32(s1)

00000000000007a8 <.LBB375>:
        inline constexpr xlen_t prnt(xlen_t x){return ((x+1)>>1)-1;}
 7a8:	fff00593          	li	a1,-1

00000000000007ac <.LBE375>:
 7ac:	01378023          	sb	s3,0(a5)

00000000000007b0 <.LBB376>:
    for(idx=prnt(idx);idx>0;idx=prnt(idx)){
 7b0:	f41ff06f          	j	6f0 <.L92>

00000000000007b4 <.L105>:
    buddyNodes[0]=klib::max(buddyNodes[lsub(0)],buddyNodes[rsub(0)]);
 7b4:	00068713          	mv	a4,a3
 7b8:	00e78023          	sb	a4,0(a5)

00000000000007bc <_ZN5alloc7PageMgrC1Emm>:
PageMgr::PageMgr(PageNum start,PageNum end):start(start),end(end){
 7bc:	fd010113          	addi	sp,sp,-48
 7c0:	02813023          	sd	s0,32(sp)
 7c4:	00913c23          	sd	s1,24(sp)
 7c8:	01213823          	sd	s2,16(sp)
 7cc:	02113423          	sd	ra,40(sp)
 7d0:	01313423          	sd	s3,8(sp)
 7d4:	00b53023          	sd	a1,0(a0) # 794 <.L82+0x8>
 7d8:	00c53423          	sd	a2,8(a0)

00000000000007dc <.LBB393>:
 7dc:	00050413          	mv	s0,a0

00000000000007e0 <.LBB413>:
    DBG(
 7e0:	00000517          	auipc	a0,0x0
 7e4:	00050513          	mv	a0,a0

00000000000007e8 <.LBE413>:
PageMgr::PageMgr(PageNum start,PageNum end):start(start),end(end){
 7e8:	00060493          	mv	s1,a2
 7ec:	00058913          	mv	s2,a1

00000000000007f0 <.LBB414>:
    DBG(
 7f0:	00000097          	auipc	ra,0x0
 7f4:	000080e7          	jalr	ra # 7f0 <.LBB414>

00000000000007f8 <.LVL189>:
    xlen_t pages=end-start;
 7f8:	412484b3          	sub	s1,s1,s2

00000000000007fc <.LBB394>:
    for(i=0;a>1;a>>=1,i++)r|=a&1;
 7fc:	00100793          	li	a5,1
 800:	1497fa63          	bgeu	a5,s1,954 <.L118>
 804:	00048793          	mv	a5,s1
 808:	00000713          	li	a4,0
    int i=0,r=0;
 80c:	00000693          	li	a3,0
    for(i=0;a>1;a>>=1,i++)r|=a&1;
 810:	00100593          	li	a1,1

0000000000000814 <.L108>:
 814:	0017f613          	andi	a2,a5,1
 818:	0017d793          	srli	a5,a5,0x1

000000000000081c <.LVL192>:
 81c:	00d666b3          	or	a3,a2,a3

0000000000000820 <.LVL193>:
 820:	0017071b          	addiw	a4,a4,1

0000000000000824 <.LVL194>:
 824:	feb798e3          	bne	a5,a1,814 <.L108>
 828:	00e686bb          	addw	a3,a3,a4

000000000000082c <.LVL195>:
 82c:	00200713          	li	a4,2
 830:	00d71733          	sll	a4,a4,a3
 834:	fff70713          	addi	a4,a4,-1

0000000000000838 <.L107>:
    DBG(printf("pages=%d order=%d rootOrder=%ld buddyTreeSize=%ld\n",pages,rootOrder,rootOrder,buddyTreeSize);)
 838:	00068613          	mv	a2,a3
 83c:	00048593          	mv	a1,s1
    rootOrder=klib::log2up(pages);
 840:	00d43823          	sd	a3,16(s0)
    buddyTreeSize=(1l<<rootOrder)*2-1;
 844:	00e43c23          	sd	a4,24(s0)
    DBG(printf("pages=%d order=%d rootOrder=%ld buddyTreeSize=%ld\n",pages,rootOrder,rootOrder,buddyTreeSize);)
 848:	00000517          	auipc	a0,0x0
 84c:	00050513          	mv	a0,a0
 850:	00000097          	auipc	ra,0x0
 854:	000080e7          	jalr	ra # 850 <.L107+0x18>

0000000000000858 <.LVL197>:
    buddyNodes=new uint8_t[buddyTreeSize];
 858:	01843983          	ld	s3,24(s0)

000000000000085c <.LBB397>:
        ptr_t rt=(tlsf_malloc(size));
 85c:	00098513          	mv	a0,s3
 860:	00000097          	auipc	ra,0x0
 864:	000080e7          	jalr	ra # 860 <.LBB397+0x4>

0000000000000868 <.LVL199>:
        if(rt!=nullptr)return rt;
 868:	00051863          	bnez	a0,878 <.L109>

000000000000086c <.LBB402>:
        ptr_t rt=(tlsf_malloc(size));
 86c:	00098513          	mv	a0,s3

0000000000000870 <.LVL201>:
 870:	00000097          	auipc	ra,0x0
 874:	000080e7          	jalr	ra # 870 <.LVL201>

0000000000000878 <.L109>:
    for(xlen_t i=1;i<buddyTreeSize;i++)buddyNodes[i]=0;
 878:	01843703          	ld	a4,24(s0)

000000000000087c <.LBE403>:
    buddyNodes=new uint8_t[buddyTreeSize];
 87c:	02a43023          	sd	a0,32(s0)

0000000000000880 <.LBB404>:
    for(xlen_t i=1;i<buddyTreeSize;i++)buddyNodes[i]=0;
 880:	00100793          	li	a5,1
 884:	00e7e663          	bltu	a5,a4,890 <.L111>
 888:	01c0006f          	j	8a4 <.L110>

000000000000088c <.L125>:
 88c:	02043503          	ld	a0,32(s0)

0000000000000890 <.L111>:
 890:	00f50533          	add	a0,a0,a5
 894:	00050023          	sb	zero,0(a0) # 848 <.L107+0x10>
 898:	01843703          	ld	a4,24(s0)
 89c:	00178793          	addi	a5,a5,1
 8a0:	fee7e6e3          	bltu	a5,a4,88c <.L125>

00000000000008a4 <.L110>:
    for(int i=rootOrder;i>=0;i--){
 8a4:	01042603          	lw	a2,16(s0)

00000000000008a8 <.LVL208>:
 8a8:	02064663          	bltz	a2,8d4 <.L112>
        if((pages>>i)&1){
 8ac:	00c4d7b3          	srl	a5,s1,a2
 8b0:	0017f793          	andi	a5,a5,1
 8b4:	0a079663          	bnez	a5,960 <.L113>
    for(int i=rootOrder;i>=0;i--){
 8b8:	fff00713          	li	a4,-1
 8bc:	0100006f          	j	8cc <.L114>

00000000000008c0 <.L115>:
        if((pages>>i)&1){
 8c0:	00c4d7b3          	srl	a5,s1,a2
 8c4:	0017f793          	andi	a5,a5,1
 8c8:	08079c63          	bnez	a5,960 <.L113>

00000000000008cc <.L114>:
    for(int i=rootOrder;i>=0;i--){
 8cc:	fff6061b          	addiw	a2,a2,-1

00000000000008d0 <.LVL211>:
 8d0:	fee618e3          	bne	a2,a4,8c0 <.L115>

00000000000008d4 <.L112>:
            printf("buddy: |"); for(xlen_t i=0;i<buddyTreeSize;i++)printf("%d | ",buddyNodes[i]-1);printf("\n");
 8d4:	00000517          	auipc	a0,0x0
 8d8:	00050513          	mv	a0,a0
 8dc:	00000097          	auipc	ra,0x0
 8e0:	000080e7          	jalr	ra # 8dc <.L112+0x8>

00000000000008e4 <.LBB410>:
 8e4:	01843783          	ld	a5,24(s0)
 8e8:	00000493          	li	s1,0

00000000000008ec <.LVL214>:
 8ec:	00000917          	auipc	s2,0x0
 8f0:	00090913          	mv	s2,s2

00000000000008f4 <.LVL215>:
 8f4:	02078663          	beqz	a5,920 <.L117>

00000000000008f8 <.L116>:
 8f8:	02043783          	ld	a5,32(s0)
 8fc:	00090513          	mv	a0,s2
 900:	009787b3          	add	a5,a5,s1
 904:	0007c583          	lbu	a1,0(a5)
 908:	00148493          	addi	s1,s1,1

000000000000090c <.LVL217>:
 90c:	fff5859b          	addiw	a1,a1,-1
 910:	00000097          	auipc	ra,0x0
 914:	000080e7          	jalr	ra # 910 <.LVL217+0x4>

0000000000000918 <.LVL218>:
 918:	01843783          	ld	a5,24(s0)
 91c:	fcf4eee3          	bltu	s1,a5,8f8 <.L116>

0000000000000920 <.L117>:
 920:	00a00513          	li	a0,10
 924:	00000097          	auipc	ra,0x0
 928:	000080e7          	jalr	ra # 924 <.L117+0x4>

000000000000092c <.LBE408>:
}
 92c:	02013403          	ld	s0,32(sp)

0000000000000930 <.LVL221>:
 930:	02813083          	ld	ra,40(sp)
 934:	01813483          	ld	s1,24(sp)
 938:	01013903          	ld	s2,16(sp)
 93c:	00813983          	ld	s3,8(sp)

0000000000000940 <.LBB415>:
    DBG(
 940:	00000517          	auipc	a0,0x0
 944:	00050513          	mv	a0,a0

0000000000000948 <.LBE415>:
}
 948:	03010113          	addi	sp,sp,48

000000000000094c <.LBB416>:
    DBG(
 94c:	00000317          	auipc	t1,0x0
 950:	00030067          	jr	t1 # 94c <.LBB416>

0000000000000954 <.L118>:
 954:	00100713          	li	a4,1
 958:	00000693          	li	a3,0
 95c:	eddff06f          	j	838 <.L107>

0000000000000960 <.L113>:
            free(base,i);
 960:	00090593          	mv	a1,s2
 964:	00040513          	mv	a0,s0
 968:	00000097          	auipc	ra,0x0
 96c:	000080e7          	jalr	ra # 968 <.L113+0x8>

Disassembly of section .bss:

0000000000000000 <pages>:
	...

00000000000f7000 <pool>:
	...

Disassembly of section .rodata.str1.8:

0000000000000000 <.LC0>:
   0:	487e                	lw	a6,220(sp)
   2:	6165                	addi	sp,sp,112
   4:	4d70                	lw	a2,92(a0)
   6:	72477267          	0x72477267
   a:	6261776f          	jal	a4,17630 <.LLST42+0x15afa>
   e:	656c                	ld	a1,200(a0)
	...

0000000000000018 <.LC1>:
  18:	7325                	lui	t1,0xfffe9
  1a:	2928                	fld	fa0,80(a0)
  1c:	000a                	c.slli	zero,0x2
	...

0000000000000020 <.LC2>:
  20:	6f70                	ld	a2,216(a4)
  22:	253d6c6f          	jal	s8,d6a74 <.LLST42+0xd4f3e>
  26:	0a70                	addi	a2,sp,284
	...

0000000000000030 <.LC3>:
  30:	7830                	ld	a2,112(s0)
  32:	6c25                	lui	s8,0x9
  34:	2078                	fld	fa4,192(s0)
  36:	6425                	lui	s0,0x9
  38:	000a                	c.slli	zero,0x2
  3a:	0000                	unimp
  3c:	0000                	unimp
	...

0000000000000040 <.LC4>:
  40:	646e                	ld	s0,216(sp)
  42:	253d                	addiw	a0,a0,15
  44:	646c                	ld	a1,200(s0)
  46:	0020                	addi	s0,sp,8

0000000000000048 <.LC5>:
  48:	6e72656b          	0x6e72656b
  4c:	6c65                	lui	s8,0x19
  4e:	6c6c612f          	0x6c6c612f
  52:	632e636f          	jal	t1,e6684 <.LLST42+0xe4b4e>
  56:	          	beq	sp,s4,776 <.LVL181+0x6>

0000000000000058 <.LC6>:
  58:	7341                	lui	t1,0xffff0
  5a:	74726573          	csrrsi	a0,0x747,4
  5e:	6f69                	lui	t5,0x1a
  60:	206e                	fld	ft0,216(sp)
  62:	6166                	ld	sp,88(sp)
  64:	6c69                	lui	s8,0x1a
  66:	6120                	ld	s0,64(a0)
  68:	2074                	fld	fa3,192(s0)
  6a:	7325                	lui	t1,0xfffe9
  6c:	253a                	fld	fa0,392(sp)
  6e:	0a64                	addi	s1,sp,284
	...

0000000000000078 <.LC7>:
  78:	6f6e                	ld	t5,216(sp)
  7a:	6564                	ld	s1,200(a0)
  7c:	303d                	0x303d
  7e:	2578                	fld	fa4,200(a0)
  80:	786c                	ld	a1,240(s0)
  82:	7020                	ld	s0,96(s0)
  84:	6e70                	ld	a2,216(a2)
  86:	303d                	0x303d
  88:	2578                	fld	fa4,200(a0)
  8a:	786c                	ld	a1,240(s0)
  8c:	000a                	c.slli	zero,0x2
	...

0000000000000090 <.LC8>:
  90:	776f7267          	0x776f7267
  94:	6548                	ld	a0,136(a0)
  96:	7061                	c.lui	zero,0xffff8
	...

00000000000000a0 <.LC9>:
  a0:	7325                	lui	t1,0xfffe9
  a2:	6728                	ld	a0,72(a4)
  a4:	6f72                	ld	t5,280(sp)
  a6:	7a697377          	0x7a697377
  aa:	3d65                	addiw	s10,s10,-7
  ac:	6425                	lui	s0,0x9
  ae:	0a29                	addi	s4,s4,10
	...

00000000000000b8 <.LC10>:
  b8:	656e                	ld	a0,216(sp)
  ba:	6f6f5077          	0x6f6f5077
  be:	3d6c                	fld	fa1,248(a0)
  c0:	7025                	c.lui	zero,0xfffe9
  c2:	7220                	ld	s0,96(a2)
  c4:	7365                	lui	t1,0xffff9
  c6:	7265                	lui	tp,0xffff9
  c8:	6576                	ld	a0,344(sp)
  ca:	4e64                	lw	s1,92(a2)
  cc:	3d65646f          	jal	s0,564a2 <.LLST42+0x5496c>
  d0:	7025                	c.lui	zero,0xfffe9
  d2:	000a                	c.slli	zero,0x2
  d4:	0000                	unimp
	...

00000000000000d8 <.LC11>:
  d8:	6e69                	lui	t3,0x1a
  da:	64756c63          	bltu	a0,t2,732 <.L91+0x2>
  de:	2f65                	addiw	t5,t5,25
  e0:	6c61                	lui	s8,0x18
  e2:	6f6c                	ld	a1,216(a4)
  e4:	68682e63          	0x68682e63
	...

00000000000000f0 <.LC12>:
  f0:	6150                	ld	a2,128(a0)
  f2:	674d6567          	0x674d6567
  f6:	3a72                	fld	fs4,312(sp)
  f8:	663a                	ld	a2,392(sp)
  fa:	6572                	ld	a0,280(sp)
  fc:	2865                	addiw	a6,a6,25
  fe:	6f70                	ld	a2,216(a4)
 100:	6c253d73          	csrrc	s10,0x6c2,a0
 104:	2064                	fld	fs1,192(s0)
 106:	6564726f          	jal	tp,4775c <.LLST42+0x45c26>
 10a:	3d72                	fld	fs10,312(sp)
 10c:	6425                	lui	s0,0x9
 10e:	2029                	0x2029
 110:	6469                	lui	s0,0x1a
 112:	3d78                	fld	fa4,248(a0)
 114:	7830                	ld	a2,112(s0)
 116:	6c25                	lui	s8,0x9
 118:	0a78                	addi	a4,sp,284
 11a:	0000                	unimp
 11c:	0000                	unimp
	...

0000000000000120 <.LC13>:
 120:	6150                	ld	a2,128(a0)
 122:	674d6567          	0x674d6567
 126:	2872                	fld	fa6,280(sp)
 128:	72617473          	csrrci	s0,0x726,2
 12c:	3d74                	fld	fa3,248(a0)
 12e:	6c25                	lui	s8,0x9
 130:	2c78                	fld	fa4,216(s0)
 132:	6e65                	lui	t3,0x19
 134:	3d64                	fld	fs1,248(a0)
 136:	6c25                	lui	s8,0x9
 138:	2978                	fld	fa4,208(a0)
 13a:	000a                	c.slli	zero,0x2
 13c:	0000                	unimp
	...

0000000000000140 <.LC14>:
 140:	6170                	ld	a2,192(a0)
 142:	3d736567          	0x3d736567
 146:	6425                	lui	s0,0x9
 148:	6f20                	ld	s0,88(a4)
 14a:	6472                	ld	s0,280(sp)
 14c:	7265                	lui	tp,0xffff9
 14e:	253d                	addiw	a0,a0,15
 150:	2064                	fld	fs1,192(s0)
 152:	6f72                	ld	t5,280(sp)
 154:	724f746f          	jal	s0,f7878 <pool+0x878>
 158:	6564                	ld	s1,200(a0)
 15a:	3d72                	fld	fs10,312(sp)
 15c:	6c25                	lui	s8,0x9
 15e:	2064                	fld	fs1,192(s0)
 160:	7562                	ld	a0,56(sp)
 162:	6464                	ld	s1,200(s0)
 164:	5479                	li	s0,-2
 166:	6572                	ld	a0,280(sp)
 168:	5365                	li	t1,-7
 16a:	7a69                	lui	s4,0xffffa
 16c:	3d65                	addiw	s10,s10,-7
 16e:	6c25                	lui	s8,0x9
 170:	0a64                	addi	s1,sp,284
 172:	0000                	unimp
 174:	0000                	unimp
	...

0000000000000178 <.LC15>:
 178:	7562                	ld	a0,56(sp)
 17a:	6464                	ld	s1,200(s0)
 17c:	3a79                	addiw	s4,s4,-2
 17e:	7c20                	ld	s0,120(s0)
	...

0000000000000188 <.LC16>:
 188:	6150                	ld	a2,128(a0)
 18a:	674d6567          	0x674d6567
 18e:	3a72                	fld	fs4,312(sp)
 190:	503a                	0x503a
 192:	6761                	lui	a4,0x18
 194:	4d65                	li	s10,25
 196:	29287267          	0x29287267
 19a:	6f20                	ld	s0,88(a4)
 19c:	6576                	ld	a0,344(sp)
 19e:	0072                	c.slli	zero,0x1c

00000000000001a0 <.LC17>:
 1a0:	6425                	lui	s0,0x9
 1a2:	7c20                	ld	s0,120(s0)
 1a4:	0020                	addi	s0,sp,8

Disassembly of section .gcc_except_table:

0000000000000000 <.LLSDA78>:
   0:	0003ffff          	0x3ffff

0000000000000004 <.LLSDA87>:
   4:	0003ffff          	0x3ffff

Disassembly of section .text.startup:

0000000000000000 <_GLOBAL__sub_I__ZN5alloc7HeapMgrC2EPvm>:
    // DBG(this->print();)
}
   0:	ff010113          	addi	sp,sp,-16
   4:	00813023          	sd	s0,0(sp)

0000000000000008 <.LBB435>:
    this->pool=addr;
   8:	00000517          	auipc	a0,0x0
   c:	00050513          	mv	a0,a0
  10:	00000417          	auipc	s0,0x0
  14:	00040413          	mv	s0,s0
    tlsf_create_with_pool(reinterpret_cast<ptr_t>(addr),len);
  18:	000025b7          	lui	a1,0x2

000000000000001c <.LBE435>:
}
  1c:	00113423          	sd	ra,8(sp)

0000000000000020 <.LBB436>:
    this->pool=addr;
  20:	00a43023          	sd	a0,0(s0) # 10 <.LBB435+0x8>
    tlsf_create_with_pool(reinterpret_cast<ptr_t>(addr),len);
  24:	00000097          	auipc	ra,0x0
  28:	000080e7          	jalr	ra # 24 <.LBB436+0x4>

000000000000002c <.LBE436>:
HeapMgr initHeapMgr(&pool,2*vm::pageSize);
  2c:	00040593          	mv	a1,s0

0000000000000030 <.LBE443>:
}
  30:	00013403          	ld	s0,0(sp)
  34:	00813083          	ld	ra,8(sp)

0000000000000038 <.LBB444>:
HeapMgr initHeapMgr(&pool,2*vm::pageSize);
  38:	00000617          	auipc	a2,0x0
  3c:	00060613          	mv	a2,a2

0000000000000040 <.LBB445>:
  40:	00000517          	auipc	a0,0x0
  44:	00050513          	mv	a0,a0

0000000000000048 <.LBE445>:
}
  48:	01010113          	addi	sp,sp,16

000000000000004c <.LBB446>:
HeapMgr initHeapMgr(&pool,2*vm::pageSize);
  4c:	00000317          	auipc	t1,0x0
  50:	00030067          	jr	t1 # 4c <.LBB446>

Disassembly of section .init_array:

0000000000000000 <.init_array>:
	...

Disassembly of section .sbss:

0000000000000000 <initHeapMgr>:
	...

Disassembly of section .sdata:

0000000000000000 <kHeapMgr>:
	...

Disassembly of section .debug_info:

0000000000000000 <.Ldebug_info0>:
       0:	2054                	fld	fa3,128(s0)
HeapMgr::~HeapMgr(){}
       2:	0000                	unimp
HeapMgr::HeapMgr(ptr_t addr,xlen_t len){
       4:	0004                	0x4
       6:	0000                	unimp
    this->pool=addr;
       8:	0000                	unimp
       a:	0108                	addi	a0,sp,128
HeapMgr::HeapMgr(ptr_t addr,xlen_t len){
       c:	0000                	unimp
       e:	0000                	unimp
    tlsf_create_with_pool(reinterpret_cast<ptr_t>(addr),len);
      10:	0004                	0x4
	...
HeapMgrGrowable::HeapMgrGrowable(ptr_t addr,xlen_t len,PageMgr &pmgr):HeapMgr(addr,len),pmgr(pmgr),growsize(2){
      26:	0000                	unimp
      28:	0200                	addi	s0,sp,256
      2a:	0000                	unimp
      2c:	0000                	unimp
      2e:	0105                	addi	sp,sp,1
      30:	0000350f          	0x350f
    this->pool=addr;
      34:	0300                	addi	s0,sp,384
      36:	0208                	addi	a0,sp,256
    tlsf_create_with_pool(reinterpret_cast<ptr_t>(addr),len);
      38:	0000                	unimp
      3a:	0000                	unimp
HeapMgrGrowable::HeapMgrGrowable(ptr_t addr,xlen_t len,PageMgr &pmgr):HeapMgr(addr,len),pmgr(pmgr),growsize(2){
      3c:	0205                	addi	tp,tp,1
      3e:	4819                	li	a6,6
    tlsf_create_with_pool(reinterpret_cast<ptr_t>(addr),len);
      40:	0000                	unimp
      42:	0400                	addi	s0,sp,512
      44:	00000037          	lui	zero,0x0
HeapMgrGrowable::HeapMgrGrowable(ptr_t addr,xlen_t len,PageMgr &pmgr):HeapMgr(addr,len),pmgr(pmgr),growsize(2){
      48:	0805                	addi	a6,a6,1
      4a:	00000007          	0x7
      4e:	0500                	addi	s0,sp,640
  inline list(){ head=tail=nullptr; }
      50:	0704                	addi	s1,sp,896
      52:	0000                	unimp
      54:	0000                	unimp
      56:	0002                	c.slli64	zero
      58:	0000                	unimp
      5a:	0500                	addi	s0,sp,640
        ptr_t rt=(tlsf_malloc(size));
      5c:	1804                	addi	s1,sp,48
      5e:	0062                	c.slli	zero,0x18
      60:	0000                	unimp
      62:	0105                	addi	sp,sp,1
      64:	0008                	0x8
      66:	0000                	unimp
        if(rt!=nullptr)return rt;
      68:	0600                	addi	s0,sp,768
      6a:	0504                	addi	s1,sp,640
        ptr_t rt=(tlsf_malloc(size));
      6c:	6e69                	lui	t3,0x1a
      6e:	0074                	addi	a3,sp,12
      70:	6904                	ld	s1,16(a0)
      72:	0000                	unimp
      74:	0500                	addi	s0,sp,640
      76:	0508                	addi	a0,sp,640
}
      78:	0000                	unimp
      7a:	0000                	unimp
    reservedNode=(klib::ListNode<Span>*)(alloc(sizeof(klib::ListNode<Span>)));
      7c:	7504                	ld	s1,40(a0)
      7e:	0000                	unimp
}
      80:	0200                	addi	s0,sp,256
      82:	0000                	unimp
      84:	0000                	unimp
      86:	d106                	sw	ra,160(sp)
      88:	00004817          	auipc	a6,0x4
      8c:	0500                	addi	s0,sp,640
      8e:	0508                	addi	a0,sp,640
HeapMgrGrowable::HeapMgrGrowable(HeapMgr &other,PageMgr &pmgr):pmgr(pmgr),HeapMgr(other),growsize(2){
      90:	0000                	unimp
      92:	0000                	unimp
      94:	1005                	c.nop	-31
      96:	0004                	0x4
      98:	0000                	unimp
      9a:	0700                	addi	s0,sp,896
      9c:	0000                	unimp
      9e:	0000                	unimp
      a0:	0105                	addi	sp,sp,1
      a2:	0006                	c.slli	zero,0x1
      a4:	0000                	unimp
      a6:	0500                	addi	s0,sp,640
      a8:	0502                	c.slli64	a0
      aa:	0000                	unimp
      ac:	0000                	unimp
      ae:	0205                	addi	tp,tp,1
      b0:	00000007          	0x7
      b4:	0800                	addi	s0,sp,16
      b6:	0000                	unimp
      b8:	0000                	unimp
      ba:	920b1307          	0x920b1307
        ptr_t rt=(tlsf_malloc(size));
      be:	0001                	nop
      c0:	0800                	addi	s0,sp,16
      c2:	0000                	unimp
      c4:	0000                	unimp
      c6:	eb0f1407          	0xeb0f1407
        if(rt!=nullptr)return rt;
      ca:	0000                	unimp
        ptr_t rt=(tlsf_malloc(size));
      cc:	0900                	addi	s0,sp,144
      ce:	7269                	lui	tp,0xffffa
      d0:	0071                	c.nop	28
      d2:	70181607          	0x70181607
      d6:	0000                	unimp
}
      d8:	0a00                	addi	s0,sp,272
      da:	000a                	c.slli	zero,0x2
    reservedNode=(klib::ListNode<Span>*)(alloc(sizeof(klib::ListNode<Span>)));
      dc:	0000                	unimp
      de:	0700                	addi	s0,sp,896
}
      e0:	007c1817          	auipc	a6,0x7c1
      e4:	0000                	unimp
      e6:	0000                	unimp
      e8:	1000                	addi	s0,sp,32
      ea:	0800                	addi	s0,sp,16
HeapMgrGrowable::~HeapMgrGrowable(){
      ec:	0000                	unimp
      ee:	0000                	unimp
      f0:	580f4707          	flq	fa4,1408(t5) # 1a580 <.LLST42+0x18a4a>
    DBG(printf("%s()\n",__func__);)
      f4:	0001                	nop
      f6:	0a00                	addi	s0,sp,272
      f8:	0000                	unimp
      fa:	0000                	unimp
HeapMgrGrowable::~HeapMgrGrowable(){
      fc:	7c184907          	flq	fs2,1985(a6) # 7c18a1 <pool+0x6ca8a1>
    DBG(printf("%s()\n",__func__);)
     100:	0000                	unimp
     102:	0000                	unimp
     104:	0000                	unimp
     106:	0a0c                	addi	a1,sp,272
HeapMgrGrowable::~HeapMgrGrowable(){
     108:	0000                	unimp
     10a:	0000                	unimp
     10c:	7c0d4a07          	flq	fs4,1984(s10)
     110:	0000                	unimp
     112:	0000                	unimp
     114:	0000                	unimp
     116:	0a0c                	addi	a1,sp,272
     118:	0000                	unimp
     11a:	0000                	unimp
    DBG(printf("%s()\n",__func__);)
     11c:	7c0d4b07          	flq	fs6,1984(s10)
     120:	0000                	unimp
     122:	0000                	unimp
        printf("pool=%p\n",pool);
     124:	0010                	0x10
     126:	0a0c                	addi	a1,sp,272
     128:	0000                	unimp
     12a:	0000                	unimp
     12c:	7c0d4c07          	flq	fs8,1984(s10)
     130:	0000                	unimp
     132:	0000                	unimp
     134:	0020                	addi	s0,sp,8
     136:	0a0c                	addi	a1,sp,272
        tlsf_walk_pool(pool);
     138:	0000                	unimp
     13a:	0000                	unimp
     13c:	7c0d4d07          	flq	fs10,1984(s10)
     140:	0000                	unimp
     142:	0000                	unimp
        if(!dynPages.empty())for(auto node=dynPages.head;node->iter.next!=nullptr;node=node->iter.next){
     144:	2000                	fld	fs0,0(s0)
     146:	0a0c                	addi	a1,sp,272
     148:	0000                	unimp
     14a:	0000                	unimp
     14c:	7c0d4e07          	flq	ft8,1984(s10)
     150:	0000                	unimp
     152:	0400                	addi	s0,sp,512
     154:	2000                	fld	fs0,0(s0)
     156:	000c                	0xc
            tlsf_walk_pool((ptr_t)vm::pn2addr(node->data.first));
     158:	0000000b          	0xb
     15c:	0700                	addi	s0,sp,896
     15e:	0f54                	addi	a3,sp,916
     160:	000a                	c.slli	zero,0x2
     162:	0000                	unimp
        if(!dynPages.empty())for(auto node=dynPages.head;node->iter.next!=nullptr;node=node->iter.next){
     164:	0700                	addi	s0,sp,896
     166:	1856                	slli	a6,a6,0x35
     168:	007c                	addi	a5,sp,12
     16a:	0000                	unimp
     16c:	0000                	unimp
     16e:	0200                	addi	s0,sp,256
    while(!dynPages.empty()){
     170:	000a                	c.slli	zero,0x2
     172:	0000                	unimp
     174:	0700                	addi	s0,sp,896
     176:	007c0d57          	0x7c0d57
        DBG(printf("0x%lx %d\n",span.first,span.second);)
     17a:	0000                	unimp
     17c:	bff8                	fsd	fa4,248(a5)
     17e:	0200                	addi	s0,sp,256
     180:	000a                	c.slli	zero,0x2
     182:	0000                	unimp
    head=head->iter.next;
     184:	0700                	addi	s0,sp,896
     186:	0d58                	addi	a4,sp,660
     188:	007c                	addi	a5,sp,12
     18a:	0000                	unimp
    delete head;
     18c:	4000                	lw	s0,0(s0)
     18e:	0200                	addi	s0,sp,256
void HeapMgr::free(ptr_t ptr){ tlsf_free(ptr); }
     190:	0000                	unimp
     192:	cd0c                	sw	a1,24(a0)
     194:	0000                	unimp
     196:	0c00                	addi	s0,sp,528
        DBG(printf("0x%lx %d\n",span.first,span.second);)
     198:	00da                	slli	ra,ra,0x16
     19a:	0000                	unimp
     19c:	f70c                	sd	a1,40(a4)
     19e:	0000                	unimp
     1a0:	0c00                	addi	s0,sp,528
     1a2:	00000107          	0x107
     1a6:	170c                	addi	a1,sp,928
     1a8:	0001                	nop
     1aa:	0c00                	addi	s0,sp,528
    while(!dynPages.empty()){
     1ac:	00000127          	0x127
     1b0:	370c                	fld	fa1,40(a4)
     1b2:	0001                	nop
    if(head==tail)tail=nullptr;
     1b4:	0c00                	addi	s0,sp,528
     1b6:	00000147          	fmsub.s	ft2,ft0,ft0,ft0,rne
    T rt=head->data;
     1ba:	600c                	ld	a1,0(s0)
     1bc:	0001                	nop
     1be:	0c00                	addi	s0,sp,528
    if(head==tail)tail=nullptr;
     1c0:	0170                	addi	a2,sp,140
     1c2:	0000                	unimp
     1c4:	800c                	0x800c
     1c6:	0001                	nop
     1c8:	0800                	addi	s0,sp,16
     1ca:	0000                	unimp
}
     1cc:	0000                	unimp
     1ce:	0802                	c.slli64	a6
     1d0:	0005430b          	0x5430b
     1d4:	0d00                	addi	s0,sp,656
     1d6:	0000                	unimp
     1d8:	0000                	unimp
     1da:	0290                	addi	a2,sp,320
     1dc:	02d1081b          	addiw	a6,sp,45
     1e0:	0000                	unimp
     1e2:	000e                	c.slli	zero,0x3
     1e4:	0000                	unimp
     1e6:	0200                	addi	s0,sp,256
     1e8:	041d                	addi	s0,s0,7
     1ea:	00000543          	fmadd.s	fa0,ft0,ft0,ft0,rne
ptr_t HeapMgr::alloc(xlen_t size){
     1ee:	0e00                	addi	s0,sp,784
        ptr_t rt=(tlsf_malloc(size));
     1f0:	0000                	unimp
     1f2:	0000                	unimp
ptr_t HeapMgr::alloc(xlen_t size){
     1f4:	1e02                	slli	t3,t3,0x20
     1f6:	8109                	srli	a0,a0,0x2
     1f8:	0000                	unimp
     1fa:	8000                	0x8000
     1fc:	000e                	c.slli	zero,0x3
     1fe:	0000                	unimp
        ptr_t rt=(tlsf_malloc(size));
     200:	0200                	addi	s0,sp,256
     202:	0e1e                	slli	t3,t3,0x7
     204:	0081                	addi	ra,ra,0
     206:	0000                	unimp
        if(rt!=nullptr)return rt;
     208:	0f88                	addi	a0,sp,976
     20a:	0000                	unimp
        ptr_t rt=(tlsf_malloc(size));
     20c:	0000                	unimp
     20e:	1f02                	slli	t5,t5,0x20
}
     210:	0016                	c.slli	zero,0x5
     212:	0000                	unimp
     214:	8100                	0x8100
     216:	0000                	unimp
     218:	2100                	fld	fs0,0(a0)
     21a:	0002                	c.slli64	zero
        ptr_t rt=(tlsf_malloc(size));
     21c:	2c00                	fld	fs0,24(s0)
     21e:	0002                	c.slli64	zero
     220:	1000                	addi	s0,sp,32
     222:	055f 0000 8111      	0x81110000055f
}
     228:	0000                	unimp
     22a:	0000                	unimp
     22c:	7012                	0x7012
     22e:	7475                	lui	s0,0xffffd
     230:	0200                	addi	s0,sp,256
     232:	0720                	addi	s0,sp,904
ptr_t HeapMgr::alligned_alloc(xlen_t size,xlen_t alignment){
     234:	0000                	unimp
     236:	0000                	unimp
        ptr_t rt=(tlsf_memalign(alignment,size));
     238:	0240                	addi	s0,sp,260
     23a:	0000                	unimp
ptr_t HeapMgr::alligned_alloc(xlen_t size,xlen_t alignment){
     23c:	0000024b          	fnmsub.s	ft4,ft0,ft0,ft0,rne
     240:	5f10                	lw	a2,56(a4)
     242:	0005                	c.nop	1
     244:	1100                	addi	s0,sp,160
     246:	00000553          	fadd.s	fa0,ft0,ft0,rne
     24a:	1200                	addi	s0,sp,288
     24c:	6f70                	ld	a2,216(a4)
     24e:	0070                	addi	a2,sp,12
        ptr_t rt=(tlsf_memalign(alignment,size));
     250:	2402                	fld	fs0,0(sp)
     252:	00000007          	0x7
     256:	5f00                	lw	s0,56(a4)
        if(rt!=nullptr)return rt;
     258:	0002                	c.slli64	zero
     25a:	6500                	ld	s0,8(a0)
        ptr_t rt=(tlsf_memalign(alignment,size));
     25c:	0002                	c.slli64	zero
     25e:	1000                	addi	s0,sp,32
}
     260:	055f 0000 1300      	0x13000000055f
     266:	00746567          	0x746567
        ptr_t rt=(tlsf_memalign(alignment,size));
     26a:	2702                	fld	fa4,0(sp)
}
     26c:	0004                	0x4
     26e:	0000                	unimp
     270:	5300                	lw	s0,32(a4)
     272:	0005                	c.nop	1
        ptr_t rt=(tlsf_memalign(alignment,size));
     274:	7d00                	ld	s0,56(a0)
     276:	0002                	c.slli64	zero
     278:	8300                	0x8300
     27a:	0002                	c.slli64	zero
}
     27c:	1000                	addi	s0,sp,32
     27e:	055f 0000 0f00      	0xf000000055f
     284:	0000                	unimp
     286:	0000                	unimp
     288:	2a02                	fld	fs4,0(sp)
     28a:	00000007          	0x7
     28e:	6500                	ld	s0,8(a0)
void HeapMgr::free(ptr_t ptr){ tlsf_free(ptr); }
     290:	0005                	c.nop	1
     292:	9b00                	0x9b00
     294:	0002                	c.slli64	zero
     296:	a100                	fsd	fs0,0(a0)
     298:	0002                	c.slli64	zero
     29a:	1000                	addi	s0,sp,32
PageMgr::~PageMgr(){ delete[] buddyNodes; }
     29c:	055f 0000 0f00      	0xf000000055f
     2a2:	0000                	unimp
     2a4:	0000                	unimp
     2a6:	2d02                	fld	fs10,0(sp)
     2a8:	0008                	0x8
     2aa:	0000                	unimp
void HeapMgr::free(ptr_t ptr){ tlsf_free(ptr); }
     2ac:	6500                	ld	s0,8(a0)
     2ae:	0005                	c.nop	1
     2b0:	b900                	fsd	fs0,48(a0)
     2b2:	0002                	c.slli64	zero
PageMgr::~PageMgr(){ delete[] buddyNodes; }
     2b4:	bf00                	fsd	fs0,56(a4)
     2b6:	0002                	c.slli64	zero
     2b8:	1000                	addi	s0,sp,32
     2ba:	055f 0000 1400      	0x14000000055f
     2c0:	0054                	addi	a3,sp,4
     2c2:	00000553          	fadd.s	fa0,ft0,ft0,rne
PageNum PageMgr::alloc(size_t pages){
     2c6:	0015                	c.nop	5
     2c8:	0000                	unimp
     2ca:	4800                	lw	s0,16(s0)
     2cc:	0000                	unimp
     2ce:	8000                	0x8000
     2d0:	0d00                	addi	s0,sp,656
     2d2:	0000                	unimp
     2d4:	0000                	unimp
     2d6:	0210                	addi	a2,sp,256
     2d8:	0a15                	addi	s4,s4,5
     2da:	0309                	addi	t1,t1,2
     2dc:	0000                	unimp
     2de:	000e                	c.slli	zero,0x3
     2e0:	0000                	unimp
     2e2:	0200                	addi	s0,sp,256
     2e4:	0816                	slli	a6,a6,0x5
     2e6:	0048                	addi	a0,sp,4
    for(i=0;a>1;a>>=1,i++)r|=a&1;
     2e8:	0000                	unimp
     2ea:	0e00                	addi	s0,sp,784
     2ec:	0000                	unimp
     2ee:	0000                	unimp
     2f0:	1602                	slli	a2,a2,0x20
     2f2:	6911                	lui	s2,0x4
    int i=0,r=0;
     2f4:	0000                	unimp
     2f6:	0800                	addi	s0,sp,16
    for(i=0;a>1;a>>=1,i++)r|=a&1;
     2f8:	5414                	lw	a3,40(s0)
     2fa:	0031                	c.nop	12
     2fc:	0048                	addi	a0,sp,4
     2fe:	0000                	unimp
     300:	5414                	lw	a3,40(s0)
     302:	0032                	c.slli	zero,0xc
     304:	0069                	c.nop	26
     306:	0000                	unimp
     308:	0400                	addi	s0,sp,512
     30a:	02d1                	addi	t0,t0,20
     30c:	0000                	unimp
     30e:	000d                	c.nop	3
     310:	0000                	unimp
     312:	1000                	addi	s0,sp,32
     314:	3c02                	fld	fs8,32(sp)
     316:	7008                	ld	a0,32(s0)
     318:	0004                	0x4
     31a:	0200                	addi	s0,sp,256
    if(buddyNodes[0]<rounded) return 0;
     31c:	0000                	unimp
     31e:	0000                	unimp
     320:	3d02                	fld	fs10,32(sp)
     322:	ac18                	fsd	fa4,24(s0)
     324:	0009                	c.nop	2
     326:	0e00                	addi	s0,sp,784
     328:	0000                	unimp
     32a:	0000                	unimp
    for(xlen_t nd=0,size=rootOrder+1;rounded<=size;size-=1){ // find suitable node; size is biased size
     32c:	3e02                	fld	ft8,32(sp)
     32e:	1b0d                	addi	s6,s6,-29
     330:	00000003          	lb	zero,0(zero) # 0 <.Ldebug_info0>
     334:	000e                	c.slli	zero,0x3
     336:	0000                	unimp
    xlen_t node=0;
     338:	0200                	addi	s0,sp,256
     33a:	031b0d3f 16080000 	0x16080000031b0d3f
        DBG(printf("nd=%ld ",nd);)
     342:	0000                	unimp
     344:	0000                	unimp
     346:	4002                	0x4002
     348:	000a                	c.slli	zero,0x2
     34a:	0000                	unimp
     34c:	5500                	lw	s0,40(a0)
     34e:	5b000003          	lb	zero,1456(zero) # 5b0 <.Ldebug_info0+0x5b0>
     352:	10000003          	lb	zero,256(zero) # 100 <.Ldebug_info0+0x100>
        if(buddyNodes[nd]==size && buddyNodes[nd]==rounded) node=nd;
     356:	09b2                	slli	s3,s3,0xc
     358:	0000                	unimp
     35a:	1700                	addi	s0,sp,928
     35c:	0000                	unimp
     35e:	0000                	unimp
     360:	4102                	lw	sp,0(sp)
     362:	0016                	c.slli	zero,0x5
        inline constexpr xlen_t lsub(xlen_t x){return ((x+1)<<1)-1;}
     364:	0000                	unimp
     366:	7600                	ld	s0,40(a2)
     368:	11000003          	lb	zero,272(zero) # 110 <.Ldebug_info0+0x110>
     36c:	0000031b          	sext.w	t1,zero
                if(klib::min(buddyNodes[lsub(nd)],buddyNodes[rsub(nd)])>=rounded)
     370:	1b11                	addi	s6,s6,-28
     372:	00000003          	lb	zero,0(zero) # 0 <.Ldebug_info0>
     376:	00000017          	auipc	zero,0x0
     37a:	0200                	addi	s0,sp,256
     37c:	1645                	addi	a2,a2,-15
     37e:	0000                	unimp
     380:	0000                	unimp
     382:	0391                	addi	t2,t2,4
     384:	0000                	unimp
     386:	1b11                	addi	s6,s6,-28
     388:	11000003          	lb	zero,272(zero) # 110 <.Ldebug_info0+0x110>
     38c:	0000031b          	sext.w	t1,zero
                    nd=buddyNodes[lsub(nd)]<buddyNodes[rsub(nd)]?lsub(nd):rsub(nd);
     390:	1600                	addi	s0,sp,800
     392:	0000                	unimp
    for(xlen_t nd=0,size=rootOrder+1;rounded<=size;size-=1){ // find suitable node; size is biased size
     394:	0000                	unimp
     396:	4902                	lw	s2,0(sp)
     398:	0000000f          	fence	unknown,unknown
    assert(node>0);
     39c:	a500                	fsd	fs0,8(a0)
     39e:	b0000003          	lb	zero,-1280(zero) # fffffffffffffb00 <pool+0xfffffffffff08b00>
     3a2:	10000003          	lb	zero,256(zero) # 100 <.Ldebug_info0+0x100>
     3a6:	09b2                	slli	s3,s3,0xc
     3a8:	0000                	unimp
     3aa:	1b11                	addi	s6,s6,-28
    buddyNodes[node]=0;
     3ac:	00000003          	lb	zero,0(zero) # 0 <.Ldebug_info0>
     3b0:	0016                	c.slli	zero,0x5
     3b2:	0000                	unimp
     3b4:	0200                	addi	s0,sp,256
     3b6:	00000f4f          	fnmadd.s	ft10,ft0,ft0,ft0,rne
    for(xlen_t nd=prnt(node);nd>0;nd=prnt(nd))
     3ba:	0000                	unimp
        buddyNodes[nd]=klib::max(buddyNodes[lsub(nd)],buddyNodes[rsub(nd)]);
     3bc:	03c4                	addi	s1,sp,452
     3be:	0000                	unimp
     3c0:	000003cf          	fnmadd.s	ft7,ft0,ft0,ft0,rne
     3c4:	b210                	fsd	fa2,32(a2)
     3c6:	0009                	c.nop	2
     3c8:	1100                	addi	s0,sp,160
     3ca:	09bd                	addi	s3,s3,15
     3cc:	0000                	unimp
     3ce:	1600                	addi	s0,sp,800
     3d0:	0000                	unimp
     3d2:	0000                	unimp
        inline constexpr xlen_t prnt(xlen_t x){return ((x+1)>>1)-1;}
     3d4:	5302                	lw	t1,32(sp)
     3d6:	0000000f          	fence	unknown,unknown
     3da:	e300                	sd	s0,0(a4)
     3dc:	ee000003          	lb	zero,-288(zero) # fffffffffffffee0 <pool+0xfffffffffff08ee0>
     3e0:	10000003          	lb	zero,256(zero) # 100 <.Ldebug_info0+0x100>
     3e4:	09b2                	slli	s3,s3,0xc
     3e6:	0000                	unimp
     3e8:	1b11                	addi	s6,s6,-28
     3ea:	00000003          	lb	zero,0(zero) # 0 <.Ldebug_info0>
    for(xlen_t nd=prnt(node);nd>0;nd=prnt(nd))
     3ee:	0016                	c.slli	zero,0x5
    buddyNodes[0]=klib::max(buddyNodes[lsub(0)],buddyNodes[rsub(0)]);
     3f0:	0000                	unimp
     3f2:	0200                	addi	s0,sp,256
     3f4:	0f59                	addi	t5,t5,22
     3f6:	0000                	unimp
     3f8:	0000                	unimp
     3fa:	0402                	c.slli64	s0
     3fc:	0000                	unimp
     3fe:	040d                	addi	s0,s0,3
     400:	0000                	unimp
     402:	b210                	fsd	fa2,32(a2)
    PageNum ppn=start+(node+1-(1l<<(rootOrder+1-rounded)))*(1l<<(rounded-1));//((node+1)*rounded-(1l<<rootOrder));
     404:	0009                	c.nop	2
     406:	1100                	addi	s0,sp,160
     408:	09bd                	addi	s3,s3,15
     40a:	0000                	unimp
     40c:	0f00                	addi	s0,sp,912
     40e:	0000                	unimp
     410:	0000                	unimp
     412:	5d02                	lw	s10,32(sp)
     414:	000c                	0xc
     416:	0000                	unimp
     418:	d100                	sw	s0,32(a0)
     41a:	0002                	c.slli64	zero
     41c:	2500                	fld	fs0,8(a0)
     41e:	0004                	0x4
     420:	2b00                	fld	fs0,16(a4)
     422:	0004                	0x4
     424:	1000                	addi	s0,sp,32
     426:	09b2                	slli	s3,s3,0xc
     428:	0000                	unimp
     42a:	0f00                	addi	s0,sp,912
    DBG(
     42c:	0000                	unimp
     42e:	0000                	unimp
     430:	6402                	ld	s0,0(sp)
     432:	0000000f          	fence	unknown,unknown
     436:	6500                	ld	s0,8(a0)
     438:	0005                	c.nop	1
     43a:	4300                	lw	s0,0(a4)
     43c:	0004                	0x4
     43e:	4900                	lw	s0,16(a0)
     440:	0004                	0x4
     442:	1000                	addi	s0,sp,32
    assert(ppn<end);
     444:	09b2                	slli	s3,s3,0xc
     446:	0000                	unimp
     448:	1600                	addi	s0,sp,800
     44a:	0000                	unimp
}
     44c:	0000                	unimp
     44e:	6702                	ld	a4,0(sp)
     450:	0000000f          	fence	unknown,unknown
     454:	5d00                	lw	s0,56(a0)
     456:	0004                	0x4
     458:	6800                	ld	s0,16(s0)
     45a:	0004                	0x4
     45c:	1000                	addi	s0,sp,32
     45e:	09b2                	slli	s3,s3,0xc
     460:	0000                	unimp
     462:	c311                	beqz	a4,466 <.Ldebug_info0+0x466>
     464:	0009                	c.nop	2
     466:	0000                	unimp
     468:	5414                	lw	a3,40(s0)
     46a:	d100                	sw	s0,32(a0)
     46c:	0002                	c.slli64	zero
     46e:	0000                	unimp
     470:	000d                	c.nop	3
     472:	0000                	unimp
     474:	1800                	addi	s0,sp,48
     476:	3302                	fld	ft6,32(sp)
                    nd=buddyNodes[lsub(nd)]>buddyNodes[rsub(nd)]?lsub(nd):rsub(nd);
     478:	e008                	sd	a0,0(s0)
     47a:	0004                	0x4
    for(xlen_t nd=0,size=rootOrder+1;rounded<=size;size-=1){ // find suitable node; size is biased size
     47c:	1800                	addi	s0,sp,48
     47e:	0208                	addi	a0,sp,256
                    nd=buddyNodes[lsub(nd)]>buddyNodes[rsub(nd)]?lsub(nd):rsub(nd);
     480:	0935                	addi	s2,s2,13
     482:	049f 0000 0019      	0x190000049f
    for(xlen_t nd=0,size=rootOrder+1;rounded<=size;size-=1){ // find suitable node; size is biased size
     488:	0000                	unimp
     48a:	0200                	addi	s0,sp,256
        if(buddyNodes[nd]==size && buddyNodes[nd]==rounded) node=nd;
     48c:	0f36                	slli	t5,t5,0xd
     48e:	09ac                	addi	a1,sp,216
     490:	0000                	unimp
     492:	0019                	c.nop	6
        inline constexpr xlen_t rsub(xlen_t x){return ((x+1)<<1);}
     494:	0000                	unimp
     496:	0200                	addi	s0,sp,256
     498:	09ac0f37          	lui	t5,0x9ac0
                buddyNodes[lsub(nd)]=buddyNodes[rsub(nd)]=size-1;
     49c:	0000                	unimp
     49e:	0e00                	addi	s0,sp,784
     4a0:	0000                	unimp
     4a2:	0000                	unimp
     4a4:	3402                	fld	fs0,32(sp)
     4a6:	d105                	beqz	a0,3c6 <.Ldebug_info0+0x3c6>
     4a8:	0002                	c.slli64	zero
     4aa:	0000                	unimp
     4ac:	000e                	c.slli	zero,0x3
     4ae:	0000                	unimp
        inline constexpr xlen_t lsub(xlen_t x){return ((x+1)<<1)-1;}
     4b0:	0200                	addi	s0,sp,256
     4b2:	0438                	addi	a4,sp,520
    for(xlen_t nd=0,size=rootOrder+1;rounded<=size;size-=1){ // find suitable node; size is biased size
     4b4:	047d                	addi	s0,s0,31
     4b6:	0000                	unimp
                buddyNodes[lsub(nd)]=buddyNodes[rsub(nd)]=size-1;
     4b8:	1610                	addi	a2,sp,800
     4ba:	0000                	unimp
     4bc:	0000                	unimp
     4be:	3902                	fld	fs2,32(sp)
    for(xlen_t nd=0,size=rootOrder+1;rounded<=size;size-=1){ // find suitable node; size is biased size
     4c0:	00000003          	lb	zero,0(zero) # 0 <.Ldebug_info0>
     4c4:	cd00                	sw	s0,24(a0)
     4c6:	0004                	0x4
     4c8:	d800                	sw	s0,48(s0)
     4ca:	0004                	0x4
     4cc:	1000                	addi	s0,sp,32
     4ce:	09ac                	addi	a1,sp,216
     4d0:	0000                	unimp
     4d2:	bd11                	j	2e6 <.Ldebug_info0+0x2e6>
     4d4:	0009                	c.nop	2
     4d6:	0000                	unimp
    buddyNodes[0]=klib::max(buddyNodes[lsub(0)],buddyNodes[rsub(0)]);
     4d8:	5414                	lw	a3,40(s0)
     4da:	d100                	sw	s0,32(a0)
     4dc:	0002                	c.slli64	zero
     4de:	0000                	unimp
    assert(ppn<end);
     4e0:	001a                	c.slli	zero,0x6
     4e2:	0000                	unimp
     4e4:	0200                	addi	s0,sp,256
     4e6:	0c0d                	addi	s8,s8,3
     4e8:	0000                	unimp
     4ea:	0000                	unimp
     4ec:	0062                	c.slli	zero,0x18
     4ee:	0000                	unimp
     4f0:	0506                	slli	a0,a0,0x1
     4f2:	0000                	unimp
     4f4:	5414                	lw	a3,40(s0)
     4f6:	6200                	ld	s0,0(a2)
     4f8:	0000                	unimp
     4fa:	1100                	addi	s0,sp,160
     4fc:	0062                	c.slli	zero,0x18
     4fe:	0000                	unimp
     500:	6211                	lui	tp,0x4
     502:	0000                	unimp
     504:	0000                	unimp
     506:	001a                	c.slli	zero,0x6
     508:	0000                	unimp
     50a:	0200                	addi	s0,sp,256
    for(xlen_t nd=0,size=rootOrder+1;rounded<=size;size-=1){ // find suitable node; size is biased size
     50c:	00000c0b          	0xc0b
    assert(node>0);
     510:	0000                	unimp
     512:	0062                	c.slli	zero,0x18
     514:	0000                	unimp
     516:	052c                	addi	a1,sp,648
     518:	0000                	unimp
     51a:	5414                	lw	a3,40(s0)
     51c:	6200                	ld	s0,0(a2)
     51e:	0000                	unimp
     520:	1100                	addi	s0,sp,160
     522:	0062                	c.slli	zero,0x18
     524:	0000                	unimp
     526:	6211                	lui	tp,0x4
     528:	0000                	unimp
     52a:	0000                	unimp
     52c:	0000001b          	sext.w	zero,zero
     530:	0200                	addi	s0,sp,256
     532:	0e0e                	slli	t3,t3,0x3
     534:	0000                	unimp
     536:	0000                	unimp
     538:	0069                	c.nop	26
     53a:	0000                	unimp
     53c:	3711                	addiw	a4,a4,-28
     53e:	0000                	unimp
     540:	0000                	unimp
     542:	1c00                	addi	s0,sp,560
     544:	00000553          	fadd.s	fa0,ft0,ft0,rne
     548:	00000553          	fadd.s	fa0,ft0,ft0,rne
    DBG(
     54c:	481d                	li	a6,7
     54e:	0000                	unimp
void HeapMgrGrowable::growHeap(){
     550:	7f00                	ld	s0,56(a4)
     552:	0500                	addi	s0,sp,640
     554:	0801                	addi	a6,a6,0
     556:	0000                	unimp
    DBG(
     558:	0000                	unimp
     55a:	5304                	lw	s1,32(a4)
     55c:	0005                	c.nop	1
     55e:	1e00                	addi	s0,sp,816
void HeapMgrGrowable::growHeap(){
     560:	d508                	sw	a0,40(a0)
     562:	0001                	nop
    DBG(
     564:	0500                	addi	s0,sp,640
     566:	0201                	addi	tp,tp,0
     568:	0000                	unimp
     56a:	0000                	unimp
void HeapMgrGrowable::growHeap(){
     56c:	621f 6675 0200      	0x2006675621f
     572:	1c71                	addi	s8,s8,-4
    DBG(
     574:	01d5                	addi	gp,gp,21
     576:	0000                	unimp
     578:	081e                	slli	a6,a6,0x7
     57a:	055a                	slli	a0,a0,0x16
    Span newSpan={pmgr.alloc(growsize),growsize};
     57c:	0000                	unimp
     57e:	8920                	0x8920
     580:	0005                	c.nop	1
     582:	1100                	addi	s0,sp,160
     584:	0578                	addi	a4,sp,652
     586:	0000                	unimp
     588:	2100                	fld	fs0,0(a0)
     58a:	0000                	unimp
     58c:	0000                	unimp
     58e:	1c08                	addi	a0,sp,560
    reservedNode->data=newSpan;
     590:	0005950f          	0x5950f
     594:	1e00                	addi	s0,sp,816
     596:	7e08                	ld	a0,56(a2)
     598:	0005                	c.nop	1
     59a:	2200                	fld	fs0,0(a2)
     59c:	6d76                	ld	s10,344(sp)
     59e:	0300                	addi	s0,sp,384
    tlsf_add_pool(newPool,growsize*vm::pageSize);
     5a0:	05f30b07          	0x5f30b07
     5a4:	0000                	unimp
     5a6:	00000023          	sb	zero,0(zero) # 0 <.Ldebug_info0>
     5aa:	0300                	addi	s0,sp,384
     5ac:	1632                	slli	a2,a2,0x2c
     5ae:	00000043          	fmadd.s	ft0,ft0,ft0,ft0,rne
    if(tail)
     5b2:	1000                	addi	s0,sp,32
    dynPages.push_back(reservedNode);
     5b4:	00000023          	sb	zero,0(zero) # 0 <.Ldebug_info0>
     5b8:	0300                	addi	s0,sp,384
     5ba:	00430933          	add	s2,t1,tp
    nd->iter.next=cur->iter.next;
     5be:	0000                	unimp
     5c0:	0200                	addi	s0,sp,256
     5c2:	00000023          	sb	zero,0(zero) # 0 <.Ldebug_info0>
    cur->iter.next=nd;
     5c6:	0300                	addi	s0,sp,384
      list::insertAfter(tail,newNode),tail=newNode;
     5c8:	1634                	addi	a3,sp,808
     5ca:	00000043          	fmadd.s	ft0,ft0,ft0,ft0,rne
        ptr_t rt=(tlsf_malloc(size));
     5ce:	000201ff          	radd16	gp,tp,zero
     5d2:	0000                	unimp
     5d4:	0300                	addi	s0,sp,384
     5d6:	140c                	addi	a1,sp,544
     5d8:	00000037          	lui	zero,0x0
        if(rt!=nullptr)return rt;
     5dc:	0000001b          	sext.w	zero,zero
        ptr_t rt=(tlsf_malloc(size));
     5e0:	0300                	addi	s0,sp,384
     5e2:	130e                	slli	t1,t1,0x23
     5e4:	0000                	unimp
     5e6:	0000                	unimp
     5e8:	00000037          	lui	zero,0x0
     5ec:	3711                	addiw	a4,a4,-28
     5ee:	0000                	unimp
    reservedNode=(klib::ListNode<Span>*)(alloc(sizeof(klib::ListNode<Span>)));
     5f0:	0000                	unimp
     5f2:	0c00                	addi	s0,sp,528
    DBG(
     5f4:	05a6                	slli	a1,a1,0x9
     5f6:	0000                	unimp
     5f8:	b40c                	fsd	fa1,40(s0)
     5fa:	0005                	c.nop	1
     5fc:	0c00                	addi	s0,sp,528
     5fe:	05c2                	slli	a1,a1,0x10
     600:	0000                	unimp
     602:	0008                	0x8
     604:	0000                	unimp
     606:	0400                	addi	s0,sp,512
}
     608:	0b08                	addi	a0,sp,400
     60a:	0990                	addi	a2,sp,208
     60c:	0000                	unimp
     60e:	0424                	addi	s1,sp,520
    DBG(
     610:	0f0a                	slli	t5,t5,0x2
     612:	05d0                	addi	a2,sp,708
}
     614:	0000                	unimp
     616:	0025                	c.nop	9
     618:	0000                	unimp
     61a:	2800                	fld	fs0,16(s0)
    DBG(
     61c:	0c04                	addi	s1,sp,528
     61e:	0007a30b          	0x7a30b
     622:	2600                	fld	fs0,8(a2)
      head=tail=newNode;
     624:	0000                	unimp
     626:	0000                	unimp
     628:	0e04                	addi	s1,sp,784
     62a:	0009                	c.nop	2
     62c:	0000                	unimp
     62e:	0100                	addi	s0,sp,128
PageNum PageMgr::free(PageNum ppn,int order){
     630:	0638                	addi	a4,sp,776
     632:	0000                	unimp
     634:	0648                	addi	a0,sp,772
     636:	0000                	unimp
    xlen_t idx=pos2node(ppn-start,order);
     638:	9010                	0x9010
     63a:	0009                	c.nop	2
            DBG(assert(((pos>>rootOrder)&1)==0);)
     63c:	1100                	addi	s0,sp,160
     63e:	00000037          	lui	zero,0x0
PageNum PageMgr::free(PageNum ppn,int order){
     642:	3711                	addiw	a4,a4,-28
    xlen_t idx=pos2node(ppn-start,order);
     644:	0000                	unimp
     646:	0000                	unimp
     648:	0026                	c.slli	zero,0x9
     64a:	0000                	unimp
PageNum PageMgr::free(PageNum ppn,int order){
     64c:	0400                	addi	s0,sp,512
     64e:	0000090f          	0x90f
     652:	0000                	unimp
     654:	5d01                	li	s10,-32
     656:	0006                	c.slli	zero,0x1
     658:	6800                	ld	s0,16(s0)
     65a:	0006                	c.slli	zero,0x1
     65c:	1000                	addi	s0,sp,32
     65e:	0990                	addi	a2,sp,208
     660:	0000                	unimp
     662:	6910                	ld	a2,16(a0)
     664:	0000                	unimp
     666:	0000                	unimp
     668:	00000027          	0x27
     66c:	0400                	addi	s0,sp,512
     66e:	1010                	addi	a2,sp,32
     670:	0000                	unimp
     672:	0000                	unimp
            for(int size=rootOrder-1;size>=order;size-=1){
     674:	00000037          	lui	zero,0x0
     678:	8101                	c.srli64	a0
     67a:	0006                	c.slli	zero,0x1
     67c:	8c00                	0x8c00
     67e:	0006                	c.slli	zero,0x1
     680:	1000                	addi	s0,sp,32
     682:	0990                	addi	a2,sp,208
            xlen_t nd=0;
     684:	0000                	unimp
     686:	8111                	srli	a0,a0,0x4
     688:	0000                	unimp
     68a:	0000                	unimp
            for(int size=rootOrder-1;size>=order;size-=1){
     68c:	00000027          	0x27
     690:	0400                	addi	s0,sp,512
     692:	1011                	c.nop	-28
                if((pos>>size)&1)nd=rsub(nd);
     694:	0000                	unimp
     696:	0000                	unimp
            for(int size=rootOrder-1;size>=order;size-=1){
     698:	00000037          	lui	zero,0x0
                if((pos>>size)&1)nd=rsub(nd);
     69c:	a501                	j	c9c <.Ldebug_info0+0xc9c>
     69e:	0006                	c.slli	zero,0x1
     6a0:	b500                	fsd	fs0,40(a0)
     6a2:	0006                	c.slli	zero,0x1
     6a4:	1000                	addi	s0,sp,32
     6a6:	0990                	addi	a2,sp,208
     6a8:	0000                	unimp
     6aa:	3711                	addiw	a4,a4,-28
     6ac:	0000                	unimp
     6ae:	1100                	addi	s0,sp,160
            for(int size=rootOrder-1;size>=order;size-=1){
     6b0:	0069                	c.nop	26
     6b2:	0000                	unimp
        inline constexpr xlen_t lsub(xlen_t x){return ((x+1)<<1)-1;}
     6b4:	2600                	fld	fs0,8(a2)
     6b6:	0000                	unimp
     6b8:	0000                	unimp
     6ba:	1204                	addi	s1,sp,288
            for(int size=rootOrder-1;size>=order;size-=1){
     6bc:	0015                	c.nop	5
     6be:	0000                	unimp
    DBG(printf("PageMgr::free(pos=%ld order=%d) idx=0x%lx\n",ppn-start,order,idx);)
     6c0:	0100                	addi	s0,sp,128
     6c2:	06ca                	slli	a3,a3,0x12
     6c4:	0000                	unimp
     6c6:	06d0                	addi	a2,sp,836
     6c8:	0000                	unimp
     6ca:	9010                	0x9010
     6cc:	0009                	c.nop	2
     6ce:	0000                	unimp
     6d0:	0000000f          	fence	unknown,unknown
     6d4:	0400                	addi	s0,sp,512
     6d6:	2118                	fld	fa4,0(a0)
    buddyNodes[idx]=order+1;
     6d8:	0000                	unimp
     6da:	0000                	unimp
        inline constexpr xlen_t prnt(xlen_t x){return ((x+1)>>1)-1;}
     6dc:	00000037          	lui	zero,0x0
     6e0:	06e8                	addi	a0,sp,844
     6e2:	0000                	unimp
     6e4:	000006f3          	0x6f3
     6e8:	9010                	0x9010
     6ea:	0009                	c.nop	2
    for(idx=prnt(idx);idx>0;idx=prnt(idx)){
     6ec:	1100                	addi	s0,sp,160
     6ee:	00000037          	lui	zero,0x0
        buddyNodes[idx]=buddyNodes[lsub(idx)]==buddyNodes[rsub(idx)]?buddyNodes[lsub(idx)]+1:klib::max(buddyNodes[lsub(idx)],buddyNodes[rsub(idx)]); // the free'd leaf node ensures lsub or rsub being not null
     6f2:	0f00                	addi	s0,sp,912
        inline constexpr xlen_t lsub(xlen_t x){return ((x+1)<<1)-1;}
     6f4:	0000                	unimp
     6f6:	0000                	unimp
     6f8:	1904                	addi	s1,sp,176
     6fa:	0021                	c.nop	8
     6fc:	0000                	unimp
     6fe:	3700                	fld	fs0,40(a4)
     700:	0000                	unimp
     702:	0b00                	addi	s0,sp,400
     704:	16000007          	0x16000007
     708:	10000007          	0x10000007
        inline constexpr xlen_t rsub(xlen_t x){return ((x+1)<<1);}
     70c:	0990                	addi	a2,sp,208
     70e:	0000                	unimp
     710:	3711                	addiw	a4,a4,-28
     712:	0000                	unimp
     714:	0000                	unimp
     716:	0000000f          	fence	unknown,unknown
     71a:	0400                	addi	s0,sp,512
     71c:	211a                	fld	ft2,384(sp)
     71e:	0000                	unimp
        inline constexpr xlen_t prnt(xlen_t x){return ((x+1)>>1)-1;}
     720:	0000                	unimp
     722:	00000037          	lui	zero,0x0
     726:	072e                	slli	a4,a4,0xb
     728:	0000                	unimp
     72a:	0739                	addi	a4,a4,14
    for(idx=prnt(idx);idx>0;idx=prnt(idx)){
     72c:	0000                	unimp
     72e:	9010                	0x9010
    buddyNodes[0]=klib::max(buddyNodes[lsub(0)],buddyNodes[rsub(0)]);
     730:	0009                	c.nop	2
     732:	1100                	addi	s0,sp,160
     734:	00000037          	lui	zero,0x0
     738:	0f00                	addi	s0,sp,912
     73a:	0000                	unimp
     73c:	0000                	unimp
     73e:	1d04                	addi	s1,sp,688
     740:	00000017          	auipc	zero,0x0
        buddyNodes[idx]=buddyNodes[lsub(idx)]==buddyNodes[rsub(idx)]?buddyNodes[lsub(idx)]+1:klib::max(buddyNodes[lsub(idx)],buddyNodes[rsub(idx)]); // the free'd leaf node ensures lsub or rsub being not null
     744:	3700                	fld	fs0,40(a4)
     746:	0000                	unimp
     748:	5100                	lw	s0,32(a0)
     74a:	61000007          	0x61000007
     74e:	10000007          	0x10000007
            DBG(assert(((pos>>rootOrder)&1)==0);)
     752:	0990                	addi	a2,sp,208
     754:	0000                	unimp
     756:	3711                	addiw	a4,a4,-28
     758:	0000                	unimp
     75a:	1100                	addi	s0,sp,160
     75c:	0069                	c.nop	26
     75e:	0000                	unimp
     760:	0e00                	addi	s0,sp,784
     762:	0000                	unimp
     764:	0000                	unimp
     766:	2904                	fld	fs1,16(a0)
     768:	d011                	beqz	s0,66c <.Ldebug_info0+0x66c>
     76a:	0005                	c.nop	1
     76c:	0000                	unimp
     76e:	6528                	ld	a0,72(a0)
     770:	646e                	ld	s0,216(sp)
     772:	0400                	addi	s0,sp,512
     774:	112a                	slli	sp,sp,0x2a
     776:	05d0                	addi	a2,sp,708
     778:	0000                	unimp
     77a:	0e08                	addi	a0,sp,784
     77c:	0000                	unimp
     77e:	0000                	unimp
     780:	2b04                	fld	fs1,16(a4)
     782:	3710                	fld	fa2,40(a4)
     784:	0000                	unimp
     786:	1000                	addi	s0,sp,32
     788:	000e                	c.slli	zero,0x3
     78a:	0000                	unimp
    DBG(printf("PageMgr::free(pos=%ld order=%d) idx=0x%lx\n",ppn-start,order,idx);)
     78c:	0400                	addi	s0,sp,512
     78e:	102c                	addi	a1,sp,40
     790:	00000037          	lui	zero,0x0
     794:	0e18                	addi	a4,sp,784
     796:	0000                	unimp
     798:	0000                	unimp
     79a:	2d04                	fld	fs1,24(a0)
     79c:	9b12                	add	s6,s6,tp
     79e:	0009                	c.nop	2
     7a0:	2000                	fld	fs0,0(s0)
     7a2:	2500                	fld	fs0,8(a0)
    buddyNodes[idx]=order+1;
     7a4:	0000                	unimp
     7a6:	0000                	unimp
        inline constexpr xlen_t prnt(xlen_t x){return ((x+1)>>1)-1;}
     7a8:	0408                	addi	a0,sp,512
     7aa:	08b50b33          	0x8b50b33
     7ae:	0000                	unimp
    for(idx=prnt(idx);idx>0;idx=prnt(idx)){
     7b0:	0029                	c.nop	10
     7b2:	0000                	unimp
    buddyNodes[0]=klib::max(buddyNodes[lsub(0)],buddyNodes[rsub(0)]);
     7b4:	0400                	addi	s0,sp,512
     7b6:	0f35                	addi	t5,t5,13
     7b8:	0029                	c.nop	10
     7ba:	0000                	unimp
PageMgr::PageMgr(PageNum start,PageNum end):start(start),end(end){
     7bc:	0200                	addi	s0,sp,256
     7be:	002a                	c.slli	zero,0xa
     7c0:	0000                	unimp
     7c2:	0400                	addi	s0,sp,512
     7c4:	1e36                	slli	t3,t3,0x2d
     7c6:	0070                	addi	a2,sp,12
     7c8:	0000                	unimp
     7ca:	0202                	c.slli64	tp
     7cc:	0026                	c.slli	zero,0x9
     7ce:	0000                	unimp
     7d0:	0400                	addi	s0,sp,512
     7d2:	00001537          	lui	a0,0x1
     7d6:	0000                	unimp
     7d8:	e102                	sd	zero,128(sp)
     7da:	e7000007          	0xe7000007
     7de:	10000007          	0x10000007
    DBG(
     7e2:	09a1                	addi	s3,s3,8
     7e4:	0000                	unimp
     7e6:	2600                	fld	fs0,8(a2)
PageMgr::PageMgr(PageNum start,PageNum end):start(start),end(end){
     7e8:	0000                	unimp
     7ea:	0000                	unimp
     7ec:	3904                	fld	fs1,48(a0)
     7ee:	0009                	c.nop	2
    DBG(
     7f0:	0000                	unimp
     7f2:	0100                	addi	s0,sp,128
     7f4:	07fc                	addi	a5,sp,972
     7f6:	0000                	unimp
    xlen_t pages=end-start;
     7f8:	080c                	addi	a1,sp,16
     7fa:	0000                	unimp
    for(i=0;a>1;a>>=1,i++)r|=a&1;
     7fc:	a110                	fsd	fa2,0(a0)
     7fe:	0009                	c.nop	2
     800:	1100                	addi	s0,sp,160
     802:	0029                	c.nop	10
     804:	0000                	unimp
     806:	3711                	addiw	a4,a4,-28
     808:	0000                	unimp
     80a:	0000                	unimp
    int i=0,r=0;
     80c:	0026                	c.slli	zero,0x9
     80e:	0000                	unimp
    for(i=0;a>1;a>>=1,i++)r|=a&1;
     810:	0400                	addi	s0,sp,512
     812:	093a                	slli	s2,s2,0xe
     814:	0000                	unimp
     816:	0000                	unimp
     818:	2101                	sext.w	sp,sp
     81a:	0008                	0x8
     81c:	2c00                	fld	fs0,24(s0)
     81e:	0008                	0x8
     820:	1000                	addi	s0,sp,32
     822:	09a1                	addi	s3,s3,8
     824:	0000                	unimp
     826:	6910                	ld	a2,16(a0)
     828:	0000                	unimp
     82a:	0000                	unimp
     82c:	00000027          	0x27
     830:	0400                	addi	s0,sp,512
     832:	00000f3b          	addw	t5,zero,zero
     836:	0000                	unimp
    DBG(printf("pages=%d order=%d rootOrder=%ld buddyTreeSize=%ld\n",pages,rootOrder,rootOrder,buddyTreeSize);)
     838:	0029                	c.nop	10
     83a:	0000                	unimp
     83c:	4501                	li	a0,0
     83e:	0008                	0x8
    rootOrder=klib::log2up(pages);
     840:	5000                	lw	s0,32(s0)
     842:	0008                	0x8
    buddyTreeSize=(1l<<rootOrder)*2-1;
     844:	1000                	addi	s0,sp,32
     846:	09a1                	addi	s3,s3,8
    DBG(printf("pages=%d order=%d rootOrder=%ld buddyTreeSize=%ld\n",pages,rootOrder,rootOrder,buddyTreeSize);)
     848:	0000                	unimp
     84a:	3711                	addiw	a4,a4,-28
     84c:	0000                	unimp
     84e:	0000                	unimp
     850:	00000027          	0x27
     854:	0400                	addi	s0,sp,512
     856:	0f3c                	addi	a5,sp,920
    buddyNodes=new uint8_t[buddyTreeSize];
     858:	0000                	unimp
     85a:	0000                	unimp
        ptr_t rt=(tlsf_malloc(size));
     85c:	0029                	c.nop	10
     85e:	0000                	unimp
     860:	6901                	0x6901
     862:	0008                	0x8
     864:	7900                	ld	s0,48(a0)
     866:	0008                	0x8
        if(rt!=nullptr)return rt;
     868:	1000                	addi	s0,sp,32
     86a:	09a1                	addi	s3,s3,8
        ptr_t rt=(tlsf_malloc(size));
     86c:	0000                	unimp
     86e:	3711                	addiw	a4,a4,-28
     870:	0000                	unimp
     872:	1100                	addi	s0,sp,160
     874:	00000037          	lui	zero,0x0
    for(xlen_t i=1;i<buddyTreeSize;i++)buddyNodes[i]=0;
     878:	2600                	fld	fs0,8(a2)
     87a:	0000                	unimp
    buddyNodes=new uint8_t[buddyTreeSize];
     87c:	0000                	unimp
     87e:	3d04                	fld	fs1,56(a0)
    for(xlen_t i=1;i<buddyTreeSize;i++)buddyNodes[i]=0;
     880:	000e                	c.slli	zero,0x3
     882:	0000                	unimp
     884:	0100                	addi	s0,sp,128
     886:	088e                	slli	a7,a7,0x3
     888:	0000                	unimp
     88a:	0899                	addi	a7,a7,6
     88c:	0000                	unimp
     88e:	a110                	fsd	fa2,0(a0)
     890:	0009                	c.nop	2
     892:	1100                	addi	s0,sp,160
     894:	0029                	c.nop	10
     896:	0000                	unimp
     898:	2b00                	fld	fs0,16(a4)
     89a:	0000                	unimp
     89c:	0000                	unimp
     89e:	3e04                	fld	fs1,56(a2)
     8a0:	0000000f          	fence	unknown,unknown
    for(int i=rootOrder;i>=0;i--){
     8a4:	2900                	fld	fs0,16(a0)
     8a6:	0000                	unimp
     8a8:	0100                	addi	s0,sp,128
     8aa:	08ae                	slli	a7,a7,0xb
        if((pages>>i)&1){
     8ac:	0000                	unimp
     8ae:	a110                	fsd	fa2,0(a0)
     8b0:	0009                	c.nop	2
     8b2:	0000                	unimp
     8b4:	2500                	fld	fs0,8(a0)
     8b6:	0000                	unimp
    for(int i=rootOrder;i>=0;i--){
     8b8:	0000                	unimp
     8ba:	0430                	addi	a2,sp,520
     8bc:	0b40                	addi	s0,sp,404
     8be:	00000983          	lb	s3,0(zero) # 0 <.Ldebug_info0>
        if((pages>>i)&1){
     8c2:	a32c                	fsd	fa1,64(a4)
     8c4:	00000007          	0x7
     8c8:	0e01                	addi	t3,t3,0
     8ca:	0000                	unimp
    for(int i=rootOrder;i>=0;i--){
     8cc:	0000                	unimp
     8ce:	4104                	lw	s1,0(a0)
     8d0:	d412                	sw	tp,40(sp)
     8d2:	0009                	c.nop	2
            printf("buddy: |"); for(xlen_t i=0;i<buddyTreeSize;i++)printf("%d | ",buddyNodes[i]-1);printf("\n");
     8d4:	0800                	addi	s0,sp,16
     8d6:	000e                	c.slli	zero,0x3
     8d8:	0000                	unimp
     8da:	0400                	addi	s0,sp,512
     8dc:	1a42                	slli	s4,s4,0x30
     8de:	030e                	slli	t1,t1,0x3
     8e0:	0000                	unimp
     8e2:	0e10                	addi	a2,sp,784
     8e4:	0000                	unimp
     8e6:	0000                	unimp
     8e8:	4304                	lw	s1,0(a4)
     8ea:	ac1f 0009 2000      	0x20000009ac1f
     8f0:	000e                	c.slli	zero,0x3
     8f2:	0000                	unimp
     8f4:	0400                	addi	s0,sp,512
     8f6:	0d44                	addi	s1,sp,660
     8f8:	0069                	c.nop	26
     8fa:	0000                	unimp
     8fc:	1628                	addi	a0,sp,808
     8fe:	0000                	unimp
     900:	0000                	unimp
     902:	4504                	lw	s1,8(a0)
     904:	000e                	c.slli	zero,0x3
     906:	0000                	unimp
     908:	1100                	addi	s0,sp,160
     90a:	0009                	c.nop	2
     90c:	1700                	addi	s0,sp,928
     90e:	0009                	c.nop	2
     910:	1000                	addi	s0,sp,32
     912:	09da                	slli	s3,s3,0x16
     914:	0000                	unimp
     916:	2600                	fld	fs0,8(a2)
     918:	0000                	unimp
     91a:	0000                	unimp
     91c:	4704                	lw	s1,8(a4)
     91e:	0009                	c.nop	2
     920:	0000                	unimp
     922:	0100                	addi	s0,sp,128
     924:	092c                	addi	a1,sp,152
     926:	0000                	unimp
     928:	093c                	addi	a5,sp,152
     92a:	0000                	unimp
}
     92c:	da10                	sw	a2,48(a2)
     92e:	0009                	c.nop	2
     930:	1100                	addi	s0,sp,160
     932:	09e5                	addi	s3,s3,25
     934:	0000                	unimp
     936:	d411                	beqz	s0,842 <.Ldebug_info0+0x842>
     938:	0009                	c.nop	2
     93a:	0000                	unimp
     93c:	0026                	c.slli	zero,0x9
     93e:	0000                	unimp
    DBG(
     940:	0400                	addi	s0,sp,512
     942:	0948                	addi	a0,sp,148
     944:	0000                	unimp
     946:	0000                	unimp
}
     948:	5101                	li	sp,-32
     94a:	0009                	c.nop	2
    DBG(
     94c:	6600                	ld	s0,8(a2)
     94e:	0009                	c.nop	2
     950:	1000                	addi	s0,sp,32
     952:	09da                	slli	s3,s3,0x16
     954:	0000                	unimp
     956:	2911                	addiw	s2,s2,4
     958:	0000                	unimp
     95a:	1100                	addi	s0,sp,160
     95c:	00000037          	lui	zero,0x0
            free(base,i);
     960:	d411                	beqz	s0,86c <.Ldebug_info0+0x86c>
     962:	0009                	c.nop	2
     964:	0000                	unimp
     966:	002d                	c.nop	11
     968:	0000                	unimp
     96a:	0400                	addi	s0,sp,512
     96c:	0949                	addi	s2,s2,18
     96e:	0000                	unimp
     970:	0000                	unimp
     972:	7701                	lui	a4,0xfffe0
     974:	0009                	c.nop	2
     976:	1000                	addi	s0,sp,32
     978:	09da                	slli	s3,s3,0x16
     97a:	0000                	unimp
     97c:	6910                	ld	a2,16(a0)
     97e:	0000                	unimp
     980:	0000                	unimp
     982:	0200                	addi	s0,sp,256
     984:	0000                	unimp
     986:	0000                	unimp
     988:	0b04                	addi	s1,sp,400
     98a:	d125                	beqz	a0,8ea <.Ldebug_info0+0x8ea>
     98c:	0002                	c.slli64	zero
     98e:	0000                	unimp
     990:	081e                	slli	a6,a6,0x7
     992:	0616                	slli	a2,a2,0x5
     994:	0000                	unimp
     996:	9004                	0x9004
     998:	0009                	c.nop	2
     99a:	1e00                	addi	s0,sp,816
     99c:	5608                	lw	a0,40(a2)
     99e:	0000                	unimp
     9a0:	1e00                	addi	s0,sp,816
     9a2:	a308                	fsd	fa0,0(a4)
     9a4:	04000007          	0x4000007
     9a8:	09a1                	addi	s3,s3,8
     9aa:	0000                	unimp
     9ac:	081e                	slli	a6,a6,0x7
     9ae:	0470                	addi	a2,sp,524
     9b0:	0000                	unimp
     9b2:	081e                	slli	a6,a6,0x7
     9b4:	030e                	slli	t1,t1,0x3
     9b6:	0000                	unimp
     9b8:	b204                	fsd	fs1,32(a2)
     9ba:	0009                	c.nop	2
     9bc:	2e00                	fld	fs0,24(a2)
     9be:	0908                	addi	a0,sp,144
     9c0:	1e000003          	lb	zero,480(zero) # 1e0 <.Ldebug_info0+0x1e0>
     9c4:	c908                	sw	a0,16(a0)
     9c6:	0009                	c.nop	2
     9c8:	2000                	fld	fs0,0(s0)
     9ca:	09d4                	addi	a3,sp,212
     9cc:	0000                	unimp
     9ce:	bd11                	j	7e2 <.Ldebug_info0+0x7e2>
     9d0:	0009                	c.nop	2
     9d2:	0000                	unimp
     9d4:	082e                	slli	a6,a6,0xb
     9d6:	0616                	slli	a2,a2,0x5
     9d8:	0000                	unimp
     9da:	081e                	slli	a6,a6,0x7
     9dc:	08b5                	addi	a7,a7,13
     9de:	0000                	unimp
     9e0:	da04                	sw	s1,48(a2)
     9e2:	0009                	c.nop	2
     9e4:	2e00                	fld	fs0,24(a2)
     9e6:	a308                	fsd	fa0,0(a4)
     9e8:	21000007          	0x21000007
     9ec:	0000                	unimp
     9ee:	0000                	unimp
     9f0:	4c04                	lw	s1,24(s0)
     9f2:	a118                	fsd	fa4,0(a0)
     9f4:	0009                	c.nop	2
     9f6:	2f00                	fld	fs0,24(a4)
     9f8:	0501                	addi	a0,a0,0
     9fa:	0211                	addi	tp,tp,4
     9fc:	0006                	c.slli	zero,0x1
     9fe:	1c00                	addi	s0,sp,560
     a00:	0056                	c.slli	zero,0x15
     a02:	0000                	unimp
     a04:	0a10                	addi	a2,sp,272
     a06:	0000                	unimp
     a08:	4830                	lw	a2,80(s0)
     a0a:	0000                	unimp
     a0c:	ff00                	sd	s0,56(a4)
     a0e:	001f 0031 0000      	0x31001f
     a14:	0100                	addi	s0,sp,128
     a16:	094a                	slli	s2,s2,0x12
     a18:	000009ff          	radd16	s3,zero,zero
     a1c:	0309                	addi	t1,t1,2
	...
     a26:	561c                	lw	a5,40(a2)
     a28:	0000                	unimp
     a2a:	3900                	fld	fs0,48(a0)
     a2c:	000a                	c.slli	zero,0x2
     a2e:	3200                	fld	fs0,32(a2)
     a30:	0048                	addi	a0,sp,4
     a32:	0000                	unimp
     a34:	000f6fff          	0xf6fff
     a38:	3300                	fld	fs0,32(a4)
     a3a:	0000                	unimp
     a3c:	0000                	unimp
     a3e:	4b01                	li	s6,0
     a40:	2619                	addiw	a2,a2,6
     a42:	000a                	c.slli	zero,0x2
     a44:	0000                	unimp
     a46:	0910                	addi	a2,sp,144
     a48:	00000003          	lb	zero,0(zero) # 0 <.Ldebug_info0>
     a4c:	0000                	unimp
     a4e:	0000                	unimp
     a50:	3100                	fld	fs0,32(a0)
     a52:	0000                	unimp
     a54:	0000                	unimp
     a56:	4c01                	li	s8,0
     a58:	a309                	j	f5a <.Ldebug_info0+0xf5a>
     a5a:	09000007          	0x9000007
     a5e:	00000003          	lb	zero,0(zero) # 0 <.Ldebug_info0>
     a62:	0000                	unimp
     a64:	0000                	unimp
     a66:	3400                	fld	fs0,40(s0)
     a68:	000009eb          	0x9eb
     a6c:	4d01                	li	s10,0
     a6e:	090a                	slli	s2,s2,0x2
     a70:	00000003          	lb	zero,0(zero) # 0 <.Ldebug_info0>
     a74:	0000                	unimp
     a76:	0000                	unimp
     a78:	3500                	fld	fs0,40(a0)
     a7a:	0000                	unimp
     a7c:	0000                	unimp
     a7e:	0035                	c.nop	13
     a80:	0000                	unimp
     a82:	0036                	c.slli	zero,0xd
	...
     a94:	0000                	unimp
     a96:	0100                	addi	s0,sp,128
     a98:	419c                	lw	a5,0(a1)
     a9a:	3700000b          	0x3700000b
     a9e:	0b41                	addi	s6,s6,16
	...
     aac:	0000                	unimp
     aae:	a301                	j	fae <.Ldebug_info0+0xfae>
     ab0:	3801                	addiw	a6,a6,-32
     ab2:	00000b4b          	fnmsub.s	fs6,ft0,ft0,ft0,rne
     ab6:	3901                	addiw	s2,s2,-32
     ab8:	00000b57          	0xb57
     abc:	1b3affff          	0x1b3affff
     ac0:	001d                	c.nop	7
	...
     ace:	0100                	addi	s0,sp,128
     ad0:	294c                	fld	fa1,144(a0)
     ad2:	0b14                	addi	a3,sp,400
     ad4:	0000                	unimp
     ad6:	001d413b          	0x1d413b
     ada:	0000                	unimp
     adc:	0000                	unimp
     ade:	3b00                	fld	fs0,48(a4)
     ae0:	1d35                	addi	s10,s10,-19
     ae2:	0000                	unimp
     ae4:	0000                	unimp
     ae6:	0000                	unimp
     ae8:	001d2c3b          	0x1d2c3b
     aec:	0000                	unimp
     aee:	0000                	unimp
     af0:	3c00                	fld	fs0,56(s0)
	...
     afa:	1fdc                	addi	a5,sp,1012
     afc:	0000                	unimp
     afe:	013d                	addi	sp,sp,15
     b00:	095a                	slli	s2,s2,0x16
     b02:	00000003          	lb	zero,0(zero) # 0 <.Ldebug_info0>
     b06:	0000                	unimp
     b08:	0000                	unimp
     b0a:	3d00                	fld	fs0,56(a0)
     b0c:	5b01                	li	s6,-32
     b0e:	20000a03          	lb	s4,512(zero) # 200 <.Ldebug_info0+0x200>
     b12:	0000                	unimp
     b14:	003e                	c.slli	zero,0xf
     b16:	0000                	unimp
     b18:	0000                	unimp
     b1a:	0000                	unimp
     b1c:	e800                	sd	s0,16(s0)
     b1e:	001f 3d00 5a01      	0x5a013d00001f
     b24:	0309                	addi	t1,t1,2
	...
     b2e:	013d                	addi	sp,sp,15
     b30:	0003095b          	0x3095b
     b34:	0000                	unimp
     b36:	0000                	unimp
     b38:	0000                	unimp
     b3a:	3f00                	fld	fs0,56(a4)
     b3c:	5c01                	li	s8,-32
     b3e:	0000                	unimp
     b40:	4000                	lw	s0,0(s0)
     b42:	0000                	unimp
     b44:	0000                	unimp
     b46:	6401                	0x6401
     b48:	4100000b          	0x4100000b
     b4c:	0000                	unimp
     b4e:	0000                	unimp
     b50:	a301                	j	1050 <.Ldebug_info0+0x1050>
     b52:	6901                	0x6901
     b54:	0000                	unimp
     b56:	4100                	lw	s0,0(a0)
     b58:	0000                	unimp
     b5a:	0000                	unimp
     b5c:	a301                	j	105c <.Ldebug_info0+0x105c>
     b5e:	6901                	0x6901
     b60:	0000                	unimp
     b62:	0000                	unimp
     b64:	5b42                	lw	s6,48(sp)
     b66:	03000003          	lb	zero,48(zero) # 30 <.Ldebug_info0+0x30>
     b6a:	0b86                	slli	s7,s7,0x1
     b6c:	0000                	unimp
     b6e:	72756343          	fmadd.d	ft6,fa0,ft7,fa4,unknown
     b72:	0200                	addi	s0,sp,256
     b74:	2c41                	addiw	s8,s8,16
     b76:	0000031b          	sext.w	t1,zero
     b7a:	00646e43          	fmadd.s	ft8,fs0,ft6,ft0,unknown
     b7e:	4102                	lw	sp,0(sp)
     b80:	1b3a                	slli	s6,s6,0x2e
     b82:	00000003          	lb	zero,0(zero) # 0 <.Ldebug_info0>
     b86:	e042                	sd	a6,0(sp)
     b88:	0004                	0x4
     b8a:	0300                	addi	s0,sp,384
     b8c:	0bac                	addi	a1,sp,472
     b8e:	0000                	unimp
     b90:	5414                	lw	a3,40(s0)
     b92:	6200                	ld	s0,0(a2)
     b94:	0000                	unimp
     b96:	4300                	lw	s0,0(a4)
     b98:	0061                	c.nop	24
     b9a:	0d02                	c.slli64	s10
     b9c:	6212                	ld	tp,256(sp)
     b9e:	0000                	unimp
     ba0:	4300                	lw	s0,0(a4)
     ba2:	0062                	c.slli	zero,0x18
     ba4:	0d02                	c.slli64	s10
     ba6:	6216                	ld	tp,320(sp)
     ba8:	0000                	unimp
     baa:	0000                	unimp
     bac:	0642                	slli	a2,a2,0x10
     bae:	0005                	c.nop	1
     bb0:	0300                	addi	s0,sp,384
     bb2:	0bd2                	slli	s7,s7,0x14
     bb4:	0000                	unimp
     bb6:	5414                	lw	a3,40(s0)
     bb8:	6200                	ld	s0,0(a2)
     bba:	0000                	unimp
     bbc:	4300                	lw	s0,0(a4)
     bbe:	0061                	c.nop	24
     bc0:	0b02                	c.slli64	s6
     bc2:	6212                	ld	tp,256(sp)
     bc4:	0000                	unimp
     bc6:	4300                	lw	s0,0(a4)
     bc8:	0062                	c.slli	zero,0x18
     bca:	0b02                	c.slli64	s6
     bcc:	6216                	ld	tp,320(sp)
     bce:	0000                	unimp
     bd0:	0000                	unimp
     bd2:	0d44                	addi	s1,sp,660
     bd4:	0004                	0x4
     bd6:	e000                	sd	s0,0(s0)
     bd8:	0300000b          	0x300000b
     bdc:	0bf5                	addi	s7,s7,29
     bde:	0000                	unimp
     be0:	0045                	c.nop	17
     be2:	0000                	unimp
     be4:	b800                	fsd	fs0,48(s0)
     be6:	0009                	c.nop	2
     be8:	1f00                	addi	s0,sp,944
     bea:	7472                	ld	s0,312(sp)
     bec:	0200                	addi	s0,sp,256
     bee:	075e                	slli	a4,a4,0x17
     bf0:	02d1                	addi	t0,t0,20
     bf2:	0000                	unimp
     bf4:	4400                	lw	s0,8(s0)
     bf6:	0000042b          	0x42b
     bfa:	00000c03          	lb	s8,0(zero) # 0 <.Ldebug_info0>
     bfe:	000c0d03          	lb	s10,0(s8) # 9000 <.LLST42+0x74ca>
     c02:	4500                	lw	s0,8(a0)
     c04:	0000                	unimp
     c06:	0000                	unimp
     c08:	09b8                	addi	a4,sp,216
     c0a:	0000                	unimp
     c0c:	4400                	lw	s0,8(s0)
     c0e:	0341                	addi	t1,t1,16
     c10:	0000                	unimp
     c12:	00000c1b          	sext.w	s8,zero
     c16:	2502                	fld	fa0,0(sp)
     c18:	000c                	0xc
     c1a:	4500                	lw	s0,8(a0)
     c1c:	0000                	unimp
     c1e:	0000                	unimp
     c20:	09b8                	addi	a4,sp,216
     c22:	0000                	unimp
     c24:	4600                	lw	s0,8(a2)
     c26:	0c0d                	addi	s8,s8,3
     c28:	0000                	unimp
     c2a:	0000                	unimp
     c2c:	0000                	unimp
     c2e:	0c36                	slli	s8,s8,0xd
     c30:	0000                	unimp
     c32:	0c3c                	addi	a5,sp,536
     c34:	0000                	unimp
     c36:	000c1b47          	fmsub.s	fs6,fs8,ft0,ft0,rtz
     c3a:	0000                	unimp
     c3c:	9144                	0x9144
     c3e:	4a000003          	lb	zero,1184(zero) # 4a0 <.Ldebug_info0+0x4a0>
     c42:	000c                	0xc
     c44:	0300                	addi	s0,sp,384
     c46:	0c60                	addi	s0,sp,540
     c48:	0000                	unimp
     c4a:	0045                	c.nop	17
     c4c:	0000                	unimp
     c4e:	b800                	fsd	fs0,48(s0)
     c50:	0009                	c.nop	2
     c52:	4100                	lw	s0,0(a0)
     c54:	0000                	unimp
     c56:	0000                	unimp
     c58:	4902                	lw	s2,0(sp)
     c5a:	00031b23          	sh	zero,22(t1)
     c5e:	0000                	unimp
     c60:	8c48                	0x8c48
     c62:	0006                	c.slli	zero,0x1
     c64:	0100                	addi	s0,sp,128
     c66:	0999                	addi	s3,s3,6
     c68:	0c82                	c.slli64	s9
	...
     c7a:	0000                	unimp
     c7c:	9c01                	subw	s0,s0,s0
     c7e:	00000e53          	fadd.s	ft8,ft0,ft0,rne
     c82:	0049                	c.nop	18
     c84:	0000                	unimp
     c86:	9600                	0x9600
     c88:	0009                	c.nop	2
     c8a:	0000                	unimp
     c8c:	0000                	unimp
     c8e:	4a00                	lw	s0,16(a2)
     c90:	7070                	ld	a2,224(s0)
     c92:	006e                	c.slli	zero,0x1b
     c94:	9901                	andi	a0,a0,-32
     c96:	d01f 0005 0000      	0x5d01f
     c9c:	0000                	unimp
     c9e:	4b00                	lw	s0,16(a4)
     ca0:	0000                	unimp
     ca2:	0000                	unimp
     ca4:	9901                	andi	a0,a0,-32
     ca6:	00006927          	0x6927
     caa:	0000                	unimp
     cac:	0000                	unimp
     cae:	4c00                	lw	s0,24(s0)
     cb0:	6469                	lui	s0,0x1a
     cb2:	0078                	addi	a4,sp,12
     cb4:	9a01                	andi	a2,a2,-32
     cb6:	370c                	fld	fa1,40(a4)
     cb8:	0000                	unimp
     cba:	0000                	unimp
     cbc:	0000                	unimp
     cbe:	3a00                	fld	fs0,48(a2)
     cc0:	00001e2b          	0x1e2b
	...
     cd0:	9a01                	andi	a2,a2,-32
     cd2:	8418                	0x8418
     cd4:	000d                	c.nop	3
     cd6:	3b00                	fld	fs0,48(a4)
     cd8:	1e39                	addi	t3,t3,-18
     cda:	0000                	unimp
     cdc:	0000                	unimp
     cde:	0000                	unimp
     ce0:	001e4e3b          	0x1e4e3b
     ce4:	0000                	unimp
     ce6:	0000                	unimp
     ce8:	3b00                	fld	fs0,48(a4)
     cea:	1e42                	slli	t3,t3,0x30
     cec:	0000                	unimp
     cee:	0000                	unimp
     cf0:	0000                	unimp
     cf2:	004d                	c.nop	19
     cf4:	0000                	unimp
     cf6:	4e00                	lw	s0,24(a2)
     cf8:	1e5a                	slli	t3,t3,0x36
     cfa:	0000                	unimp
     cfc:	0000                	unimp
     cfe:	0000                	unimp
     d00:	001e654f          	fnmadd.s	fa0,ft8,ft1,ft0,unknown
     d04:	0000                	unimp
     d06:	0000                	unimp
     d08:	3e00                	fld	fs0,56(a2)
     d0a:	000d                	c.nop	3
     d0c:	4e00                	lw	s0,24(a2)
     d0e:	1e66                	slli	t3,t3,0x39
     d10:	0000                	unimp
     d12:	0000                	unimp
     d14:	0000                	unimp
     d16:	001eb837          	lui	a6,0x1eb
	...
     d26:	0400                	addi	s0,sp,512
     d28:	1d22                	slli	s10,s10,0x28
     d2a:	001ec63b          	0x1ec63b
     d2e:	0000                	unimp
     d30:	0000                	unimp
     d32:	3b00                	fld	fs0,48(a4)
     d34:	00001ecf          	fnmadd.s	ft9,ft0,ft0,ft0,rtz
     d38:	0000                	unimp
     d3a:	0000                	unimp
     d3c:	0000                	unimp
     d3e:	0050                	addi	a2,sp,4
     d40:	0000                	unimp
     d42:	0000                	unimp
     d44:	0000                	unimp
     d46:	f100                	sd	s0,32(a0)
     d48:	001f 6f00 000d      	0xd6f00001f
     d4e:	3d00                	fld	fs0,56(a0)
     d50:	5a01                	li	s4,-32
     d52:	0309                	addi	t1,t1,2
	...
     d5c:	013d                	addi	sp,sp,15
     d5e:	0003095b          	0x3095b
     d62:	0000                	unimp
     d64:	0000                	unimp
     d66:	0000                	unimp
     d68:	3d00                	fld	fs0,56(a0)
     d6a:	5c01                	li	s8,-32
     d6c:	4e01                	li	t3,0
     d6e:	3c00                	fld	fs0,56(s0)
	...
     d78:	1ffd                	addi	t6,t6,-1
     d7a:	0000                	unimp
     d7c:	013d                	addi	sp,sp,15
     d7e:	015a                	slli	sp,sp,0x16
     d80:	0031                	c.nop	12
     d82:	0000                	unimp
     d84:	743a                	ld	s0,424(sp)
     d86:	001e                	c.slli	zero,0x7
	...
     d94:	0100                	addi	s0,sp,128
     d96:	119e                	slli	gp,gp,0x27
     d98:	00000dab          	0xdab
     d9c:	001e823b          	addw	tp,t4,ra
     da0:	0000                	unimp
     da2:	0000                	unimp
     da4:	4700                	lw	s0,8(a4)
     da6:	00001e8b          	0x1e8b
     daa:	5100                	lw	s0,32(a0)
     dac:	1eb8                	addi	a4,sp,888
	...
     dbe:	0000                	unimp
     dc0:	9f01                	subw	a4,a4,s0
     dc2:	d628                	sw	a0,104(a2)
     dc4:	000d                	c.nop	3
     dc6:	3b00                	fld	fs0,48(a4)
     dc8:	1ec6                	slli	t4,t4,0x31
     dca:	0000                	unimp
     dcc:	0000                	unimp
     dce:	0000                	unimp
     dd0:	001ecf47          	fmsub.s	ft10,ft9,ft1,ft0,rmm
     dd4:	0000                	unimp
     dd6:	743a                	ld	s0,424(sp)
     dd8:	001e                	c.slli	zero,0x7
	...
     de6:	0100                	addi	s0,sp,128
     de8:	259e                	fld	fa1,448(sp)
     dea:	0e01                	addi	t3,t3,0
     dec:	0000                	unimp
     dee:	001e823b          	addw	tp,t4,ra
     df2:	0000                	unimp
     df4:	0000                	unimp
     df6:	3b00                	fld	fs0,48(a4)
     df8:	00001e8b          	0x1e8b
     dfc:	0000                	unimp
     dfe:	0000                	unimp
     e00:	5000                	lw	s0,32(s0)
	...
     e0a:	1ff1                	addi	t6,t6,-4
     e0c:	0000                	unimp
     e0e:	0e2c                	addi	a1,sp,792
     e10:	0000                	unimp
     e12:	013d                	addi	sp,sp,15
     e14:	095a                	slli	s2,s2,0x16
     e16:	00000003          	lb	zero,0(zero) # 0 <.Ldebug_info0>
     e1a:	0000                	unimp
     e1c:	0000                	unimp
     e1e:	3d00                	fld	fs0,56(a0)
     e20:	5c01                	li	s8,-32
     e22:	8202                	jr	tp
     e24:	3d00                	fld	fs0,56(a0)
     e26:	5d01                	li	s10,-32
     e28:	8502                	jr	a0
     e2a:	0000                	unimp
     e2c:	003c                	addi	a5,sp,8
     e2e:	0000                	unimp
     e30:	0000                	unimp
     e32:	0000                	unimp
     e34:	f100                	sd	s0,32(a0)
     e36:	001f 3d00 5a01      	0x5a013d00001f
     e3c:	0309                	addi	t1,t1,2
	...
     e46:	013d                	addi	sp,sp,15
     e48:	025c                	addi	a5,sp,260
     e4a:	0082                	c.slli64	ra
     e4c:	013d                	addi	sp,sp,15
     e4e:	015d                	addi	sp,sp,23
     e50:	0030                	addi	a2,sp,8
     e52:	4800                	lw	s0,16(s0)
     e54:	0668                	addi	a0,sp,780
     e56:	0000                	unimp
     e58:	7901                	lui	s2,0xfffe0
     e5a:	7509                	lui	a0,0xfffe2
     e5c:	000e                	c.slli	zero,0x3
	...
     e6e:	0100                	addi	s0,sp,128
     e70:	e19c                	sd	a5,0(a1)
     e72:	0010                	0x10
     e74:	4900                	lw	s0,16(a0)
     e76:	0000                	unimp
     e78:	0000                	unimp
     e7a:	0996                	slli	s3,s3,0x5
     e7c:	0000                	unimp
     e7e:	0000                	unimp
     e80:	0000                	unimp
     e82:	0000004b          	fnmsub.s	ft0,ft0,ft0,ft0,rne
     e86:	0100                	addi	s0,sp,128
     e88:	1f79                	addi	t5,t5,-2
     e8a:	0081                	addi	ra,ra,0
     e8c:	0000                	unimp
     e8e:	0000                	unimp
     e90:	0000                	unimp
     e92:	0052                	c.slli	zero,0x14
     e94:	0000                	unimp
     e96:	0100                	addi	s0,sp,128
     e98:	097a                	slli	s2,s2,0x1e
     e9a:	0069                	c.nop	26
     e9c:	0000                	unimp
     e9e:	00000053          	fadd.s	ft0,ft0,ft0,rne
     ea2:	0100                	addi	s0,sp,128
     ea4:	0c7c                	addi	a5,sp,540
     ea6:	00000037          	lui	zero,0x0
     eaa:	0000                	unimp
     eac:	0000                	unimp
     eae:	704c                	ld	a1,160(s0)
     eb0:	6e70                	ld	a2,216(a2)
     eb2:	0100                	addi	s0,sp,128
     eb4:	0d92                	slli	s11,s11,0x4
     eb6:	05d0                	addi	a2,sp,708
     eb8:	0000                	unimp
     eba:	0000                	unimp
     ebc:	0000                	unimp
     ebe:	0054                	addi	a3,sp,4
     ec0:	0000                	unimp
     ec2:	8600                	0x8600
     ec4:	4c00000f          	0x4c00000f
     ec8:	646e                	ld	s0,216(sp)
     eca:	0100                	addi	s0,sp,128
     ecc:	107d                	c.nop	-1
     ece:	00000037          	lui	zero,0x0
     ed2:	0000                	unimp
     ed4:	0000                	unimp
     ed6:	00000053          	fadd.s	ft0,ft0,ft0,rne
     eda:	0100                	addi	s0,sp,128
     edc:	157d                	addi	a0,a0,-1
     ede:	00000037          	lui	zero,0x0
     ee2:	0000                	unimp
     ee4:	0000                	unimp
     ee6:	b851                	j	77a <.Ldebug_info0+0x77a>
     ee8:	001e                	c.slli	zero,0x7
	...
     efa:	0100                	addi	s0,sp,128
     efc:	2d85                	addiw	s11,s11,1
     efe:	0f15                	addi	t5,t5,5
     f00:	0000                	unimp
     f02:	001ec63b          	0x1ec63b
     f06:	0000                	unimp
     f08:	0000                	unimp
     f0a:	3b00                	fld	fs0,48(a4)
     f0c:	00001ecf          	fnmadd.s	ft9,ft0,ft0,ft0,rtz
     f10:	0000                	unimp
     f12:	0000                	unimp
     f14:	5100                	lw	s0,32(a0)
     f16:	1e96                	slli	t4,t4,0x25
	...
     f28:	0000                	unimp
     f2a:	8201                	c.srli64	a2
     f2c:	4035                	c.li	zero,13
     f2e:	3b00000f          	0x3b00000f
     f32:	1ea4                	addi	s1,sp,888
     f34:	0000                	unimp
     f36:	0000                	unimp
     f38:	0000                	unimp
     f3a:	001ead47          	fmsub.s	fs10,ft9,ft1,ft0,rdn
     f3e:	0000                	unimp
     f40:	b83a                	fsd	fa4,48(sp)
     f42:	001e                	c.slli	zero,0x7
	...
     f50:	0100                	addi	s0,sp,128
     f52:	2082                	fld	ft1,0(sp)
     f54:	00000f6b          	0xf6b
     f58:	001ec63b          	0x1ec63b
     f5c:	0000                	unimp
     f5e:	0000                	unimp
     f60:	3b00                	fld	fs0,48(a4)
     f62:	00001ecf          	fnmadd.s	ft9,ft0,ft0,ft0,rtz
     f66:	0000                	unimp
     f68:	0000                	unimp
     f6a:	3c00                	fld	fs0,56(s0)
	...
     f74:	1ff1                	addi	t6,t6,-4
     f76:	0000                	unimp
     f78:	013d                	addi	sp,sp,15
     f7a:	025a                	slli	tp,tp,0x16
     f7c:	0085                	addi	ra,ra,1
     f7e:	013d                	addi	sp,sp,15
     f80:	0078025b          	0x78025b
     f84:	0000                	unimp
     f86:	0054                	addi	a3,sp,4
     f88:	0000                	unimp
     f8a:	ed00                	sd	s0,24(a0)
     f8c:	4c00000f          	0x4c00000f
     f90:	646e                	ld	s0,216(sp)
     f92:	0100                	addi	s0,sp,128
     f94:	108e                	slli	ra,ra,0x23
     f96:	00000037          	lui	zero,0x0
     f9a:	0000                	unimp
     f9c:	0000                	unimp
     f9e:	b851                	j	832 <.Ldebug_info0+0x832>
     fa0:	001e                	c.slli	zero,0x7
	...
     fb2:	0100                	addi	s0,sp,128
     fb4:	0fc9318f          	0xfc9318f
     fb8:	0000                	unimp
     fba:	001ec63b          	0x1ec63b
     fbe:	0000                	unimp
     fc0:	0000                	unimp
     fc2:	4700                	lw	s0,8(a4)
     fc4:	00001ecf          	fnmadd.s	ft9,ft0,ft0,ft0,rtz
     fc8:	3700                	fld	fs0,40(a4)
     fca:	1e74                	addi	a3,sp,828
	...
     fd8:	0000                	unimp
     fda:	8e01                	sub	a2,a2,s0
     fdc:	3b2a                	fld	fs6,168(sp)
     fde:	1e82                	slli	t4,t4,0x20
     fe0:	0000                	unimp
     fe2:	0000                	unimp
     fe4:	0000                	unimp
     fe6:	001e8b47          	fmsub.s	fs6,ft9,ft1,ft0,rne
     fea:	0000                	unimp
     fec:	3a00                	fld	fs0,48(a2)
     fee:	1f14                	addi	a3,sp,944
	...
     ffc:	0000                	unimp
     ffe:	7a01                	lui	s4,0xfffe0
    1000:	271d                	addiw	a4,a4,7
    1002:	0010                	0x10
    1004:	3b00                	fld	fs0,48(a4)
    1006:	1f1e                	slli	t5,t5,0x27
    1008:	0000                	unimp
    100a:	0000                	unimp
    100c:	0000                	unimp
    100e:	004d                	c.nop	19
    1010:	0000                	unimp
    1012:	4e00                	lw	s0,24(a2)
    1014:	1f28                	addi	a0,sp,952
    1016:	0000                	unimp
    1018:	0000                	unimp
    101a:	0000                	unimp
    101c:	324e                	fld	ft4,240(sp)
    101e:	001f 0000 0000      	0x1f
    1024:	0000                	unimp
    1026:	5000                	lw	s0,32(s0)
	...
    1030:	1ff1                	addi	t6,t6,-4
    1032:	0000                	unimp
    1034:	1052                	c.slli	zero,0x34
    1036:	0000                	unimp
    1038:	013d                	addi	sp,sp,15
    103a:	095a                	slli	s2,s2,0x16
    103c:	00000003          	lb	zero,0(zero) # 0 <.Ldebug_info0>
    1040:	0000                	unimp
    1042:	0000                	unimp
    1044:	3d00                	fld	fs0,56(a0)
    1046:	5b01                	li	s6,-32
    1048:	8202                	jr	tp
    104a:	3d00                	fld	fs0,56(a0)
    104c:	5c01                	li	s8,-32
    104e:	7802                	ld	a6,32(sp)
    1050:	0000                	unimp
    1052:	0050                	addi	a2,sp,4
    1054:	0000                	unimp
    1056:	0000                	unimp
    1058:	0000                	unimp
    105a:	f100                	sd	s0,32(a0)
    105c:	001f 8400 0010      	0x108400001f
    1062:	3d00                	fld	fs0,56(a0)
    1064:	5a01                	li	s4,-32
    1066:	0309                	addi	t1,t1,2
	...
    1070:	013d                	addi	sp,sp,15
    1072:	0003095b          	0x3095b
    1076:	0000                	unimp
    1078:	0000                	unimp
    107a:	0000                	unimp
    107c:	3d00                	fld	fs0,56(a0)
    107e:	5c01                	li	s8,-32
    1080:	0802                	c.slli64	a6
    1082:	0096                	slli	ra,ra,0x5
    1084:	0050                	addi	a2,sp,4
    1086:	0000                	unimp
    1088:	0000                	unimp
    108a:	0000                	unimp
    108c:	fd00                	sd	s0,56(a0)
    108e:	001f 9b00 0010      	0x109b00001f
    1094:	3d00                	fld	fs0,56(a0)
    1096:	5a01                	li	s4,-32
    1098:	3101                	addiw	sp,sp,-32
    109a:	5000                	lw	s0,32(s0)
	...
    10a4:	1ff1                	addi	t6,t6,-4
    10a6:	0000                	unimp
    10a8:	10cd                	addi	ra,ra,-13
    10aa:	0000                	unimp
    10ac:	013d                	addi	sp,sp,15
    10ae:	095a                	slli	s2,s2,0x16
    10b0:	00000003          	lb	zero,0(zero) # 0 <.Ldebug_info0>
    10b4:	0000                	unimp
    10b6:	0000                	unimp
    10b8:	3d00                	fld	fs0,56(a0)
    10ba:	5b01                	li	s6,-32
    10bc:	0309                	addi	t1,t1,2
	...
    10c6:	013d                	addi	sp,sp,15
    10c8:	025c                	addi	a5,sp,260
    10ca:	8c08                	0x8c08
    10cc:	3c00                	fld	fs0,56(s0)
	...
    10d6:	1ffd                	addi	t6,t6,-1
    10d8:	0000                	unimp
    10da:	013d                	addi	sp,sp,15
    10dc:	015a                	slli	sp,sp,0x16
    10de:	0031                	c.nop	12
    10e0:	5500                	lw	s0,40(a0)
    10e2:	0648                	addi	a0,sp,772
    10e4:	0000                	unimp
    10e6:	7701                	lui	a4,0xfffe0
    10e8:	f201                	bnez	a2,fe8 <.Ldebug_info0+0xfe8>
    10ea:	0010                	0x10
    10ec:	0000                	unimp
    10ee:	1105                	addi	sp,sp,-31
    10f0:	0000                	unimp
    10f2:	0045                	c.nop	17
    10f4:	0000                	unimp
    10f6:	9600                	0x9600
    10f8:	0009                	c.nop	2
    10fa:	4500                	lw	s0,8(a0)
    10fc:	0000                	unimp
    10fe:	0000                	unimp
    1100:	0070                	addi	a2,sp,12
    1102:	0000                	unimp
    1104:	5600                	lw	s0,40(a2)
    1106:	10e1                	addi	ra,ra,-8
    1108:	0000                	unimp
    110a:	0000                	unimp
    110c:	0000                	unimp
    110e:	1128                	addi	a0,sp,168
	...
    1120:	0000                	unimp
    1122:	9c01                	subw	s0,s0,s0
    1124:	1184                	addi	s1,sp,224
    1126:	0000                	unimp
    1128:	0010f23b          	0x10f23b
    112c:	0000                	unimp
    112e:	0000                	unimp
    1130:	3700                	fld	fs0,40(a4)
    1132:	1da9                	addi	s11,s11,-22
	...
    1140:	0000                	unimp
    1142:	7701                	lui	a4,0xfffe0
    1144:	3b1f 1dba 0000      	0x1dba3b1f
    114a:	0000                	unimp
    114c:	0000                	unimp
    114e:	0014b437          	lui	s0,0x14b
	...
    115e:	0400                	addi	s0,sp,512
    1160:	135a                	slli	t1,t1,0x36
    1162:	0014ce3b          	0x14ce3b
    1166:	0000                	unimp
    1168:	0000                	unimp
    116a:	3b00                	fld	fs0,48(a4)
    116c:	14c5                	addi	s1,s1,-15
    116e:	0000                	unimp
    1170:	0000                	unimp
    1172:	0000                	unimp
    1174:	00000057          	0x57
    1178:	0000                	unimp
    117a:	0000                	unimp
    117c:	0900                	addi	s0,sp,144
    117e:	0020                	addi	s0,sp,8
    1180:	0000                	unimp
    1182:	0000                	unimp
    1184:	2355                	addiw	t1,t1,21
    1186:	0006                	c.slli	zero,0x1
    1188:	0100                	addi	s0,sp,128
    118a:	1195014f          	fnmadd.s	ft2,fa0,fs9,ft2,rne
    118e:	0000                	unimp
    1190:	ef00                	sd	s0,24(a4)
    1192:	0011                	c.nop	4
    1194:	4500                	lw	s0,8(a0)
    1196:	0000                	unimp
    1198:	0000                	unimp
    119a:	0996                	slli	s3,s3,0x5
    119c:	0000                	unimp
    119e:	0041                	c.nop	16
    11a0:	0000                	unimp
    11a2:	0100                	addi	s0,sp,128
    11a4:	05d01a4f          	0x5d01a4f
    11a8:	0000                	unimp
    11aa:	646e6543          	0x646e6543
    11ae:	0100                	addi	s0,sp,128
    11b0:	05d0284f          	0x5d0284f
    11b4:	0000                	unimp
    11b6:	5258                	lw	a4,36(a2)
    11b8:	0000                	unimp
    11ba:	0000                	unimp
    11bc:	5301                	li	t1,-32
    11be:	370c                	fld	fa1,40(a4)
    11c0:	0000                	unimp
    11c2:	5900                	lw	s0,48(a0)
    11c4:	000011d3          	fadd.s	ft3,ft0,ft0,rtz
    11c8:	691f 0100 106a      	0x106a0100691f
    11ce:	00000037          	lui	zero,0x0
    11d2:	5800                	lw	s0,48(s0)
    11d4:	0052                	c.slli	zero,0x14
    11d6:	0000                	unimp
    11d8:	0100                	addi	s0,sp,128
    11da:	00370d6b          	0x370d6b
    11de:	0000                	unimp
    11e0:	1f58                	addi	a4,sp,948
    11e2:	0069                	c.nop	26
    11e4:	6c01                	0x6c01
    11e6:	690d                	lui	s2,0x3
    11e8:	0000                	unimp
    11ea:	0000                	unimp
    11ec:	0000                	unimp
    11ee:	5600                	lw	s0,40(a2)
    11f0:	1184                	addi	s1,sp,224
    11f2:	0000                	unimp
    11f4:	0000                	unimp
    11f6:	0000                	unimp
    11f8:	1212                	slli	tp,tp,0x24
	...
    120a:	0000                	unimp
    120c:	9c01                	subw	s0,s0,s0
    120e:	14b4                	addi	a3,sp,616
    1210:	0000                	unimp
    1212:	0011953b          	sllw	a0,gp,ra
    1216:	0000                	unimp
    1218:	0000                	unimp
    121a:	3b00                	fld	fs0,48(a4)
    121c:	119e                	slli	gp,gp,0x27
    121e:	0000                	unimp
    1220:	0000                	unimp
    1222:	0000                	unimp
    1224:	0011aa3b          	0x11aa3b
    1228:	0000                	unimp
    122a:	0000                	unimp
    122c:	5a00                	lw	s0,48(a2)
    122e:	11b6                	slli	gp,gp,0x2d
    1230:	0000                	unimp
    1232:	12ea                	slli	t0,t0,0x3a
    1234:	0000                	unimp
    1236:	0011b75b          	0x11b75b
    123a:	5a00                	lw	s0,48(a2)
    123c:	000011c3          	fmadd.s	ft3,ft0,ft0,ft0,rtz
    1240:	124a                	slli	tp,tp,0x32
    1242:	0000                	unimp
    1244:	0011c85b          	0x11c85b
    1248:	0000                	unimp
    124a:	d35a                	sw	s6,164(sp)
    124c:	0011                	c.nop	4
    124e:	7e00                	ld	s0,56(a2)
    1250:	0012                	c.slli	zero,0x4
    1252:	5b00                	lw	s0,48(a4)
    1254:	11d4                	addi	a3,sp,228
    1256:	0000                	unimp
    1258:	e05c                	sd	a5,128(s0)
    125a:	0011                	c.nop	4
    125c:	5b00                	lw	s0,48(a4)
    125e:	11e1                	addi	gp,gp,-8
    1260:	0000                	unimp
    1262:	003c                	addi	a5,sp,8
    1264:	0000                	unimp
    1266:	0000                	unimp
    1268:	0000                	unimp
    126a:	6000                	ld	s0,0(s0)
    126c:	000c                	0xc
    126e:	3d00                	fld	fs0,56(a0)
    1270:	5a01                	li	s4,-32
    1272:	7802                	ld	a6,32(sp)
    1274:	3d00                	fld	fs0,56(a0)
    1276:	5b01                	li	s6,-32
    1278:	8202                	jr	tp
    127a:	0000                	unimp
    127c:	0000                	unimp
    127e:	0050                	addi	a2,sp,4
    1280:	0000                	unimp
    1282:	0000                	unimp
    1284:	0000                	unimp
    1286:	f100                	sd	s0,32(a0)
    1288:	001f a900 0012      	0x12a900001f
    128e:	3d00                	fld	fs0,56(a0)
    1290:	5a01                	li	s4,-32
    1292:	0309                	addi	t1,t1,2
	...
    129c:	013d                	addi	sp,sp,15
    129e:	0082025b          	0x82025b
    12a2:	013d                	addi	sp,sp,15
    12a4:	025c                	addi	a5,sp,260
    12a6:	0079                	c.nop	30
    12a8:	5000                	lw	s0,32(s0)
	...
    12b2:	1ff1                	addi	t6,t6,-4
    12b4:	0000                	unimp
    12b6:	12ce                	slli	t0,t0,0x33
    12b8:	0000                	unimp
    12ba:	013d                	addi	sp,sp,15
    12bc:	095a                	slli	s2,s2,0x16
    12be:	00000003          	lb	zero,0(zero) # 0 <.Ldebug_info0>
    12c2:	0000                	unimp
    12c4:	0000                	unimp
    12c6:	3d00                	fld	fs0,56(a0)
    12c8:	5b01                	li	s6,-32
    12ca:	7902                	ld	s2,32(sp)
    12cc:	0000                	unimp
    12ce:	003e                	c.slli	zero,0xf
    12d0:	0000                	unimp
    12d2:	0000                	unimp
    12d4:	0000                	unimp
    12d6:	1500                	addi	s0,sp,672
    12d8:	0020                	addi	s0,sp,8
    12da:	3d00                	fld	fs0,56(a0)
    12dc:	5a01                	li	s4,-32
    12de:	0309                	addi	t1,t1,2
	...
    12e8:	0000                	unimp
    12ea:	b65d                	j	e90 <.Ldebug_info0+0xe90>
    12ec:	0011                	c.nop	4
    12ee:	0000                	unimp
    12f0:	0000                	unimp
    12f2:	4e00                	lw	s0,24(a2)
    12f4:	000011b7          	lui	gp,0x1
    12f8:	0000                	unimp
    12fa:	0000                	unimp
    12fc:	143a                	slli	s0,s0,0x2e
    12fe:	001f 0000 0000      	0x1f
	...
    130c:	0100                	addi	s0,sp,128
    130e:	1b66                	slli	s6,s6,0x39
    1310:	1336                	slli	t1,t1,0x2d
    1312:	0000                	unimp
    1314:	001f1e3b          	sllw	t3,t5,ra
    1318:	0000                	unimp
    131a:	0000                	unimp
    131c:	4d00                	lw	s0,24(a0)
    131e:	0000                	unimp
    1320:	0000                	unimp
    1322:	284e                	fld	fa6,208(sp)
    1324:	001f 0000 0000      	0x1f
    132a:	4e00                	lw	s0,24(a2)
    132c:	1f32                	slli	t5,t5,0x2c
	...
    1336:	f151                	bnez	a0,12ba <.Ldebug_info0+0x12ba>
    1338:	001d                	c.nop	7
	...
    134a:	0100                	addi	s0,sp,128
    134c:	2969                	addiw	s2,s2,26
    134e:	13dd                	addi	t2,t2,-9
    1350:	0000                	unimp
    1352:	001e063b          	addw	a2,t3,ra
    1356:	0000                	unimp
    1358:	0000                	unimp
    135a:	5e00                	lw	s0,56(a2)
    135c:	1590                	addi	a2,sp,736
	...
    136e:	0000                	unimp
    1370:	5104                	lw	s1,32(a0)
    1372:	15aa471b          	0x15aa471b
    1376:	0000                	unimp
    1378:	0015a147          	fmsub.s	ft2,fa1,ft1,ft0,rdn
    137c:	5f00                	lw	s0,56(a4)
    137e:	15b6                	slli	a1,a1,0x2d
	...
    1390:	0000                	unimp
    1392:	b74e                	fsd	fs3,424(sp)
    1394:	0015                	c.nop	5
    1396:	0000                	unimp
    1398:	0000                	unimp
    139a:	5d00                	lw	s0,56(a0)
    139c:	000015c3          	fmadd.s	fa1,ft0,ft0,ft0,rtz
    13a0:	0000                	unimp
    13a2:	0000                	unimp
    13a4:	c44e                	sw	s3,8(sp)
    13a6:	0015                	c.nop	5
    13a8:	0000                	unimp
    13aa:	0000                	unimp
    13ac:	5000                	lw	s0,32(s0)
	...
    13b6:	201e                	fld	ft0,448(sp)
    13b8:	0000                	unimp
    13ba:	13c5                	addi	t2,t2,-15
    13bc:	0000                	unimp
    13be:	013d                	addi	sp,sp,15
    13c0:	025a                	slli	tp,tp,0x16
    13c2:	3c000083          	lb	ra,960(zero) # 3c0 <.Ldebug_info0+0x3c0>
	...
    13ce:	201e                	fld	ft0,448(sp)
    13d0:	0000                	unimp
    13d2:	013d                	addi	sp,sp,15
    13d4:	025a                	slli	tp,tp,0x16
    13d6:	00000083          	lb	ra,0(zero) # 0 <.Ldebug_info0>
    13da:	0000                	unimp
    13dc:	4f00                	lw	s0,24(a4)
    13de:	000011c3          	fmadd.s	ft3,ft0,ft0,ft0,rtz
    13e2:	0000                	unimp
    13e4:	0000                	unimp
    13e6:	13f4                	addi	a3,sp,492
    13e8:	0000                	unimp
    13ea:	c84e                	sw	s3,16(sp)
    13ec:	0011                	c.nop	4
    13ee:	0000                	unimp
    13f0:	0000                	unimp
    13f2:	0000                	unimp
    13f4:	0011d34f          	fnmadd.s	ft6,ft3,ft1,ft0,unknown
    13f8:	0000                	unimp
    13fa:	0000                	unimp
    13fc:	1e00                	addi	s0,sp,816
    13fe:	0014                	0x14
    1400:	4e00                	lw	s0,24(a2)
    1402:	11d4                	addi	a3,sp,228
    1404:	0000                	unimp
    1406:	0000                	unimp
    1408:	0000                	unimp
    140a:	e05d                	bnez	s0,14b0 <.Ldebug_info0+0x14b0>
    140c:	0011                	c.nop	4
    140e:	0000                	unimp
    1410:	0000                	unimp
    1412:	4e00                	lw	s0,24(a2)
    1414:	11e1                	addi	gp,gp,-8
	...
    141e:	da5e                	sw	s7,52(sp)
    1420:	001e                	c.slli	zero,0x7
	...
    1432:	0100                	addi	s0,sp,128
    1434:	0572                	slli	a0,a0,0x1c
    1436:	001ee83b          	0x1ee83b
    143a:	0000                	unimp
    143c:	0000                	unimp
    143e:	3b00                	fld	fs0,48(a4)
    1440:	1ee8                	addi	a0,sp,892
    1442:	0000                	unimp
    1444:	0000                	unimp
    1446:	0000                	unimp
    1448:	f160                	sd	s0,224(a0)
    144a:	001e                	c.slli	zero,0x7
	...
    145c:	7f00                	ld	s0,56(a4)
    145e:	0014                	0x14
    1460:	4e00                	lw	s0,24(a2)
    1462:	1ef2                	slli	t4,t4,0x3c
    1464:	0000                	unimp
    1466:	0000                	unimp
    1468:	0000                	unimp
    146a:	003c                	addi	a5,sp,8
    146c:	0000                	unimp
    146e:	0000                	unimp
    1470:	0000                	unimp
    1472:	f100                	sd	s0,32(a0)
    1474:	001f 3d00 5a01      	0x5a013d00001f
    147a:	8202                	jr	tp
    147c:	0000                	unimp
    147e:	5000                	lw	s0,32(s0)
	...
    1488:	1ff1                	addi	t6,t6,-4
    148a:	0000                	unimp
    148c:	149e                	slli	s1,s1,0x27
    148e:	0000                	unimp
    1490:	013d                	addi	sp,sp,15
    1492:	095a                	slli	s2,s2,0x16
    1494:	00000003          	lb	zero,0(zero) # 0 <.Ldebug_info0>
    1498:	0000                	unimp
    149a:	0000                	unimp
    149c:	0000                	unimp
    149e:	003c                	addi	a5,sp,8
    14a0:	0000                	unimp
    14a2:	0000                	unimp
    14a4:	0000                	unimp
    14a6:	2a00                	fld	fs0,16(a2)
    14a8:	0020                	addi	s0,sp,8
    14aa:	3d00                	fld	fs0,56(a0)
    14ac:	5a01                	li	s4,-32
    14ae:	3a01                	addiw	s4,s4,-32
    14b0:	0000                	unimp
    14b2:	0000                	unimp
    14b4:	7955                	lui	s2,0xffff5
    14b6:	0008                	0x8
    14b8:	0100                	addi	s0,sp,128
    14ba:	14c50647          	0x14c50647
    14be:	0000                	unimp
    14c0:	db01                	beqz	a4,13d0 <.Ldebug_info0+0x13d0>
    14c2:	0014                	0x14
    14c4:	4500                	lw	s0,8(a0)
    14c6:	0000                	unimp
    14c8:	0000                	unimp
    14ca:	000009a7          	0x9a7
    14ce:	72747043          	fmadd.d	ft0,fs0,ft7,fa4
    14d2:	0100                	addi	s0,sp,128
    14d4:	00291a47          	fmsub.s	fs4,fs2,ft2,ft0,rtz
    14d8:	0000                	unimp
    14da:	4800                	lw	s0,16(s0)
    14dc:	0850                	addi	a2,sp,20
    14de:	0000                	unimp
    14e0:	3f01                	addiw	t5,t5,-32
    14e2:	0014fd07          	0x14fd07
	...
    14f6:	0100                	addi	s0,sp,128
    14f8:	909c                	0x909c
    14fa:	0015                	c.nop	5
    14fc:	4900                	lw	s0,16(a0)
    14fe:	0000                	unimp
    1500:	0000                	unimp
    1502:	000009a7          	0x9a7
    1506:	0000                	unimp
    1508:	0000                	unimp
    150a:	0000004b          	fnmsub.s	ft0,ft0,ft0,ft0,rne
    150e:	0100                	addi	s0,sp,128
    1510:	0037263f 00000000 	0x37263f
    1518:	0000                	unimp
    151a:	0000004b          	fnmsub.s	ft0,ft0,ft0,ft0,rne
    151e:	0100                	addi	s0,sp,128
    1520:	0037323f 00000000 	0x37323f
    1528:	0000                	unimp
    152a:	004d                	c.nop	19
    152c:	0000                	unimp
    152e:	5300                	lw	s0,32(a4)
    1530:	0000                	unimp
    1532:	0000                	unimp
    1534:	4001                	c.li	zero,0
    1536:	690d                	lui	s2,0x3
    1538:	0000                	unimp
    153a:	0000                	unimp
    153c:	0000                	unimp
    153e:	4d00                	lw	s0,24(a0)
    1540:	0000                	unimp
    1542:	0000                	unimp
    1544:	724c                	ld	a1,160(a2)
    1546:	0074                	addi	a3,sp,12
    1548:	4101                	li	sp,0
    154a:	0000290f          	0x290f
    154e:	0000                	unimp
    1550:	0000                	unimp
    1552:	5000                	lw	s0,32(s0)
	...
    155c:	00002033          	sltz	zero,zero
    1560:	1571                	addi	a0,a0,-4
    1562:	0000                	unimp
    1564:	013d                	addi	sp,sp,15
    1566:	025a                	slli	tp,tp,0x16
    1568:	0078                	addi	a4,sp,12
    156a:	013d                	addi	sp,sp,15
    156c:	0079025b          	0x79025b
    1570:	3e00                	fld	fs0,56(a2)
	...
    157a:	00002033          	sltz	zero,zero
    157e:	013d                	addi	sp,sp,15
    1580:	035a                	slli	t1,t1,0x16
    1582:	3d5c01f3          	0x3d5c01f3
    1586:	5b01                	li	s6,-32
    1588:	5b01f303          	0x5b01f303
    158c:	0000                	unimp
    158e:	0000                	unimp
    1590:	2c55                	addiw	s8,s8,21
    1592:	0008                	0x8
    1594:	0100                	addi	s0,sp,128
    1596:	0736                	slli	a4,a4,0xd
    1598:	15a1                	addi	a1,a1,-24
    159a:	0000                	unimp
    159c:	ff01                	bnez	a4,14b4 <.Ldebug_info0+0x14b4>
    159e:	0015                	c.nop	5
    15a0:	4500                	lw	s0,8(a0)
    15a2:	0000                	unimp
    15a4:	0000                	unimp
    15a6:	000009a7          	0x9a7
    15aa:	0041                	c.nop	16
    15ac:	0000                	unimp
    15ae:	0100                	addi	s0,sp,128
    15b0:	1d36                	slli	s10,s10,0x2d
    15b2:	00000037          	lui	zero,0x0
    15b6:	5258                	lw	a4,36(a2)
    15b8:	0000                	unimp
    15ba:	0000                	unimp
    15bc:	3701                	addiw	a4,a4,-32
    15be:	690d                	lui	s2,0x3
    15c0:	0000                	unimp
    15c2:	5800                	lw	s0,48(s0)
    15c4:	721f 0074 3801      	0x38010074721f
    15ca:	0000290f          	0x290f
    15ce:	5000                	lw	s0,32(s0)
	...
    15d8:	201e                	fld	ft0,448(sp)
    15da:	0000                	unimp
    15dc:	000015e7          	0x15e7
    15e0:	013d                	addi	sp,sp,15
    15e2:	025a                	slli	tp,tp,0x16
    15e4:	0078                	addi	a4,sp,12
    15e6:	3e00                	fld	fs0,56(a2)
	...
    15f0:	201e                	fld	ft0,448(sp)
    15f2:	0000                	unimp
    15f4:	013d                	addi	sp,sp,15
    15f6:	035a                	slli	t1,t1,0x16
    15f8:	005b01f3          	0x5b01f3
    15fc:	0000                	unimp
    15fe:	5500                	lw	s0,40(a0)
    1600:	0966                	slli	s2,s2,0x19
    1602:	0000                	unimp
    1604:	2601                	sext.w	a2,a2
    1606:	1001                	c.nop	-32
    1608:	0016                	c.slli	zero,0x5
    160a:	0000                	unimp
    160c:	164c                	addi	a1,sp,804
    160e:	0000                	unimp
    1610:	0045                	c.nop	17
    1612:	0000                	unimp
    1614:	e000                	sd	s0,0(s0)
    1616:	0009                	c.nop	2
    1618:	4500                	lw	s0,8(a0)
    161a:	0000                	unimp
    161c:	0000                	unimp
    161e:	0070                	addi	a2,sp,12
    1620:	0000                	unimp
    1622:	0061                	c.nop	24
    1624:	0000                	unimp
    1626:	5c00                	lw	s0,56(s0)
    1628:	0016                	c.slli	zero,0x5
    162a:	5900                	lw	s0,48(a0)
    162c:	163d                	addi	a2,a2,-17
    162e:	0000                	unimp
    1630:	0052                	c.slli	zero,0x14
    1632:	0000                	unimp
    1634:	0100                	addi	s0,sp,128
    1636:	09ac272b          	0x9ac272b
    163a:	0000                	unimp
    163c:	5800                	lw	s0,48(s0)
    163e:	0052                	c.slli	zero,0x14
    1640:	0000                	unimp
    1642:	0100                	addi	s0,sp,128
    1644:	0e30                	addi	a2,sp,792
    1646:	02d1                	addi	t0,t0,20
    1648:	0000                	unimp
    164a:	0000                	unimp
    164c:	5a1c                	lw	a5,48(a2)
    164e:	0005                	c.nop	1
    1650:	5c00                	lw	s0,56(s0)
    1652:	0016                	c.slli	zero,0x5
    1654:	1d00                	addi	s0,sp,688
    1656:	0048                	addi	a0,sp,4
    1658:	0000                	unimp
    165a:	0010                	0x10
    165c:	4c04                	lw	s1,24(s0)
    165e:	0016                	c.slli	zero,0x5
    1660:	5600                	lw	s0,40(a2)
    1662:	000015ff          	kaddw	a1,zero,zero
    1666:	0000                	unimp
    1668:	0000                	unimp
    166a:	1684                	addi	s1,sp,864
	...
    167c:	0000                	unimp
    167e:	9c01                	subw	s0,s0,s0
    1680:	1826                	slli	a6,a6,0x29
    1682:	0000                	unimp
    1684:	0016103b          	sllw	zero,a2,ra
    1688:	0000                	unimp
    168a:	0000                	unimp
    168c:	5900                	lw	s0,48(a0)
    168e:	1736                	slli	a4,a4,0x2d
    1690:	0000                	unimp
    1692:	2b5a                	fld	fs6,400(sp)
    1694:	0016                	c.slli	zero,0x5
    1696:	ae00                	fsd	fs0,24(a2)
    1698:	0016                	c.slli	zero,0x5
    169a:	5b00                	lw	s0,48(a4)
    169c:	1630                	addi	a2,sp,808
    169e:	0000                	unimp
    16a0:	00000057          	0x57
    16a4:	0000                	unimp
    16a6:	0000                	unimp
    16a8:	3f00                	fld	fs0,56(a4)
    16aa:	0020                	addi	s0,sp,8
    16ac:	0000                	unimp
    16ae:	3d5a                	fld	fs10,432(sp)
    16b0:	0016                	c.slli	zero,0x5
    16b2:	dd00                	sw	s0,56(a0)
    16b4:	0016                	c.slli	zero,0x5
    16b6:	5b00                	lw	s0,48(a4)
    16b8:	163e                	slli	a2,a2,0x2f
    16ba:	0000                	unimp
    16bc:	003c                	addi	a5,sp,8
    16be:	0000                	unimp
    16c0:	0000                	unimp
    16c2:	0000                	unimp
    16c4:	f100                	sd	s0,32(a0)
    16c6:	001f 3d00 5a01      	0x5a013d00001f
    16cc:	8402                	jr	s0
    16ce:	3d00                	fld	fs0,56(a0)
    16d0:	5b01                	li	s6,-32
    16d2:	8202                	jr	tp
    16d4:	3d00                	fld	fs0,56(a0)
    16d6:	5c01                	li	s8,-32
    16d8:	8302                	jr	t1
    16da:	0000                	unimp
    16dc:	5000                	lw	s0,32(s0)
	...
    16e6:	1ff1                	addi	t6,t6,-4
    16e8:	0000                	unimp
    16ea:	1709                	addi	a4,a4,-30
    16ec:	0000                	unimp
    16ee:	013d                	addi	sp,sp,15
    16f0:	095a                	slli	s2,s2,0x16
    16f2:	00000003          	lb	zero,0(zero) # 0 <.Ldebug_info0>
    16f6:	0000                	unimp
    16f8:	0000                	unimp
    16fa:	3d00                	fld	fs0,56(a0)
    16fc:	5b01                	li	s6,-32
    16fe:	0309                	addi	t1,t1,2
	...
    1708:	5000                	lw	s0,32(s0)
	...
    1712:	1ff1                	addi	t6,t6,-4
    1714:	0000                	unimp
    1716:	1728                	addi	a0,sp,936
    1718:	0000                	unimp
    171a:	013d                	addi	sp,sp,15
    171c:	095a                	slli	s2,s2,0x16
    171e:	00000003          	lb	zero,0(zero) # 0 <.Ldebug_info0>
    1722:	0000                	unimp
    1724:	0000                	unimp
    1726:	0000                	unimp
    1728:	00000057          	0x57
    172c:	0000                	unimp
    172e:	0000                	unimp
    1730:	3f00                	fld	fs0,56(a4)
    1732:	0020                	addi	s0,sp,8
    1734:	0000                	unimp
    1736:	004d                	c.nop	19
    1738:	0000                	unimp
    173a:	6000                	ld	s0,0(s0)
    173c:	0000162b          	0x162b
	...
    1750:	177c                	addi	a5,sp,940
    1752:	0000                	unimp
    1754:	304e                	fld	ft0,240(sp)
    1756:	0016                	c.slli	zero,0x5
    1758:	0000                	unimp
    175a:	0000                	unimp
    175c:	5e00                	lw	s0,56(a2)
    175e:	1efe                	slli	t4,t4,0x3f
	...
    1770:	0000                	unimp
    1772:	2c01                	sext.w	s8,s8
    1774:	472e                	lw	a4,200(sp)
    1776:	1f08                	addi	a0,sp,944
    1778:	0000                	unimp
    177a:	0000                	unimp
    177c:	3d5d                	addiw	s10,s10,-9
    177e:	0016                	c.slli	zero,0x5
    1780:	0000                	unimp
    1782:	0000                	unimp
    1784:	5b00                	lw	s0,48(a4)
    1786:	163e                	slli	a2,a2,0x2f
    1788:	0000                	unimp
    178a:	000bd237          	lui	tp,0xbd
	...
    179a:	0100                	addi	s0,sp,128
    179c:	2630                	fld	fa2,72(a2)
    179e:	000be03b          	0xbe03b
    17a2:	0000                	unimp
    17a4:	0000                	unimp
    17a6:	3b00                	fld	fs0,48(a4)
    17a8:	0be0                	addi	s0,sp,476
    17aa:	0000                	unimp
    17ac:	0000                	unimp
    17ae:	0000                	unimp
    17b0:	004d                	c.nop	19
    17b2:	0000                	unimp
    17b4:	4e00                	lw	s0,24(a2)
    17b6:	0be9                	addi	s7,s7,26
    17b8:	0000                	unimp
    17ba:	0000                	unimp
    17bc:	0000                	unimp
    17be:	c75e                	sw	s7,140(sp)
    17c0:	001d                	c.nop	7
	...
    17d2:	0200                	addi	s0,sp,256
    17d4:	0561                	addi	a0,a0,24
    17d6:	001de43b          	0x1de43b
    17da:	0000                	unimp
    17dc:	0000                	unimp
    17de:	3b00                	fld	fs0,48(a4)
    17e0:	1dd8                	addi	a4,sp,756
    17e2:	0000                	unimp
    17e4:	0000                	unimp
    17e6:	0000                	unimp
    17e8:	b45e                	fsd	fs7,40(sp)
    17ea:	0014                	0x14
	...
    17fc:	0400                	addi	s0,sp,512
    17fe:	ce3b1357          	0xce3b1357
    1802:	0014                	0x14
    1804:	0000                	unimp
    1806:	0000                	unimp
    1808:	3b00                	fld	fs0,48(a4)
    180a:	14c5                	addi	s1,s1,-15
    180c:	0000                	unimp
    180e:	0000                	unimp
    1810:	0000                	unimp
    1812:	00000057          	0x57
    1816:	0000                	unimp
    1818:	0000                	unimp
    181a:	0900                	addi	s0,sp,144
    181c:	0020                	addi	s0,sp,8
	...
    1826:	1755                	addi	a4,a4,-11
    1828:	0009                	c.nop	2
    182a:	0100                	addi	s0,sp,128
    182c:	18370123          	sb	gp,386(a4) # fffffffffffe0182 <pool+0xffffffffffee9182>
    1830:	0000                	unimp
    1832:	5900                	lw	s0,48(a0)
    1834:	0018                	0x18
    1836:	4500                	lw	s0,8(a0)
    1838:	0000                	unimp
    183a:	0000                	unimp
    183c:	09e0                	addi	s0,sp,220
    183e:	0000                	unimp
    1840:	0041                	c.nop	16
    1842:	0000                	unimp
    1844:	0100                	addi	s0,sp,128
    1846:	09e52b23          	sw	t5,150(a0) # fffffffffffe2096 <pool+0xffffffffffeeb096>
    184a:	0000                	unimp
    184c:	0041                	c.nop	16
    184e:	0000                	unimp
    1850:	0100                	addi	s0,sp,128
    1852:	09d43a23          	sd	t4,148(s0) # 14b094 <pool+0x54094>
    1856:	0000                	unimp
    1858:	5600                	lw	s0,40(a2)
    185a:	1826                	slli	a6,a6,0x29
    185c:	0000                	unimp
    185e:	0000                	unimp
    1860:	0000                	unimp
    1862:	187c                	addi	a5,sp,60
	...
    1874:	0000                	unimp
    1876:	9c01                	subw	s0,s0,s0
    1878:	1945                	addi	s2,s2,-15
    187a:	0000                	unimp
    187c:	0018373b          	0x18373b
    1880:	0000                	unimp
    1882:	0000                	unimp
    1884:	3b00                	fld	fs0,48(a4)
    1886:	1840                	addi	s0,sp,52
    1888:	0000                	unimp
    188a:	0000                	unimp
    188c:	0000                	unimp
    188e:	00184c3b          	0x184c3b
    1892:	0000                	unimp
    1894:	0000                	unimp
    1896:	5100                	lw	s0,32(a0)
    1898:	0c0d                	addi	s8,s8,3
	...
    18aa:	0000                	unimp
    18ac:	2301                	sext.w	t1,t1
    18ae:	bd64                	fsd	fs1,248(a0)
    18b0:	0018                	0x18
    18b2:	3b00                	fld	fs0,48(a4)
    18b4:	00000c1b          	sext.w	s8,zero
    18b8:	0000                	unimp
    18ba:	0000                	unimp
    18bc:	5e00                	lw	s0,56(a2)
    18be:	1590                	addi	a2,sp,736
	...
    18d0:	0000                	unimp
    18d2:	2401                	sext.w	s0,s0
    18d4:	15aa3b2f          	0x15aa3b2f
    18d8:	0000                	unimp
    18da:	0000                	unimp
    18dc:	0000                	unimp
    18de:	0015a13b          	0x15a13b
    18e2:	0000                	unimp
    18e4:	0000                	unimp
    18e6:	5f00                	lw	s0,56(a4)
    18e8:	15b6                	slli	a1,a1,0x2d
	...
    18fa:	0000                	unimp
    18fc:	b74e                	fsd	fs3,424(sp)
    18fe:	0015                	c.nop	5
    1900:	0000                	unimp
    1902:	0000                	unimp
    1904:	5d00                	lw	s0,56(a0)
    1906:	000015c3          	fmadd.s	fa1,ft0,ft0,ft0,rtz
    190a:	0000                	unimp
    190c:	0000                	unimp
    190e:	c44e                	sw	s3,8(sp)
    1910:	0015                	c.nop	5
    1912:	0000                	unimp
    1914:	0000                	unimp
    1916:	5000                	lw	s0,32(s0)
	...
    1920:	201e                	fld	ft0,448(sp)
    1922:	0000                	unimp
    1924:	192e                	slli	s2,s2,0x2b
    1926:	0000                	unimp
    1928:	013d                	addi	sp,sp,15
    192a:	015a                	slli	sp,sp,0x16
    192c:	0048                	addi	a0,sp,4
    192e:	003c                	addi	a5,sp,8
    1930:	0000                	unimp
    1932:	0000                	unimp
    1934:	0000                	unimp
    1936:	1e00                	addi	s0,sp,816
    1938:	0020                	addi	s0,sp,8
    193a:	3d00                	fld	fs0,56(a0)
    193c:	5a01                	li	s4,-32
    193e:	4801                	li	a6,0
    1940:	0000                	unimp
    1942:	0000                	unimp
    1944:	5500                	lw	s0,40(a0)
    1946:	093c                	addi	a5,sp,152
    1948:	0000                	unimp
    194a:	2001                	0x2001
    194c:	5601                	li	a2,-32
    194e:	0019                	c.nop	6
    1950:	0000                	unimp
    1952:	1984                	addi	s1,sp,240
    1954:	0000                	unimp
    1956:	0045                	c.nop	17
    1958:	0000                	unimp
    195a:	e000                	sd	s0,0(s0)
    195c:	0009                	c.nop	2
    195e:	4100                	lw	s0,0(a0)
    1960:	0000                	unimp
    1962:	0000                	unimp
    1964:	2001                	0x2001
    1966:	2928                	fld	fa0,80(a0)
    1968:	0000                	unimp
    196a:	4300                	lw	s0,0(a4)
    196c:	656c                	ld	a1,200(a0)
    196e:	006e                	c.slli	zero,0x1b
    1970:	2001                	0x2001
    1972:	3734                	fld	fa3,104(a4)
    1974:	0000                	unimp
    1976:	4100                	lw	s0,0(a0)
    1978:	0000                	unimp
    197a:	0000                	unimp
    197c:	2001                	0x2001
    197e:	d441                	beqz	s0,1906 <.Ldebug_info0+0x1906>
    1980:	0009                	c.nop	2
    1982:	0000                	unimp
    1984:	4556                	lw	a0,84(sp)
    1986:	0019                	c.nop	6
    1988:	0000                	unimp
    198a:	0000                	unimp
    198c:	a700                	fsd	fs0,8(a4)
    198e:	0019                	c.nop	6
	...
    19a0:	0100                	addi	s0,sp,128
    19a2:	c99c                	sw	a5,16(a1)
    19a4:	001a                	c.slli	zero,0x6
    19a6:	3b00                	fld	fs0,48(a4)
    19a8:	1956                	slli	s2,s2,0x35
    19aa:	0000                	unimp
    19ac:	0000                	unimp
    19ae:	0000                	unimp
    19b0:	00195f3b          	srlw	t5,s2,ra
    19b4:	0000                	unimp
    19b6:	0000                	unimp
    19b8:	3b00                	fld	fs0,48(a4)
    19ba:	0000196b          	0x196b
    19be:	0000                	unimp
    19c0:	0000                	unimp
    19c2:	0019773b          	0x19773b
    19c6:	0000                	unimp
    19c8:	0000                	unimp
    19ca:	3a00                	fld	fs0,48(a2)
    19cc:	00001d1b          	slliw	s10,zero,0x0
	...
    19dc:	2001                	0x2001
    19de:	1b6e                	slli	s6,s6,0x3b
    19e0:	001a                	c.slli	zero,0x6
    19e2:	3b00                	fld	fs0,48(a4)
    19e4:	1d41                	addi	s10,s10,-16
    19e6:	0000                	unimp
    19e8:	0000                	unimp
    19ea:	0000                	unimp
    19ec:	001d353b          	0x1d353b
    19f0:	0000                	unimp
    19f2:	0000                	unimp
    19f4:	3b00                	fld	fs0,48(a4)
    19f6:	1d2c                	addi	a1,sp,696
    19f8:	0000                	unimp
    19fa:	0000                	unimp
    19fc:	0000                	unimp
    19fe:	003c                	addi	a5,sp,8
    1a00:	0000                	unimp
    1a02:	0000                	unimp
    1a04:	0000                	unimp
    1a06:	dc00                	sw	s0,56(s0)
    1a08:	001f 3d00 5a01      	0x5a013d00001f
    1a0e:	5b01f303          	0x5b01f303
    1a12:	013d                	addi	sp,sp,15
    1a14:	01f3035b          	0x1f3035b
    1a18:	005c                	addi	a5,sp,4
    1a1a:	5100                	lw	s0,32(a0)
    1a1c:	0c0d                	addi	s8,s8,3
	...
    1a2e:	0000                	unimp
    1a30:	2001                	0x2001
    1a32:	416e                	lw	sp,216(sp)
    1a34:	001a                	c.slli	zero,0x6
    1a36:	3b00                	fld	fs0,48(a4)
    1a38:	00000c1b          	sext.w	s8,zero
    1a3c:	0000                	unimp
    1a3e:	0000                	unimp
    1a40:	5e00                	lw	s0,56(a2)
    1a42:	1590                	addi	a2,sp,736
	...
    1a54:	0000                	unimp
    1a56:	2101                	sext.w	sp,sp
    1a58:	15aa3b2f          	0x15aa3b2f
    1a5c:	0000                	unimp
    1a5e:	0000                	unimp
    1a60:	0000                	unimp
    1a62:	0015a13b          	0x15a13b
    1a66:	0000                	unimp
    1a68:	0000                	unimp
    1a6a:	5f00                	lw	s0,56(a4)
    1a6c:	15b6                	slli	a1,a1,0x2d
	...
    1a7e:	0000                	unimp
    1a80:	b74e                	fsd	fs3,424(sp)
    1a82:	0015                	c.nop	5
    1a84:	0000                	unimp
    1a86:	0000                	unimp
    1a88:	5d00                	lw	s0,56(a0)
    1a8a:	000015c3          	fmadd.s	fa1,ft0,ft0,ft0,rtz
    1a8e:	0000                	unimp
    1a90:	0000                	unimp
    1a92:	c44e                	sw	s3,8(sp)
    1a94:	0015                	c.nop	5
    1a96:	0000                	unimp
    1a98:	0000                	unimp
    1a9a:	5000                	lw	s0,32(s0)
	...
    1aa4:	201e                	fld	ft0,448(sp)
    1aa6:	0000                	unimp
    1aa8:	1ab2                	slli	s5,s5,0x2c
    1aaa:	0000                	unimp
    1aac:	013d                	addi	sp,sp,15
    1aae:	015a                	slli	sp,sp,0x16
    1ab0:	0048                	addi	a0,sp,4
    1ab2:	003c                	addi	a5,sp,8
    1ab4:	0000                	unimp
    1ab6:	0000                	unimp
    1ab8:	0000                	unimp
    1aba:	1e00                	addi	s0,sp,816
    1abc:	0020                	addi	s0,sp,8
    1abe:	3d00                	fld	fs0,56(a0)
    1ac0:	5a01                	li	s4,-32
    1ac2:	4801                	li	a6,0
    1ac4:	0000                	unimp
    1ac6:	0000                	unimp
    1ac8:	4800                	lw	s0,16(s0)
    1aca:	08fd                	addi	a7,a7,31
    1acc:	0000                	unimp
    1ace:	1101                	addi	sp,sp,-32
    1ad0:	eb06                	sd	ra,400(sp)
    1ad2:	001a                	c.slli	zero,0x6
	...
    1ae4:	0100                	addi	s0,sp,128
    1ae6:	b79c                	fsd	fa5,40(a5)
    1ae8:	001c                	0x1c
    1aea:	4900                	lw	s0,16(a0)
    1aec:	0000                	unimp
    1aee:	0000                	unimp
    1af0:	09e0                	addi	s0,sp,220
    1af2:	0000                	unimp
    1af4:	0000                	unimp
    1af6:	0000                	unimp
    1af8:	0062                	c.slli	zero,0x18
    1afa:	0000                	unimp
    1afc:	c700                	sw	s0,8(a4)
    1afe:	001c                	0x1c
    1b00:	0900                	addi	s0,sp,144
    1b02:	00000003          	lb	zero,0(zero) # 0 <.Ldebug_info0>
    1b06:	0000                	unimp
    1b08:	0000                	unimp
    1b0a:	5300                	lw	s0,32(a4)
    1b0c:	0000                	unimp
    1b0e:	0000                	unimp
    1b10:	1501                	addi	a0,a0,-32
    1b12:	830a                	mv	t1,sp
    1b14:	0009                	c.nop	2
    1b16:	0000                	unimp
    1b18:	0000                	unimp
    1b1a:	5300                	lw	s0,32(a4)
    1b1c:	0000                	unimp
    1b1e:	0000                	unimp
    1b20:	1701                	addi	a4,a4,-32
    1b22:	0000290b          	0x290b
    1b26:	0000                	unimp
    1b28:	0000                	unimp
    1b2a:	3a00                	fld	fs0,48(a2)
    1b2c:	1efe                	slli	t4,t4,0x3f
	...
    1b3a:	0000                	unimp
    1b3c:	1701                	addi	a4,a4,-32
    1b3e:	4925                	li	s2,9
    1b40:	4700001b          	addiw	zero,zero,1136
    1b44:	1f08                	addi	a0,sp,944
    1b46:	0000                	unimp
    1b48:	3a00                	fld	fs0,48(a2)
    1b4a:	0c3c                	addi	a5,sp,536
	...
    1b58:	0000                	unimp
    1b5a:	1901                	addi	s2,s2,-32
    1b5c:	001ba817          	auipc	a6,0x1ba
    1b60:	3b00                	fld	fs0,48(a4)
    1b62:	0c4a                	slli	s8,s8,0x12
    1b64:	0000                	unimp
    1b66:	0000                	unimp
    1b68:	0000                	unimp
    1b6a:	000c4a3b          	0xc4a3b
    1b6e:	0000                	unimp
    1b70:	0000                	unimp
    1b72:	3b00                	fld	fs0,48(a4)
    1b74:	00000c53          	fadd.s	fs8,ft0,ft0,rne
    1b78:	0000                	unimp
    1b7a:	0000                	unimp
    1b7c:	645e                	ld	s0,464(sp)
    1b7e:	0000000b          	0xb
	...
    1b8e:	0000                	unimp
    1b90:	0200                	addi	s0,sp,256
    1b92:	6e3b264b          	fnmsub.q	fa2,fs6,ft3,fa3,rdn
    1b96:	0000000b          	0xb
    1b9a:	0000                	unimp
    1b9c:	3b00                	fld	fs0,48(a4)
    1b9e:	0b7a                	slli	s6,s6,0x1e
	...
    1ba8:	9051                	srli	s0,s0,0x34
    1baa:	0015                	c.nop	5
	...
    1bbc:	0100                	addi	s0,sp,128
    1bbe:	2f1a                	fld	ft10,384(sp)
    1bc0:	00001c33          	sll	s8,zero,zero
    1bc4:	0015aa3b          	0x15aa3b
    1bc8:	0000                	unimp
    1bca:	0000                	unimp
    1bcc:	3b00                	fld	fs0,48(a4)
    1bce:	15a1                	addi	a1,a1,-24
    1bd0:	0000                	unimp
    1bd2:	0000                	unimp
    1bd4:	0000                	unimp
    1bd6:	b65f 0015 0000      	0x15b65f
	...
    1be8:	0000                	unimp
    1bea:	4e00                	lw	s0,24(a2)
    1bec:	000015b7          	lui	a1,0x1
    1bf0:	0000                	unimp
    1bf2:	0000                	unimp
    1bf4:	c35d                	beqz	a4,1c9a <.Ldebug_info0+0x1c9a>
    1bf6:	0015                	c.nop	5
    1bf8:	0000                	unimp
    1bfa:	0000                	unimp
    1bfc:	4e00                	lw	s0,24(a2)
    1bfe:	15c4                	addi	s1,sp,740
    1c00:	0000                	unimp
    1c02:	0000                	unimp
    1c04:	0000                	unimp
    1c06:	0050                	addi	a2,sp,4
    1c08:	0000                	unimp
    1c0a:	0000                	unimp
    1c0c:	0000                	unimp
    1c0e:	1e00                	addi	s0,sp,816
    1c10:	0020                	addi	s0,sp,8
    1c12:	1d00                	addi	s0,sp,688
    1c14:	001c                	0x1c
    1c16:	3d00                	fld	fs0,56(a0)
    1c18:	5a01                	li	s4,-32
    1c1a:	4801                	li	a6,0
    1c1c:	3c00                	fld	fs0,56(s0)
	...
    1c26:	201e                	fld	ft0,448(sp)
    1c28:	0000                	unimp
    1c2a:	013d                	addi	sp,sp,15
    1c2c:	015a                	slli	sp,sp,0x16
    1c2e:	0048                	addi	a0,sp,4
    1c30:	0000                	unimp
    1c32:	5000                	lw	s0,32(s0)
	...
    1c3c:	1ff1                	addi	t6,t6,-4
    1c3e:	0000                	unimp
    1c40:	1c5f 0000 013d      	0x13d00001c5f
    1c46:	095a                	slli	s2,s2,0x16
    1c48:	00000003          	lb	zero,0(zero) # 0 <.Ldebug_info0>
    1c4c:	0000                	unimp
    1c4e:	0000                	unimp
    1c50:	3d00                	fld	fs0,56(a0)
    1c52:	5b01                	li	s6,-32
    1c54:	0309                	addi	t1,t1,2
	...
    1c5e:	5700                	lw	s0,40(a4)
	...
    1c68:	00000e53          	fadd.s	ft8,ft0,ft0,rne
    1c6c:	0050                	addi	a2,sp,4
    1c6e:	0000                	unimp
    1c70:	0000                	unimp
    1c72:	0000                	unimp
    1c74:	4b00                	lw	s0,16(a4)
    1c76:	0020                	addi	s0,sp,8
    1c78:	8400                	0x8400
    1c7a:	001c                	0x1c
    1c7c:	3d00                	fld	fs0,56(a0)
    1c7e:	5a01                	li	s4,-32
    1c80:	7902                	ld	s2,32(sp)
    1c82:	0000                	unimp
    1c84:	0050                	addi	a2,sp,4
    1c86:	0000                	unimp
    1c88:	0000                	unimp
    1c8a:	0000                	unimp
    1c8c:	f100                	sd	s0,32(a0)
    1c8e:	001f a900 001c      	0x1ca900001f
    1c94:	3d00                	fld	fs0,56(a0)
    1c96:	5a01                	li	s4,-32
    1c98:	0309                	addi	t1,t1,2
	...
    1ca2:	013d                	addi	sp,sp,15
    1ca4:	0079025b          	0x79025b
    1ca8:	6300                	ld	s0,0(a4)
	...
    1cb2:	0000203f 055a1c00 	0x55a1c000000203f
    1cba:	0000                	unimp
    1cbc:	00001cc7          	fmsub.s	fs9,ft0,ft0,ft0,rtz
    1cc0:	481d                	li	a6,7
    1cc2:	0000                	unimp
    1cc4:	0800                	addi	s0,sp,16
    1cc6:	0400                	addi	s0,sp,512
    1cc8:	00001cb7          	lui	s9,0x1
    1ccc:	0c55                	addi	s8,s8,21
    1cce:	0008                	0x8
    1cd0:	0100                	addi	s0,sp,128
    1cd2:	1cdd010f          	0x1cdd010f
    1cd6:	0000                	unimp
    1cd8:	f000                	sd	s0,32(s0)
    1cda:	001c                	0x1c
    1cdc:	4500                	lw	s0,8(a0)
    1cde:	0000                	unimp
    1ce0:	0000                	unimp
    1ce2:	000009a7          	0x9a7
    1ce6:	0045                	c.nop	17
    1ce8:	0000                	unimp
    1cea:	7000                	ld	s0,32(s0)
    1cec:	0000                	unimp
    1cee:	0000                	unimp
    1cf0:	cc56                	sw	s5,24(sp)
    1cf2:	001c                	0x1c
    1cf4:	0000                	unimp
    1cf6:	0000                	unimp
    1cf8:	1300                	addi	s0,sp,416
    1cfa:	001d                	c.nop	7
	...
    1d0c:	0100                	addi	s0,sp,128
    1d0e:	1b9c                	addi	a5,sp,496
    1d10:	001d                	c.nop	7
    1d12:	6400                	ld	s0,8(s0)
    1d14:	1cdd                	addi	s9,s9,-9
    1d16:	0000                	unimp
    1d18:	5a01                	li	s4,-32
    1d1a:	5500                	lw	s0,40(a0)
    1d1c:	000007e7          	jalr	a5,zero # 0 <.Ldebug_info0>
    1d20:	0701                	addi	a4,a4,0
    1d22:	2c01                	sext.w	s8,s8
    1d24:	001d                	c.nop	7
    1d26:	0000                	unimp
    1d28:	1d4e                	slli	s10,s10,0x33
    1d2a:	0000                	unimp
    1d2c:	0045                	c.nop	17
    1d2e:	0000                	unimp
    1d30:	a700                	fsd	fs0,8(a4)
    1d32:	0009                	c.nop	2
    1d34:	4100                	lw	s0,0(a0)
    1d36:	0000                	unimp
    1d38:	0000                	unimp
    1d3a:	0701                	addi	a4,a4,0
    1d3c:	2918                	fld	fa4,16(a0)
    1d3e:	0000                	unimp
    1d40:	4300                	lw	s0,0(a4)
    1d42:	656c                	ld	a1,200(a0)
    1d44:	006e                	c.slli	zero,0x1b
    1d46:	0701                	addi	a4,a4,0
    1d48:	3724                	fld	fs1,104(a4)
    1d4a:	0000                	unimp
    1d4c:	0000                	unimp
    1d4e:	1b56                	slli	s6,s6,0x35
    1d50:	001d                	c.nop	7
    1d52:	0000                	unimp
    1d54:	0000                	unimp
    1d56:	7100                	ld	s0,32(a0)
    1d58:	001d                	c.nop	7
	...
    1d6a:	0100                	addi	s0,sp,128
    1d6c:	a99c                	fsd	fa5,16(a1)
    1d6e:	001d                	c.nop	7
    1d70:	3b00                	fld	fs0,48(a4)
    1d72:	1d2c                	addi	a1,sp,696
    1d74:	0000                	unimp
    1d76:	0000                	unimp
    1d78:	0000                	unimp
    1d7a:	001d353b          	0x1d353b
    1d7e:	0000                	unimp
    1d80:	0000                	unimp
    1d82:	3b00                	fld	fs0,48(a4)
    1d84:	1d41                	addi	s10,s10,-16
    1d86:	0000                	unimp
    1d88:	0000                	unimp
    1d8a:	0000                	unimp
    1d8c:	003e                	c.slli	zero,0xf
    1d8e:	0000                	unimp
    1d90:	0000                	unimp
    1d92:	0000                	unimp
    1d94:	dc00                	sw	s0,56(s0)
    1d96:	001f 3d00 5a01      	0x5a013d00001f
    1d9c:	5b01f303          	0x5b01f303
    1da0:	013d                	addi	sp,sp,15
    1da2:	01f3035b          	0x1f3035b
    1da6:	005c                	addi	a5,sp,4
    1da8:	6500                	ld	s0,8(a0)
    1daa:	0000                	unimp
    1dac:	0000                	unimp
    1dae:	5904                	lw	s1,48(a0)
    1db0:	000d                	c.nop	3
    1db2:	0000                	unimp
    1db4:	0300                	addi	s0,sp,384
    1db6:	00001dc7          	fmsub.s	fs11,ft0,ft0,ft0,rtz
    1dba:	72747043          	fmadd.d	ft0,fs0,ft7,fa4
    1dbe:	0400                	addi	s0,sp,512
    1dc0:	2559                	addiw	a0,a0,22
    1dc2:	0035                	c.nop	13
    1dc4:	0000                	unimp
    1dc6:	6500                	ld	s0,8(a0)
    1dc8:	0000                	unimp
    1dca:	0000                	unimp
    1dcc:	5604                	lw	s1,40(a2)
    1dce:	000d                	c.nop	3
    1dd0:	0000                	unimp
    1dd2:	0300                	addi	s0,sp,384
    1dd4:	1df1                	addi	s11,s11,-4
    1dd6:	0000                	unimp
    1dd8:	72747043          	fmadd.d	ft0,fs0,ft7,fa4
    1ddc:	0400                	addi	s0,sp,512
    1dde:	2356                	fld	ft6,336(sp)
    1de0:	0035                	c.nop	13
    1de2:	0000                	unimp
    1de4:	0041                	c.nop	16
    1de6:	0000                	unimp
    1de8:	0400                	addi	s0,sp,512
    1dea:	2e56                	fld	ft8,336(sp)
    1dec:	00000037          	lui	zero,0x0
    1df0:	6600                	ld	s0,8(a2)
    1df2:	0000                	unimp
    1df4:	0000                	unimp
    1df6:	5004                	lw	s1,32(s0)
    1df8:	000e                	c.slli	zero,0x3
    1dfa:	0000                	unimp
    1dfc:	3500                	fld	fs0,40(a0)
    1dfe:	0000                	unimp
    1e00:	0300                	addi	s0,sp,384
    1e02:	00001e13          	slli	t3,zero,0x0
    1e06:	0041                	c.nop	16
    1e08:	0000                	unimp
    1e0a:	0400                	addi	s0,sp,512
    1e0c:	2450                	fld	fa2,136(s0)
    1e0e:	0081                	addi	ra,ra,0
    1e10:	0000                	unimp
    1e12:	4400                	lw	s0,8(s0)
    1e14:	07cc                	addi	a1,sp,964
    1e16:	0000                	unimp
    1e18:	1e21                	addi	t3,t3,-24
    1e1a:	0000                	unimp
    1e1c:	001e2b03          	lw	s6,1(t3) # 1a001 <.LLST42+0x184cb>
    1e20:	4500                	lw	s0,8(a0)
    1e22:	0000                	unimp
    1e24:	0000                	unimp
    1e26:	000009a7          	0x9a7
    1e2a:	4400                	lw	s0,8(s0)
    1e2c:	0739                	addi	a4,a4,14
    1e2e:	0000                	unimp
    1e30:	1e39                	addi	t3,t3,-18
    1e32:	0000                	unimp
    1e34:	001e7403          	0x1e7403
    1e38:	4500                	lw	s0,8(a0)
    1e3a:	0000                	unimp
    1e3c:	0000                	unimp
    1e3e:	0996                	slli	s3,s3,0x5
    1e40:	0000                	unimp
    1e42:	736f7043          	fmadd.d	ft0,ft10,fs6,fa4
    1e46:	0400                	addi	s0,sp,512
    1e48:	271d                	addiw	a4,a4,7
    1e4a:	00000037          	lui	zero,0x0
    1e4e:	0041                	c.nop	16
    1e50:	0000                	unimp
    1e52:	0400                	addi	s0,sp,512
    1e54:	2f1d                	addiw	t5,t5,7
    1e56:	0069                	c.nop	26
    1e58:	0000                	unimp
    1e5a:	6e1f 0064 1f04      	0x1f0400646e1f
    1e60:	3714                	fld	fa3,40(a4)
    1e62:	0000                	unimp
    1e64:	5800                	lw	s0,48(s0)
    1e66:	0052                	c.slli	zero,0x14
    1e68:	0000                	unimp
    1e6a:	0400                	addi	s0,sp,512
    1e6c:	1520                	addi	s0,sp,680
    1e6e:	0069                	c.nop	26
    1e70:	0000                	unimp
    1e72:	0000                	unimp
    1e74:	1644                	addi	s1,sp,804
    1e76:	82000007          	0x82000007
    1e7a:	001e                	c.slli	zero,0x7
    1e7c:	0300                	addi	s0,sp,384
    1e7e:	1e96                	slli	t4,t4,0x25
    1e80:	0000                	unimp
    1e82:	0045                	c.nop	17
    1e84:	0000                	unimp
    1e86:	9600                	0x9600
    1e88:	0009                	c.nop	2
    1e8a:	4300                	lw	s0,0(a4)
    1e8c:	0078                	addi	a4,sp,12
    1e8e:	1a04                	addi	s1,sp,304
    1e90:	372d                	addiw	a4,a4,-21
    1e92:	0000                	unimp
    1e94:	0000                	unimp
    1e96:	f344                	sd	s1,160(a4)
    1e98:	0006                	c.slli	zero,0x1
    1e9a:	a400                	fsd	fs0,8(s0)
    1e9c:	001e                	c.slli	zero,0x7
    1e9e:	0300                	addi	s0,sp,384
    1ea0:	1eb8                	addi	a4,sp,888
    1ea2:	0000                	unimp
    1ea4:	0045                	c.nop	17
    1ea6:	0000                	unimp
    1ea8:	9600                	0x9600
    1eaa:	0009                	c.nop	2
    1eac:	4300                	lw	s0,0(a4)
    1eae:	0078                	addi	a4,sp,12
    1eb0:	1904                	addi	s1,sp,176
    1eb2:	372d                	addiw	a4,a4,-21
    1eb4:	0000                	unimp
    1eb6:	0000                	unimp
    1eb8:	d044                	sw	s1,36(s0)
    1eba:	0006                	c.slli	zero,0x1
    1ebc:	c600                	sw	s0,8(a2)
    1ebe:	001e                	c.slli	zero,0x7
    1ec0:	0300                	addi	s0,sp,384
    1ec2:	1eda                	slli	t4,t4,0x36
    1ec4:	0000                	unimp
    1ec6:	0045                	c.nop	17
    1ec8:	0000                	unimp
    1eca:	9600                	0x9600
    1ecc:	0009                	c.nop	2
    1ece:	4300                	lw	s0,0(a4)
    1ed0:	0078                	addi	a4,sp,12
    1ed2:	1804                	addi	s1,sp,48
    1ed4:	372d                	addiw	a4,a4,-21
    1ed6:	0000                	unimp
    1ed8:	0000                	unimp
    1eda:	b544                	fsd	fs1,168(a0)
    1edc:	0006                	c.slli	zero,0x1
    1ede:	e800                	sd	s0,16(s0)
    1ee0:	001e                	c.slli	zero,0x7
    1ee2:	0300                	addi	s0,sp,384
    1ee4:	1efe                	slli	t4,t4,0x3f
    1ee6:	0000                	unimp
    1ee8:	0045                	c.nop	17
    1eea:	0000                	unimp
    1eec:	9600                	0x9600
    1eee:	0009                	c.nop	2
    1ef0:	5800                	lw	s0,48(s0)
    1ef2:	691f 0400 2c13      	0x2c130400691f
    1ef8:	00000037          	lui	zero,0x0
    1efc:	0000                	unimp
    1efe:	dc42                	sw	a6,56(sp)
    1f00:	0005                	c.nop	1
    1f02:	0300                	addi	s0,sp,384
    1f04:	1f14                	addi	a3,sp,944
    1f06:	0000                	unimp
    1f08:	006e7043          	fmadd.s	ft0,ft8,ft6,ft0
    1f0c:	37220e03          	lb	t3,882(tp) # bd372 <.LLST42+0xbb83c>
    1f10:	0000                	unimp
    1f12:	0000                	unimp
    1f14:	2c42                	fld	fs8,16(sp)
    1f16:	0005                	c.nop	1
    1f18:	0300                	addi	s0,sp,384
    1f1a:	1f3d                	addi	t5,t5,-17
    1f1c:	0000                	unimp
    1f1e:	02006143          	fmadd.d	ft2,ft0,ft0,ft0,unknown
    1f22:	1c0e                	slli	s8,s8,0x23
    1f24:	00000037          	lui	zero,0x0
    1f28:	691f 0200 090f      	0x90f0200691f
    1f2e:	0069                	c.nop	26
    1f30:	0000                	unimp
    1f32:	721f 0200 0d0f      	0xd0f0200721f
    1f38:	0069                	c.nop	26
    1f3a:	0000                	unimp
    1f3c:	6700                	ld	s0,8(a4)
    1f3e:	1590                	addi	a2,sp,736
	...
    1f54:	0000                	unimp
    1f56:	9c01                	subw	s0,s0,s0
    1f58:	1f95                	addi	t6,t6,-27
    1f5a:	0000                	unimp
    1f5c:	0015a13b          	0x15a13b
    1f60:	0000                	unimp
    1f62:	0000                	unimp
    1f64:	3b00                	fld	fs0,48(a4)
    1f66:	15aa                	slli	a1,a1,0x2a
    1f68:	0000                	unimp
    1f6a:	0000                	unimp
    1f6c:	0000                	unimp
    1f6e:	b65d                	j	1b14 <.Ldebug_info0+0x1b14>
    1f70:	0015                	c.nop	5
    1f72:	0000                	unimp
    1f74:	0000                	unimp
    1f76:	4e00                	lw	s0,24(a2)
    1f78:	000015b7          	lui	a1,0x1
    1f7c:	0000                	unimp
    1f7e:	0000                	unimp
    1f80:	c35d                	beqz	a4,2026 <.Ldebug_info0+0x2026>
    1f82:	0015                	c.nop	5
    1f84:	0000                	unimp
    1f86:	0000                	unimp
    1f88:	4e00                	lw	s0,24(a2)
    1f8a:	15c4                	addi	s1,sp,740
	...
    1f94:	6700                	ld	s0,8(a4)
    1f96:	14b4                	addi	a3,sp,616
	...
    1fac:	0000                	unimp
    1fae:	9c01                	subw	s0,s0,s0
    1fb0:	1fdc                	addi	a5,sp,1012
    1fb2:	0000                	unimp
    1fb4:	0014c53b          	0x14c53b
    1fb8:	0000                	unimp
    1fba:	0000                	unimp
    1fbc:	3b00                	fld	fs0,48(a4)
    1fbe:	14ce                	slli	s1,s1,0x33
    1fc0:	0000                	unimp
    1fc2:	0000                	unimp
    1fc4:	0000                	unimp
    1fc6:	003e                	c.slli	zero,0xf
    1fc8:	0000                	unimp
    1fca:	0000                	unimp
    1fcc:	0000                	unimp
    1fce:	0900                	addi	s0,sp,144
    1fd0:	0020                	addi	s0,sp,8
    1fd2:	3d00                	fld	fs0,56(a0)
    1fd4:	5a01                	li	s4,-32
    1fd6:	5b01f303          	0x5b01f303
    1fda:	0000                	unimp
    1fdc:	0068                	addi	a0,sp,12
    1fde:	0000                	unimp
    1fe0:	0000                	unimp
    1fe2:	0000                	unimp
    1fe4:	0900                	addi	s0,sp,144
    1fe6:	061c                	addi	a5,sp,768
    1fe8:	0069                	c.nop	26
    1fea:	0000                	unimp
    1fec:	0000                	unimp
    1fee:	0000                	unimp
    1ff0:	6800                	ld	s0,16(s0)
	...
    1ffa:	3708                	fld	fa0,40(a4)
    1ffc:	6808                	ld	a0,16(s0)
	...
    2006:	1d08                	addi	a0,sp,688
    2008:	6806                	ld	a6,64(sp)
	...
    2012:	2509                	addiw	a0,a0,2
    2014:	6906                	ld	s2,64(sp)
	...
    201e:	0068                	addi	a0,sp,12
    2020:	0000                	unimp
    2022:	0000                	unimp
    2024:	0000                	unimp
    2026:	0900                	addi	s0,sp,144
    2028:	0722                	slli	a4,a4,0x8
    202a:	0069                	c.nop	26
    202c:	0000                	unimp
    202e:	0000                	unimp
    2030:	0000                	unimp
    2032:	6800                	ld	s0,16(s0)
	...
    203c:	2309                	addiw	t1,t1,2
    203e:	00006807          	0x6807
    2042:	0000                	unimp
    2044:	0000                	unimp
    2046:	0000                	unimp
    2048:	2809                	addiw	a6,a6,2
    204a:	6806                	ld	a6,64(sp)
	...
    2054:	1f09                	addi	t5,t5,-30
    2056:	0005                	c.nop	1

Disassembly of section .debug_abbrev:

0000000000000000 <.Ldebug_abbrev0>:
   0:	1101                	addi	sp,sp,-32
HeapMgr::~HeapMgr(){}
   2:	2501                	sext.w	a0,a0
HeapMgr::HeapMgr(ptr_t addr,xlen_t len){
   4:	130e                	slli	t1,t1,0x23
   6:	1b0e030b          	0x1b0e030b
    this->pool=addr;
   a:	550e                	lw	a0,224(sp)
HeapMgr::HeapMgr(ptr_t addr,xlen_t len){
   c:	10011117          	auipc	sp,0x10011
    tlsf_create_with_pool(reinterpret_cast<ptr_t>(addr),len);
  10:	02000017          	auipc	zero,0x2000
  14:	0016                	c.slli	zero,0x5
  16:	0b3a0e03          	lb	t3,179(s4) # fffffffffffe00b3 <pool+0xffffffffffee90b3>
  1a:	0b390b3b          	0xb390b3b
HeapMgrGrowable::HeapMgrGrowable(ptr_t addr,xlen_t len,PageMgr &pmgr):HeapMgr(addr,len),pmgr(pmgr),growsize(2){
  1e:	1349                	addi	t1,t1,-14
  20:	0000                	unimp
  22:	0b000f03          	lb	t5,176(zero) # b0 <.Ldebug_abbrev0+0xb0>
  26:	0400000b          	0x400000b
  2a:	0026                	c.slli	zero,0x9
  2c:	1349                	addi	t1,t1,-14
  2e:	0000                	unimp
  30:	2405                	addiw	s0,s0,1
  32:	0b00                	addi	s0,sp,400
    this->pool=addr;
  34:	030b3e0b          	0x30b3e0b
    tlsf_create_with_pool(reinterpret_cast<ptr_t>(addr),len);
  38:	000e                	c.slli	zero,0x3
  3a:	0600                	addi	s0,sp,768
HeapMgrGrowable::HeapMgrGrowable(ptr_t addr,xlen_t len,PageMgr &pmgr):HeapMgr(addr,len),pmgr(pmgr),growsize(2){
  3c:	0024                	addi	s1,sp,8
  3e:	0b3e0b0b          	0xb3e0b0b
    tlsf_create_with_pool(reinterpret_cast<ptr_t>(addr),len);
  42:	00000803          	lb	a6,0(zero) # 0 <.Ldebug_abbrev0>
  46:	03003b07          	fld	fs6,48(zero) # 30 <.Ldebug_abbrev0+0x30>
HeapMgrGrowable::HeapMgrGrowable(ptr_t addr,xlen_t len,PageMgr &pmgr):HeapMgr(addr,len),pmgr(pmgr),growsize(2){
  4a:	000e                	c.slli	zero,0x3
  4c:	0800                	addi	s0,sp,16
  4e:	0139                	addi	sp,sp,14
  inline list(){ head=tail=nullptr; }
  50:	0b3a0e03          	lb	t3,179(s4)
  54:	0b390b3b          	0xb390b3b
  58:	1301                	addi	t1,t1,-32
  5a:	0000                	unimp
        ptr_t rt=(tlsf_malloc(size));
  5c:	3409                	addiw	s0,s0,-30
  5e:	0300                	addi	s0,sp,384
  60:	3a08                	fld	fa0,48(a2)
  62:	390b3b0b          	0x390b3b0b
  66:	3c13490b          	0x3c13490b
        if(rt!=nullptr)return rt;
  6a:	1c19                	addi	s8,s8,-26
        ptr_t rt=(tlsf_malloc(size));
  6c:	00196c0b          	0x196c0b
  70:	0a00                	addi	s0,sp,272
  72:	0034                	addi	a3,sp,8
  74:	0b3a0e03          	lb	t3,179(s4)
}
  78:	0b390b3b          	0xb390b3b
    reservedNode=(klib::ListNode<Span>*)(alloc(sizeof(klib::ListNode<Span>)));
  7c:	1349                	addi	t1,t1,-14
  7e:	193c                	addi	a5,sp,184
}
  80:	061c                	addi	a5,sp,768
  82:	196c                	addi	a1,sp,188
  84:	0000                	unimp
  86:	0301390b          	0x301390b
  8a:	3a0e                	fld	fs4,224(sp)
  8c:	390b3b0b          	0x390b3b0b
HeapMgrGrowable::HeapMgrGrowable(HeapMgr &other,PageMgr &pmgr):pmgr(pmgr),HeapMgr(other),growsize(2){
  90:	0c00000b          	0xc00000b
  94:	0034                	addi	a3,sp,8
  96:	00001347          	fmsub.s	ft6,ft0,ft0,ft0,rtz
  9a:	130d                	addi	t1,t1,-29
  9c:	0301                	addi	t1,t1,0
  9e:	0b0e                	slli	s6,s6,0x3
  a0:	3b0b3a0b          	0x3b0b3a0b
  a4:	010b390b          	0x10b390b
  a8:	0e000013          	li	zero,224
  ac:	000d                	c.nop	3
  ae:	0b3a0e03          	lb	t3,179(s4)
  b2:	0b390b3b          	0xb390b3b
  b6:	1349                	addi	t1,t1,-14
  b8:	0b38                	addi	a4,sp,408
  ba:	0000                	unimp
        ptr_t rt=(tlsf_malloc(size));
  bc:	3f012e0f          	0x3f012e0f
  c0:	0319                	addi	t1,t1,6
  c2:	3a0e                	fld	fs4,224(sp)
  c4:	390b3b0b          	0x390b3b0b
        if(rt!=nullptr)return rt;
  c8:	490e6e0b          	0x490e6e0b
        ptr_t rt=(tlsf_malloc(size));
  cc:	64193c13          	sltiu	s8,s2,1601
  d0:	00130113          	addi	sp,t1,1
  d4:	1000                	addi	s0,sp,32
  d6:	0005                	c.nop	1
}
  d8:	1349                	addi	t1,t1,-14
  da:	1934                	addi	a3,sp,184
    reservedNode=(klib::ListNode<Span>*)(alloc(sizeof(klib::ListNode<Span>)));
  dc:	0000                	unimp
  de:	0511                	addi	a0,a0,4
}
  e0:	4900                	lw	s0,16(a0)
  e2:	12000013          	li	zero,288
  e6:	012e                	slli	sp,sp,0xb
  e8:	0803193f 0b3b0b3a 	0xb3b0b3a0803193f
HeapMgrGrowable::~HeapMgrGrowable(){
  f0:	0b39                	addi	s6,s6,14
  f2:	0e6e                	slli	t3,t3,0x1b
    DBG(printf("%s()\n",__func__);)
  f4:	193c                	addi	a5,sp,184
  f6:	1364                	addi	s1,sp,428
  f8:	1301                	addi	t1,t1,-32
  fa:	0000                	unimp
HeapMgrGrowable::~HeapMgrGrowable(){
  fc:	3f012e13          	slti	t3,sp,1008
    DBG(printf("%s()\n",__func__);)
 100:	0319                	addi	t1,t1,6
 102:	3a08                	fld	fa0,48(a2)
 104:	390b3b0b          	0x390b3b0b
HeapMgrGrowable::~HeapMgrGrowable(){
 108:	490e6e0b          	0x490e6e0b
 10c:	64193c13          	sltiu	s8,s2,1601
 110:	00130113          	addi	sp,t1,1
 114:	1400                	addi	s0,sp,544
 116:	0803002f          	0x803002f
 11a:	1349                	addi	t1,t1,-14
    DBG(printf("%s()\n",__func__);)
 11c:	0000                	unimp
 11e:	3015                	0x3015
 120:	0300                	addi	s0,sp,384
 122:	490e                	lw	s2,192(sp)
        printf("pool=%p\n",pool);
 124:	1c191e13          	0x1c191e13
 128:	1600000b          	0x1600000b
 12c:	012e                	slli	sp,sp,0xb
 12e:	0e03193f 0b3b0b3a 	0xb3b0b3a0e03193f
 136:	0b39                	addi	s6,s6,14
        tlsf_walk_pool(pool);
 138:	0e6e                	slli	t3,t3,0x1b
 13a:	193c                	addi	a5,sp,184
 13c:	1364                	addi	s1,sp,428
 13e:	1301                	addi	t1,t1,-32
 140:	0000                	unimp
 142:	3f012e17          	auipc	t3,0x3f012
        if(!dynPages.empty())for(auto node=dynPages.head;node->iter.next!=nullptr;node=node->iter.next){
 146:	0319                	addi	t1,t1,6
 148:	3a0e                	fld	fs4,224(sp)
 14a:	390b3b0b          	0x390b3b0b
 14e:	3c0e6e0b          	0x3c0e6e0b
 152:	0119                	addi	sp,sp,6
 154:	18000013          	li	zero,384
            tlsf_walk_pool((ptr_t)vm::pn2addr(node->data.first));
 158:	0b0b0117          	auipc	sp,0xb0b0
 15c:	0b3a                	slli	s6,s6,0xe
 15e:	0b390b3b          	0xb390b3b
 162:	1301                	addi	t1,t1,-32
        if(!dynPages.empty())for(auto node=dynPages.head;node->iter.next!=nullptr;node=node->iter.next){
 164:	0000                	unimp
 166:	0d19                	addi	s10,s10,6
 168:	0300                	addi	s0,sp,384
 16a:	3a0e                	fld	fs4,224(sp)
 16c:	390b3b0b          	0x390b3b0b
    while(!dynPages.empty()){
 170:	0013490b          	0x13490b
 174:	1a00                	addi	s0,sp,304
 176:	012e                	slli	sp,sp,0xb
        DBG(printf("0x%lx %d\n",span.first,span.second);)
 178:	0e03193f 0b3b0b3a 	0xb3b0b3a0e03193f
 180:	0b39                	addi	s6,s6,14
 182:	0e6e                	slli	t3,t3,0x1b
    head=head->iter.next;
 184:	1349                	addi	t1,t1,-14
 186:	193c                	addi	a5,sp,184
 188:	1301                	addi	t1,t1,-32
 18a:	0000                	unimp
    delete head;
 18c:	3f012e1b          	0x3f012e1b
void HeapMgr::free(ptr_t ptr){ tlsf_free(ptr); }
 190:	0319                	addi	t1,t1,6
 192:	3a0e                	fld	fs4,224(sp)
 194:	390b3b0b          	0x390b3b0b
        DBG(printf("0x%lx %d\n",span.first,span.second);)
 198:	490e6e0b          	0x490e6e0b
 19c:	00193c13          	seqz	s8,s2
 1a0:	1c00                	addi	s0,sp,560
 1a2:	0101                	addi	sp,sp,0
 1a4:	1349                	addi	t1,t1,-14
 1a6:	1301                	addi	t1,t1,-32
 1a8:	0000                	unimp
 1aa:	211d                	addiw	sp,sp,7
    while(!dynPages.empty()){
 1ac:	4900                	lw	s0,16(a0)
 1ae:	000b2f13          	slti	t5,s6,0
 1b2:	1e00                	addi	s0,sp,816
    if(head==tail)tail=nullptr;
 1b4:	0b0b000f          	0xb0b000f
    T rt=head->data;
 1b8:	1349                	addi	t1,t1,-14
 1ba:	0000                	unimp
 1bc:	341f 0300 3a08      	0x3a080300341f
    if(head==tail)tail=nullptr;
 1c2:	390b3b0b          	0x390b3b0b
 1c6:	0013490b          	0x13490b
 1ca:	2000                	fld	fs0,0(s0)
}
 1cc:	0115                	addi	sp,sp,5
 1ce:	1301                	addi	t1,t1,-32
 1d0:	0000                	unimp
 1d2:	3421                	addiw	s0,s0,-24
 1d4:	0300                	addi	s0,sp,384
 1d6:	3a0e                	fld	fs4,224(sp)
 1d8:	390b3b0b          	0x390b3b0b
 1dc:	3f13490b          	0x3f13490b
 1e0:	3c19                	addiw	s8,s8,-26
 1e2:	0019                	c.nop	6
 1e4:	2200                	fld	fs0,0(a2)
 1e6:	0139                	addi	sp,sp,14
 1e8:	0b3a0803          	lb	a6,179(s4)
ptr_t HeapMgr::alloc(xlen_t size){
 1ec:	0b390b3b          	0xb390b3b
        ptr_t rt=(tlsf_malloc(size));
 1f0:	1301                	addi	t1,t1,-32
 1f2:	0000                	unimp
ptr_t HeapMgr::alloc(xlen_t size){
 1f4:	03003423          	sd	a6,40(zero) # 28 <.Ldebug_abbrev0+0x28>
 1f8:	3a0e                	fld	fs4,224(sp)
 1fa:	390b3b0b          	0x390b3b0b
 1fe:	3c13490b          	0x3c13490b
        ptr_t rt=(tlsf_malloc(size));
 202:	1c19                	addi	s8,s8,-26
 204:	6c05                	lui	s8,0x1
 206:	0019                	c.nop	6
        if(rt!=nullptr)return rt;
 208:	2400                	fld	fs0,8(s0)
 20a:	0008                	0x8
        ptr_t rt=(tlsf_malloc(size));
 20c:	0b3a                	slli	s6,s6,0xe
 20e:	0b390b3b          	0xb390b3b
}
 212:	1318                	addi	a4,sp,416
 214:	0000                	unimp
 216:	0225                	addi	tp,tp,9
 218:	0301                	addi	t1,t1,0
 21a:	0b0e                	slli	s6,s6,0x3
        ptr_t rt=(tlsf_malloc(size));
 21c:	3b0b3a0b          	0x3b0b3a0b
 220:	010b390b          	0x10b390b
}
 224:	26000013          	li	zero,608
 228:	012e                	slli	sp,sp,0xb
 22a:	0e03193f 0b3b0b3a 	0xb3b0b3a0e03193f
 232:	0b39                	addi	s6,s6,14
ptr_t HeapMgr::alligned_alloc(xlen_t size,xlen_t alignment){
 234:	0e6e                	slli	t3,t3,0x1b
 236:	0b32                	slli	s6,s6,0xc
        ptr_t rt=(tlsf_memalign(alignment,size));
 238:	193c                	addi	a5,sp,184
 23a:	1364                	addi	s1,sp,428
ptr_t HeapMgr::alligned_alloc(xlen_t size,xlen_t alignment){
 23c:	1301                	addi	t1,t1,-32
 23e:	0000                	unimp
 240:	3f012e27          	fsw	fa6,1020(sp) # b0b0554 <pool+0xafb9554>
 244:	0319                	addi	t1,t1,6
 246:	3a0e                	fld	fs4,224(sp)
 248:	390b3b0b          	0x390b3b0b
 24c:	490e6e0b          	0x490e6e0b
        ptr_t rt=(tlsf_memalign(alignment,size));
 250:	3c0b3213          	sltiu	tp,s6,960
 254:	6419                	lui	s0,0x6
 256:	00130113          	addi	sp,t1,1
        if(rt!=nullptr)return rt;
 25a:	2800                	fld	fs0,16(s0)
        ptr_t rt=(tlsf_memalign(alignment,size));
 25c:	000d                	c.nop	3
 25e:	0b3a0803          	lb	a6,179(s4)
}
 262:	0b390b3b          	0xb390b3b
 266:	1349                	addi	t1,t1,-14
        ptr_t rt=(tlsf_memalign(alignment,size));
 268:	0b38                	addi	a4,sp,408
 26a:	0000                	unimp
}
 26c:	0d29                	addi	s10,s10,10
 26e:	0300                	addi	s0,sp,384
 270:	3a0e                	fld	fs4,224(sp)
 272:	390b3b0b          	0x390b3b0b
        ptr_t rt=(tlsf_memalign(alignment,size));
 276:	3813490b          	0x3813490b
 27a:	000b320b          	0xb320b
}
 27e:	2a00                	fld	fs0,16(a2)
 280:	000d                	c.nop	3
 282:	0b3a0e03          	lb	t3,179(s4)
 286:	0b390b3b          	0xb390b3b
 28a:	1349                	addi	t1,t1,-14
 28c:	0b32193f 0b1c193c 	0xb1c193c0b32193f
void HeapMgr::free(ptr_t ptr){ tlsf_free(ptr); }
 294:	196c                	addi	a1,sp,188
 296:	0000                	unimp
 298:	3f012e2b          	0x3f012e2b
PageMgr::~PageMgr(){ delete[] buddyNodes; }
 29c:	0319                	addi	t1,t1,6
 29e:	3a0e                	fld	fs4,224(sp)
 2a0:	390b3b0b          	0x390b3b0b
 2a4:	490e6e0b          	0x490e6e0b
 2a8:	3c0b3213          	sltiu	tp,s6,960
void HeapMgr::free(ptr_t ptr){ tlsf_free(ptr); }
 2ac:	6419                	lui	s0,0x6
 2ae:	2c000013          	li	zero,704
 2b2:	001c                	0x1c
PageMgr::~PageMgr(){ delete[] buddyNodes; }
 2b4:	1349                	addi	t1,t1,-14
 2b6:	0b38                	addi	a4,sp,408
 2b8:	0b32                	slli	s6,s6,0xc
 2ba:	0000                	unimp
 2bc:	2e2d                	addiw	t3,t3,11
 2be:	3f01                	addiw	t5,t5,-32
 2c0:	0319                	addi	t1,t1,6
 2c2:	3a0e                	fld	fs4,224(sp)
PageNum PageMgr::alloc(size_t pages){
 2c4:	390b3b0b          	0x390b3b0b
 2c8:	320e6e0b          	0x320e6e0b
 2cc:	64193c0b          	0x64193c0b
 2d0:	2e000013          	li	zero,736
 2d4:	0010                	0x10
 2d6:	13490b0b          	0x13490b0b
 2da:	0000                	unimp
 2dc:	3a003a2f          	0x3a003a2f
 2e0:	390b3b0b          	0x390b3b0b
 2e4:	0013180b          	0x13180b
    for(i=0;a>1;a>>=1,i++)r|=a&1;
 2e8:	3000                	fld	fs0,32(s0)
 2ea:	0021                	c.nop	8
 2ec:	1349                	addi	t1,t1,-14
 2ee:	0000052f          	0x52f
 2f2:	3431                	addiw	s0,s0,-20
    int i=0,r=0;
 2f4:	0300                	addi	s0,sp,384
 2f6:	3a0e                	fld	fs4,224(sp)
    for(i=0;a>1;a>>=1,i++)r|=a&1;
 2f8:	390b3b0b          	0x390b3b0b
 2fc:	3f13490b          	0x3f13490b
 300:	0219                	addi	tp,tp,6
 302:	0018                	0x18
 304:	3200                	fld	fs0,32(a2)
 306:	0021                	c.nop	8
 308:	1349                	addi	t1,t1,-14
 30a:	0000062f          	0x62f
 30e:	03003433          	mulhu	s0,zero,a6
 312:	3a0e                	fld	fs4,224(sp)
 314:	390b3b0b          	0x390b3b0b
 318:	3f13490b          	0x3f13490b
    if(buddyNodes[0]<rounded) return 0;
 31c:	8819                	andi	s0,s0,6
 31e:	0501                	addi	a0,a0,0
 320:	1802                	slli	a6,a6,0x20
 322:	0000                	unimp
 324:	3434                	fld	fa3,104(s0)
 326:	4700                	lw	s0,8(a4)
 328:	3b0b3a13          	sltiu	s4,s6,944
    for(xlen_t nd=0,size=rootOrder+1;rounded<=size;size-=1){ // find suitable node; size is biased size
 32c:	020b390b          	0x20b390b
 330:	0018                	0x18
 332:	3500                	fld	fs0,40(a0)
 334:	0034                	addi	a3,sp,8
 336:	13490e03          	lb	t3,308(s2) # 3134 <.LLST42+0x15fe>
    xlen_t node=0;
 33a:	1934193f 0000193c 	0x193c1934193f
        DBG(printf("nd=%ld ",nd);)
 342:	2e36                	fld	ft8,328(sp)
 344:	0301                	addi	t1,t1,0
 346:	340e                	fld	fs0,224(sp)
 348:	1119                	addi	sp,sp,-26
 34a:	1201                	addi	tp,tp,-32
 34c:	97184007          	flq	ft0,-1679(a6) # 1bb4cd <pool+0xc44cd>
 350:	1942                	slli	s2,s2,0x30
 352:	1301                	addi	t1,t1,-32
        if(buddyNodes[nd]==size && buddyNodes[nd]==rounded) node=nd;
 354:	0000                	unimp
 356:	31011d37          	lui	s10,0x31011
 35a:	55015213          	0x55015213
 35e:	590b5817          	auipc	a6,0x590b5
 362:	000b570b          	0xb570b
        inline constexpr xlen_t lsub(xlen_t x){return ((x+1)<<1)-1;}
 366:	3800                	fld	fs0,48(s0)
 368:	0005                	c.nop	1
 36a:	1331                	addi	t1,t1,-20
 36c:	0b1c                	addi	a5,sp,400
 36e:	0000                	unimp
                if(klib::min(buddyNodes[lsub(nd)],buddyNodes[rsub(nd)])>=rounded)
 370:	0539                	addi	a0,a0,14
 372:	3100                	fld	fs0,32(a0)
 374:	00051c13          	slli	s8,a0,0x0
 378:	3a00                	fld	fs0,48(a2)
 37a:	011d                	addi	sp,sp,7
 37c:	1331                	addi	t1,t1,-20
 37e:	0152                	slli	sp,sp,0x14
 380:	1755                	addi	a4,a4,-11
 382:	0b58                	addi	a4,sp,404
 384:	0b59                	addi	s6,s6,22
 386:	13010b57          	0x13010b57
 38a:	0000                	unimp
 38c:	3100053b          	0x3100053b
                    nd=buddyNodes[lsub(nd)]<buddyNodes[rsub(nd)]?lsub(nd):rsub(nd);
 390:	00170213          	addi	tp,a4,1
    for(xlen_t nd=0,size=rootOrder+1;rounded<=size;size-=1){ // find suitable node; size is biased size
 394:	3c00                	fld	fs0,56(s0)
 396:	8289                	srli	a3,a3,0x2
 398:	0101                	addi	sp,sp,0
 39a:	0111                	addi	sp,sp,4
    assert(node>0);
 39c:	1331                	addi	t1,t1,-20
 39e:	0000                	unimp
 3a0:	8a3d                	andi	a2,a2,15
 3a2:	0182                	c.slli64	gp
 3a4:	0200                	addi	s0,sp,256
 3a6:	9118                	0x9118
 3a8:	1842                	slli	a6,a6,0x30
 3aa:	0000                	unimp
    buddyNodes[node]=0;
 3ac:	893e                	mv	s2,a5
 3ae:	0182                	c.slli64	gp
 3b0:	1101                	addi	sp,sp,-32
 3b2:	9501                	srai	a0,a0,0x20
 3b4:	1942                	slli	s2,s2,0x30
 3b6:	1331                	addi	t1,t1,-20
    for(xlen_t nd=prnt(node);nd>0;nd=prnt(nd))
 3b8:	0000                	unimp
 3ba:	01828a3f 00180200 	0x18020001828a3f
 3c2:	4000                	lw	s0,0(s0)
 3c4:	012e                	slli	sp,sp,0xb
 3c6:	19340e03          	lb	t3,403(s0) # 6193 <.LLST42+0x465d>
        buddyNodes[nd]=klib::max(buddyNodes[lsub(nd)],buddyNodes[rsub(nd)]);
 3ca:	0b20                	addi	s0,sp,408
 3cc:	1301                	addi	t1,t1,-32
 3ce:	0000                	unimp
 3d0:	0541                	addi	a0,a0,16
 3d2:	0300                	addi	s0,sp,384
        inline constexpr xlen_t prnt(xlen_t x){return ((x+1)>>1)-1;}
 3d4:	3a0e                	fld	fs4,224(sp)
 3d6:	390b3b0b          	0x390b3b0b
 3da:	0013490b          	0x13490b
 3de:	4200                	lw	s0,0(a2)
 3e0:	012e                	slli	sp,sp,0xb
 3e2:	0b201347          	fmsub.d	ft6,ft0,fs2,ft1,rtz
 3e6:	1301                	addi	t1,t1,-32
 3e8:	0000                	unimp
 3ea:	03000543          	fmadd.d	fa0,ft0,fa6,ft0,rne
    for(xlen_t nd=prnt(node);nd>0;nd=prnt(nd))
 3ee:	3a08                	fld	fa0,48(a2)
    buddyNodes[0]=klib::max(buddyNodes[lsub(0)],buddyNodes[rsub(0)]);
 3f0:	390b3b0b          	0x390b3b0b
 3f4:	0013490b          	0x13490b
 3f8:	4400                	lw	s0,8(s0)
 3fa:	012e                	slli	sp,sp,0xb
 3fc:	13641347          	fmsub.d	ft6,fs0,fs6,ft2,rtz
 400:	0b20                	addi	s0,sp,408
 402:	1301                	addi	t1,t1,-32
    PageNum ppn=start+(node+1-(1l<<(rootOrder+1-rounded)))*(1l<<(rounded-1));//((node+1)*rounded-(1l<<rootOrder));
 404:	0000                	unimp
 406:	0545                	addi	a0,a0,17
 408:	0300                	addi	s0,sp,384
 40a:	490e                	lw	s2,192(sp)
 40c:	00193413          	seqz	s0,s2
 410:	4600                	lw	s0,8(a2)
 412:	012e                	slli	sp,sp,0xb
 414:	1331                	addi	t1,t1,-20
 416:	0e6e                	slli	t3,t3,0x1b
 418:	1364                	addi	s1,sp,428
 41a:	1301                	addi	t1,t1,-32
 41c:	0000                	unimp
 41e:	31000547          	fmsub.s	fa0,ft0,fa6,ft6,rne
 422:	48000013          	li	zero,1152
 426:	012e                	slli	sp,sp,0xb
 428:	0b3a1347          	fmsub.d	ft6,fs4,fs3,ft1,rtz
    DBG(
 42c:	0b390b3b          	0xb390b3b
 430:	1364                	addi	s1,sp,428
 432:	0111                	addi	sp,sp,4
 434:	0712                	slli	a4,a4,0x4
 436:	1840                	addi	s0,sp,52
 438:	01194297          	auipc	t0,0x1194
 43c:	49000013          	li	zero,1168
 440:	0005                	c.nop	1
 442:	13490e03          	lb	t3,308(s2)
    assert(ppn<end);
 446:	1934                	addi	a3,sp,184
 448:	1702                	slli	a4,a4,0x20
 44a:	0000                	unimp
}
 44c:	054a                	slli	a0,a0,0x12
 44e:	0300                	addi	s0,sp,384
 450:	3a08                	fld	fa0,48(a2)
 452:	390b3b0b          	0x390b3b0b
 456:	0213490b          	0x213490b
 45a:	4b000017          	auipc	zero,0x4b000
 45e:	0005                	c.nop	1
 460:	0b3a0e03          	lb	t3,179(s4)
 464:	0b390b3b          	0xb390b3b
 468:	1349                	addi	t1,t1,-14
 46a:	1702                	slli	a4,a4,0x20
 46c:	0000                	unimp
 46e:	344c                	fld	fa1,168(s0)
 470:	0300                	addi	s0,sp,384
 472:	3a08                	fld	fa0,48(a2)
 474:	390b3b0b          	0x390b3b0b
                    nd=buddyNodes[lsub(nd)]>buddyNodes[rsub(nd)]?lsub(nd):rsub(nd);
 478:	0213490b          	0x213490b
    for(xlen_t nd=0,size=rootOrder+1;rounded<=size;size-=1){ // find suitable node; size is biased size
 47c:	4d000017          	auipc	zero,0x4d000
                    nd=buddyNodes[lsub(nd)]>buddyNodes[rsub(nd)]?lsub(nd):rsub(nd);
 480:	1755010b          	0x1755010b
    for(xlen_t nd=0,size=rootOrder+1;rounded<=size;size-=1){ // find suitable node; size is biased size
 484:	0000                	unimp
 486:	344e                	fld	fs0,240(sp)
 488:	3100                	fld	fs0,32(a0)
 48a:	00170213          	addi	tp,a4,1
        if(buddyNodes[nd]==size && buddyNodes[nd]==rounded) node=nd;
 48e:	4f00                	lw	s0,24(a4)
 490:	1331010b          	0x1331010b
        inline constexpr xlen_t rsub(xlen_t x){return ((x+1)<<1);}
 494:	1755                	addi	a4,a4,-11
 496:	1301                	addi	t1,t1,-32
 498:	0000                	unimp
 49a:	8950                	0x8950
                buddyNodes[lsub(nd)]=buddyNodes[rsub(nd)]=size-1;
 49c:	0182                	c.slli64	gp
 49e:	1101                	addi	sp,sp,-32
 4a0:	3101                	addiw	sp,sp,-32
 4a2:	00130113          	addi	sp,t1,1
 4a6:	5100                	lw	s0,32(a0)
 4a8:	011d                	addi	sp,sp,7
 4aa:	1331                	addi	t1,t1,-20
 4ac:	0111                	addi	sp,sp,4
 4ae:	0712                	slli	a4,a4,0x4
        inline constexpr xlen_t lsub(xlen_t x){return ((x+1)<<1)-1;}
 4b0:	0b58                	addi	a4,sp,404
 4b2:	0b59                	addi	s6,s6,22
    for(xlen_t nd=0,size=rootOrder+1;rounded<=size;size-=1){ // find suitable node; size is biased size
 4b4:	13010b57          	0x13010b57
                buddyNodes[lsub(nd)]=buddyNodes[rsub(nd)]=size-1;
 4b8:	0000                	unimp
 4ba:	3452                	fld	fs0,304(sp)
 4bc:	0300                	addi	s0,sp,384
 4be:	3a0e                	fld	fs4,224(sp)
    for(xlen_t nd=0,size=rootOrder+1;rounded<=size;size-=1){ // find suitable node; size is biased size
 4c0:	390b3b0b          	0x390b3b0b
 4c4:	0013490b          	0x13490b
 4c8:	5300                	lw	s0,32(a4)
 4ca:	0034                	addi	a3,sp,8
 4cc:	0b3a0e03          	lb	t3,179(s4)
 4d0:	0b390b3b          	0xb390b3b
 4d4:	1349                	addi	t1,t1,-14
 4d6:	1702                	slli	a4,a4,0x20
    buddyNodes[0]=klib::max(buddyNodes[lsub(0)],buddyNodes[rsub(0)]);
 4d8:	0000                	unimp
 4da:	0b54                	addi	a3,sp,404
 4dc:	5501                	li	a0,-32
 4de:	00130117          	auipc	sp,0x130
    assert(ppn<end);
 4e2:	5500                	lw	s0,40(a0)
 4e4:	012e                	slli	sp,sp,0xb
 4e6:	0b3a1347          	fmsub.d	ft6,fs4,fs3,ft1,rtz
 4ea:	0b390b3b          	0xb390b3b
 4ee:	1364                	addi	s1,sp,428
 4f0:	0b20                	addi	s0,sp,408
 4f2:	1301                	addi	t1,t1,-32
 4f4:	0000                	unimp
 4f6:	2e56                	fld	ft8,336(sp)
 4f8:	3101                	addiw	sp,sp,-32
 4fa:	640e6e13          	ori	t3,t3,1600
 4fe:	12011113          	0x12011113
 502:	97184007          	flq	ft0,-1679(a6) # 590b4ccf <pool+0x58fbdccf>
 506:	1942                	slli	s2,s2,0x30
 508:	1301                	addi	t1,t1,-32
 50a:	0000                	unimp
    for(xlen_t nd=0,size=rootOrder+1;rounded<=size;size-=1){ // find suitable node; size is biased size
 50c:	01828957          	0x1828957
    assert(node>0);
 510:	1100                	addi	s0,sp,160
 512:	3101                	addiw	sp,sp,-32
 514:	58000013          	li	zero,1408
 518:	0000010b          	0x10b
 51c:	0b59                	addi	s6,s6,22
 51e:	0101                	addi	sp,sp,0
 520:	5a000013          	li	zero,1440
 524:	1331010b          	0x1331010b
 528:	1301                	addi	t1,t1,-32
 52a:	0000                	unimp
 52c:	3100345b          	0x3100345b
 530:	5c000013          	li	zero,1472
 534:	1331010b          	0x1331010b
 538:	0000                	unimp
 53a:	0b5d                	addi	s6,s6,23
 53c:	3101                	addiw	sp,sp,-32
 53e:	00175513          	srli	a0,a4,0x1
 542:	5e00                	lw	s0,56(a2)
 544:	011d                	addi	sp,sp,7
 546:	1331                	addi	t1,t1,-20
 548:	0111                	addi	sp,sp,4
 54a:	0712                	slli	a4,a4,0x4
    DBG(
 54c:	0b58                	addi	a4,sp,404
 54e:	0b59                	addi	s6,s6,22
void HeapMgrGrowable::growHeap(){
 550:	00000b57          	0xb57
 554:	0b5f 3101 1113      	0x111331010b5f
    DBG(
 55a:	1201                	addi	tp,tp,-32
 55c:	60000007          	0x60000007
void HeapMgrGrowable::growHeap(){
 560:	1331010b          	0x1331010b
    DBG(
 564:	0111                	addi	sp,sp,4
 566:	0712                	slli	a4,a4,0x4
 568:	1301                	addi	t1,t1,-32
 56a:	0000                	unimp
void HeapMgrGrowable::growHeap(){
 56c:	3461                	addiw	s0,s0,-8
 56e:	0300                	addi	s0,sp,384
 570:	490e                	lw	s2,192(sp)
 572:	6c193413          	sltiu	s0,s2,1729
    DBG(
 576:	0019                	c.nop	6
 578:	6200                	ld	s0,0(a2)
 57a:	0034                	addi	a3,sp,8
    Span newSpan={pmgr.alloc(growsize),growsize};
 57c:	13490e03          	lb	t3,308(s2)
 580:	1934                	addi	a3,sp,184
 582:	196c                	addi	a1,sp,188
 584:	1802                	slli	a6,a6,0x20
 586:	0000                	unimp
 588:	01828963          	beq	t0,s8,59a <.Ldebug_abbrev0+0x59a>
 58c:	1100                	addi	s0,sp,160
 58e:	9501                	srai	a0,a0,0x20
    reservedNode->data=newSpan;
 590:	1942                	slli	s2,s2,0x30
 592:	1331                	addi	t1,t1,-20
 594:	0000                	unimp
 596:	0564                	addi	s1,sp,652
 598:	3100                	fld	fs0,32(a0)
 59a:	00180213          	addi	tp,a6,1
 59e:	6500                	ld	s0,8(a0)
    tlsf_add_pool(newPool,growsize*vm::pageSize);
 5a0:	012e                	slli	sp,sp,0xb
 5a2:	0e03193f 0b3b0b3a 	0xb3b0b3a0e03193f
 5aa:	0b39                	addi	s6,s6,14
 5ac:	0e6e                	slli	t3,t3,0x1b
 5ae:	0b20                	addi	s0,sp,408
    if(tail)
 5b0:	1301                	addi	t1,t1,-32
 5b2:	0000                	unimp
    dynPages.push_back(reservedNode);
 5b4:	2e66                	fld	ft8,88(sp)
 5b6:	3f01                	addiw	t5,t5,-32
 5b8:	0319                	addi	t1,t1,6
 5ba:	3a0e                	fld	fs4,224(sp)
    nd->iter.next=cur->iter.next;
 5bc:	390b3b0b          	0x390b3b0b
 5c0:	490e6e0b          	0x490e6e0b
    cur->iter.next=nd;
 5c4:	010b2013          	slti	zero,s6,16
      list::insertAfter(tail,newNode),tail=newNode;
 5c8:	67000013          	li	zero,1648
        ptr_t rt=(tlsf_malloc(size));
 5cc:	012e                	slli	sp,sp,0xb
 5ce:	1331                	addi	t1,t1,-20
 5d0:	0e6e                	slli	t3,t3,0x1b
 5d2:	0111                	addi	sp,sp,4
 5d4:	0712                	slli	a4,a4,0x4
 5d6:	1840                	addi	s0,sp,52
 5d8:	01194297          	auipc	t0,0x1194
        if(rt!=nullptr)return rt;
 5dc:	68000013          	li	zero,1664
        ptr_t rt=(tlsf_malloc(size));
 5e0:	002e                	c.slli	zero,0xb
 5e2:	193c193f 0e030e6e 	0xe030e6e193c193f
 5ea:	0b3a                	slli	s6,s6,0xe
 5ec:	0b390b3b          	0xb390b3b
    reservedNode=(klib::ListNode<Span>*)(alloc(sizeof(klib::ListNode<Span>)));
 5f0:	0000                	unimp
 5f2:	2e69                	addiw	t3,t3,26
    DBG(
 5f4:	3f00                	fld	fs0,56(a4)
 5f6:	3c19                	addiw	s8,s8,-26
 5f8:	6e19                	lui	t3,0x6
 5fa:	030e                	slli	t1,t1,0x3
 5fc:	000e                	c.slli	zero,0x3
	...

Disassembly of section .debug_loc:

0000000000000000 <.LLST107>:
	...
    tlsf_create_with_pool(reinterpret_cast<ptr_t>(addr),len);
      10:	0004                	0x4
      12:	000a                	c.slli	zero,0x2
      14:	9f20                	0x9f20
	...

0000000000000026 <.LLST108>:
	...
    this->pool=addr;
      36:	000a                	c.slli	zero,0x2
    tlsf_create_with_pool(reinterpret_cast<ptr_t>(addr),len);
      38:	00000003          	lb	zero,0(zero) # 0 <.LLST107>
HeapMgrGrowable::HeapMgrGrowable(ptr_t addr,xlen_t len,PageMgr &pmgr):HeapMgr(addr,len),pmgr(pmgr),growsize(2){
      3c:	0000                	unimp
      3e:	0000                	unimp
    tlsf_create_with_pool(reinterpret_cast<ptr_t>(addr),len);
      40:	9f00                	0x9f00
	...

0000000000000052 <.LLST109>:
	...
        ptr_t rt=(tlsf_malloc(size));
      62:	000a                	c.slli	zero,0x2
      64:	00000003          	lb	zero,0(zero) # 0 <.LLST107>
        if(rt!=nullptr)return rt;
      68:	0000                	unimp
      6a:	0000                	unimp
        ptr_t rt=(tlsf_malloc(size));
      6c:	9f00                	0x9f00
	...

000000000000007e <.LLST76>:
	...
}
      8e:	0001                	nop
HeapMgrGrowable::HeapMgrGrowable(HeapMgr &other,PageMgr &pmgr):pmgr(pmgr),HeapMgr(other),growsize(2){
      90:	005a                	c.slli	zero,0x16
	...
      9e:	0000                	unimp
      a0:	0100                	addi	s0,sp,128
      a2:	5900                	lw	s0,48(a0)
	...

00000000000000b4 <.LLST77>:
	...
        ptr_t rt=(tlsf_malloc(size));
      c4:	0001                	nop
      c6:	0000005b          	0x5b
	...
      d6:	0400                	addi	s0,sp,512
}
      d8:	f300                	sd	s0,32(a4)
      da:	5b01                	li	s6,-32
    reservedNode=(klib::ListNode<Span>*)(alloc(sizeof(klib::ListNode<Span>)));
      dc:	009f 0000 0000      	0x9f
	...
}
      ea:	0000                	unimp
HeapMgrGrowable::~HeapMgrGrowable(){
      ec:	0100                	addi	s0,sp,128
      ee:	5b00                	lw	s0,48(a4)
	...
    DBG(printf("%s()\n",__func__);)
     100:	0001                	nop
     102:	0058                	addi	a4,sp,4
	...
HeapMgrGrowable::~HeapMgrGrowable(){
     110:	0000                	unimp
     112:	0400                	addi	s0,sp,512
     114:	f300                	sd	s0,32(a4)
     116:	5b01                	li	s6,-32
     118:	009f 0000 0000      	0x9f
	...

0000000000000129 <.LLST78>:
	...
        tlsf_walk_pool(pool);
     139:	0001                	nop
     13b:	005c                	addi	a5,sp,4
	...
        if(!dynPages.empty())for(auto node=dynPages.head;node->iter.next!=nullptr;node=node->iter.next){
     149:	0000                	unimp
     14b:	0400                	addi	s0,sp,512
     14d:	f300                	sd	s0,32(a4)
     14f:	5c01                	li	s8,-32
     151:	009f 0000 0000      	0x9f
	...
            tlsf_walk_pool((ptr_t)vm::pn2addr(node->data.first));
     15f:	0000                	unimp
     161:	0100                	addi	s0,sp,128
     163:	5c00                	lw	s0,56(s0)
	...
    while(!dynPages.empty()){
     175:	0004                	0x4
     177:	9f5c01f3          	0x9f5c01f3
	...

000000000000018b <.LLST79>:
	...
        DBG(printf("0x%lx %d\n",span.first,span.second);)
     19b:	0001                	nop
     19d:	0065                	c.nop	25
	...
     1ab:	0000                	unimp
    while(!dynPages.empty()){
     1ad:	0300                	addi	s0,sp,384
     1af:	7f00                	ld	s0,56(a4)
     1b1:	00009f7f          	kaddw	t5,ra,zero
	...
    if(head==tail)tail=nullptr;
     1c1:	0000                	unimp
     1c3:	7f7f0003          	lb	zero,2039(t5) # 9ac07f7 <pool+0x99c97f7>
     1c7:	009f 0000 0000      	0x9f
	...
}
     1d5:	0000                	unimp
     1d7:	0100                	addi	s0,sp,128
     1d9:	5b00                	lw	s0,48(a4)
	...
     1eb:	0002                	c.slli64	zero
ptr_t HeapMgr::alloc(xlen_t size){
     1ed:	9f30                	0x9f30
	...
     1ff:	ff090003          	lb	zero,-16(s2)
        ptr_t rt=(tlsf_malloc(size));
     203:	009f 0000 0000      	0x9f
	...

0000000000000214 <.LLST80>:
	...
}
     224:	0001                	nop
     226:	005a                	c.slli	zero,0x16
	...
ptr_t HeapMgr::alligned_alloc(xlen_t size,xlen_t alignment){
     234:	0000                	unimp
     236:	0100                	addi	s0,sp,128
        ptr_t rt=(tlsf_memalign(alignment,size));
     238:	5900                	lw	s0,48(a0)
	...

000000000000024a <.LLST81>:
	...
        if(rt!=nullptr)return rt;
     25a:	0001                	nop
        ptr_t rt=(tlsf_memalign(alignment,size));
     25c:	0062                	c.slli	zero,0x18
	...
     26a:	0000                	unimp
}
     26c:	0100                	addi	s0,sp,128
     26e:	6200                	ld	s0,0(a2)
	...

0000000000000280 <.LLST82>:
	...
void HeapMgr::free(ptr_t ptr){ tlsf_free(ptr); }
     290:	0001                	nop
     292:	0064                	addi	s1,sp,12
	...
PageMgr::~PageMgr(){ delete[] buddyNodes; }
     2a0:	0000                	unimp
     2a2:	0100                	addi	s0,sp,128
     2a4:	6400                	ld	s0,8(s0)
	...

00000000000002b6 <.LLST83>:
	...
PageNum PageMgr::alloc(size_t pages){
     2c6:	0002                	c.slli64	zero
     2c8:	9f30                	0x9f30
	...
     2da:	0001                	nop
     2dc:	005c                	addi	a5,sp,4
	...
    for(i=0;a>1;a>>=1,i++)r|=a&1;
     2ea:	0000                	unimp
     2ec:	0300                	addi	s0,sp,384
     2ee:	7c00                	ld	s0,56(s0)
     2f0:	00009f7f          	kaddw	t5,ra,zero
	...
     300:	0000                	unimp
     302:	0001                	nop
     304:	0065                	c.nop	25
	...

0000000000000315 <.LLST84>:
	...
    if(buddyNodes[0]<rounded) return 0;
     325:	0001                	nop
     327:	005f 0000 0000      	0x5f
	...
    for(xlen_t nd=0,size=rootOrder+1;rounded<=size;size-=1){ // find suitable node; size is biased size
     335:	0000                	unimp
     337:	0100                	addi	s0,sp,128
    xlen_t node=0;
     339:	5f00                	lw	s0,56(a4)
	...

000000000000034b <.LLST85>:
	...
        if(buddyNodes[nd]==size && buddyNodes[nd]==rounded) node=nd;
     35b:	0001                	nop
     35d:	0059                	c.nop	22
	...

000000000000036e <.LLST86>:
	...
                if(klib::min(buddyNodes[lsub(nd)],buddyNodes[rsub(nd)])>=rounded)
     37e:	7f7c0003          	lb	zero,2039(s8) # 17f7 <.LLST71+0xc>
     382:	009f 0000 0000      	0x9f
	...

0000000000000393 <.LLST87>:
	...
    assert(node>0);
     3a3:	0001                	nop
     3a5:	0059                	c.nop	22
	...
    buddyNodes[node]=0;
     3b3:	0000                	unimp
     3b5:	0100                	addi	s0,sp,128
     3b7:	5900                	lw	s0,48(a0)
	...

00000000000003c9 <.LLST88>:
	...
        buddyNodes[nd]=klib::max(buddyNodes[lsub(nd)],buddyNodes[rsub(nd)]);
     3d9:	0001                	nop
     3db:	0059                	c.nop	22
	...
     3e9:	0000                	unimp
     3eb:	0100                	addi	s0,sp,128
    for(xlen_t nd=prnt(node);nd>0;nd=prnt(nd))
     3ed:	5900                	lw	s0,48(a0)
	...

00000000000003ff <.LLST89>:
	...
    PageNum ppn=start+(node+1-(1l<<(rootOrder+1-rounded)))*(1l<<(rounded-1));//((node+1)*rounded-(1l<<rootOrder));
     40f:	0001                	nop
     411:	0059                	c.nop	22
	...

0000000000000422 <.LLST90>:
	...
    DBG(
     432:	7f7f0003          	lb	zero,2039(t5)
     436:	009f 0000 0000      	0x9f
	...

0000000000000447 <.LLST47>:
	...
}
     457:	0001                	nop
     459:	005a                	c.slli	zero,0x16
	...
     467:	0000                	unimp
     469:	0100                	addi	s0,sp,128
     46b:	6600                	ld	s0,8(a2)
	...
    for(xlen_t nd=0,size=rootOrder+1;rounded<=size;size-=1){ // find suitable node; size is biased size
     47d:	0004                	0x4
     47f:	9f5a01f3          	0x9f5a01f3
	...
        if(buddyNodes[nd]==size && buddyNodes[nd]==rounded) node=nd;
     493:	0001                	nop
        inline constexpr xlen_t rsub(xlen_t x){return ((x+1)<<1);}
     495:	0066                	c.slli	zero,0x19
	...
                buddyNodes[lsub(nd)]=buddyNodes[rsub(nd)]=size-1;
     4a3:	0000                	unimp
     4a5:	0100                	addi	s0,sp,128
     4a7:	5a00                	lw	s0,48(a2)
	...
     4b9:	0001                	nop
     4bb:	0066                	c.slli	zero,0x19
	...
    for(xlen_t nd=0,size=rootOrder+1;rounded<=size;size-=1){ // find suitable node; size is biased size
     4c9:	0000                	unimp
     4cb:	0100                	addi	s0,sp,128
     4cd:	5a00                	lw	s0,48(a2)
	...

00000000000004df <.LLST48>:
	...
    assert(ppn<end);
     4ef:	0001                	nop
     4f1:	0000005b          	0x5b
	...
     501:	0400                	addi	s0,sp,512
     503:	f300                	sd	s0,32(a4)
     505:	5b01                	li	s6,-32
     507:	009f 0000 0000      	0x9f
	...
    assert(node>0);
     515:	0000                	unimp
     517:	0100                	addi	s0,sp,128
     519:	5b00                	lw	s0,48(a4)
	...

000000000000052b <.LLST49>:
	...
     53b:	0002                	c.slli64	zero
     53d:	9f30                	0x9f30
	...
    DBG(
     54f:	0001                	nop
void HeapMgrGrowable::growHeap(){
     551:	0062                	c.slli	zero,0x18
	...
    DBG(
     55f:	0000                	unimp
void HeapMgrGrowable::growHeap(){
     561:	0100                	addi	s0,sp,128
     563:	6200                	ld	s0,0(a2)
	...
    DBG(
     575:	0001                	nop
     577:	0058                	addi	a4,sp,4
	...
    Span newSpan={pmgr.alloc(growsize),growsize};
     585:	0000                	unimp
     587:	0200                	addi	s0,sp,256
     589:	3000                	fld	fs0,32(s0)
     58b:	009f 0000 0000      	0x9f
	...

000000000000059c <.LLST50>:
	...
    tlsf_add_pool(newPool,growsize*vm::pageSize);
     5ac:	0001                	nop
     5ae:	0058                	addi	a4,sp,4
	...
    nd->iter.next=cur->iter.next;
     5bc:	0000                	unimp
     5be:	0100                	addi	s0,sp,128
     5c0:	5800                	lw	s0,48(s0)
	...

00000000000005d2 <.LLST54>:
	...
        ptr_t rt=(tlsf_malloc(size));
     5e2:	0002                	c.slli64	zero
     5e4:	9f30                	0x9f30
	...
    DBG(
     5f6:	7f7b0003          	lb	zero,2039(s6)
     5fa:	009f 0000 0000      	0x9f
	...
}
     608:	0000                	unimp
     60a:	0100                	addi	s0,sp,128
     60c:	5800                	lw	s0,48(s0)
	...
    DBG(
     61e:	0001                	nop
     620:	0058                	addi	a4,sp,4
	...
      head=tail=newNode;
     62e:	0000                	unimp
PageNum PageMgr::free(PageNum ppn,int order){
     630:	0100                	addi	s0,sp,128
     632:	5b00                	lw	s0,48(a4)
	...
    xlen_t idx=pos2node(ppn-start,order);
     644:	0001                	nop
     646:	0058                	addi	a4,sp,4
	...
PageNum PageMgr::free(PageNum ppn,int order){
     654:	0000                	unimp
     656:	0300                	addi	s0,sp,384
     658:	7800                	ld	s0,48(s0)
     65a:	00009f7f          	kaddw	t5,ra,zero
	...
     66a:	0000                	unimp
            DBG(assert(((pos>>rootOrder)&1)==0);)
     66c:	0001                	nop
     66e:	0058                	addi	a4,sp,4
	...
            for(int size=rootOrder-1;size>=order;size-=1){
     67c:	0000                	unimp
     67e:	0200                	addi	s0,sp,256
     680:	3000                	fld	fs0,32(s0)
     682:	009f 0000 0000      	0x9f
	...

0000000000000693 <.LLST55>:
	...
                if((pos>>size)&1)nd=rsub(nd);
     6a3:	0001                	nop
     6a5:	0059                	c.nop	22
	...
            for(int size=rootOrder-1;size>=order;size-=1){
     6b3:	0000                	unimp
        inline constexpr xlen_t lsub(xlen_t x){return ((x+1)<<1)-1;}
     6b5:	0100                	addi	s0,sp,128
     6b7:	5900                	lw	s0,48(a0)
	...
    DBG(printf("PageMgr::free(pos=%ld order=%d) idx=0x%lx\n",ppn-start,order,idx);)
     6c9:	01790003          	lb	zero,23(s2)
     6cd:	009f 0000 0000      	0x9f
	...
    buddyNodes[idx]=order+1;
     6db:	0000                	unimp
        inline constexpr xlen_t prnt(xlen_t x){return ((x+1)>>1)-1;}
     6dd:	0100                	addi	s0,sp,128
     6df:	5900                	lw	s0,48(a0)
	...
        buddyNodes[idx]=buddyNodes[lsub(idx)]==buddyNodes[rsub(idx)]?buddyNodes[lsub(idx)]+1:klib::max(buddyNodes[lsub(idx)],buddyNodes[rsub(idx)]); // the free'd leaf node ensures lsub or rsub being not null
     6f1:	01790003          	lb	zero,23(s2)
        inline constexpr xlen_t lsub(xlen_t x){return ((x+1)<<1)-1;}
     6f5:	009f 0000 0000      	0x9f
	...
     703:	0000                	unimp
     705:	0100                	addi	s0,sp,128
     707:	5900                	lw	s0,48(a0)
	...
        inline constexpr xlen_t rsub(xlen_t x){return ((x+1)<<1);}
     719:	01790003          	lb	zero,23(s2)
     71d:	009f 0000 0000      	0x9f
	...
        inline constexpr xlen_t prnt(xlen_t x){return ((x+1)>>1)-1;}
     72b:	0000                	unimp
    for(idx=prnt(idx);idx>0;idx=prnt(idx)){
     72d:	0100                	addi	s0,sp,128
     72f:	5900                	lw	s0,48(a0)
	...

0000000000000741 <.LLST56>:
	...
            DBG(assert(((pos>>rootOrder)&1)==0);)
     751:	0001                	nop
     753:	0066                	c.slli	zero,0x19
	...
     761:	0000                	unimp
     763:	0100                	addi	s0,sp,128
     765:	6600                	ld	s0,8(a2)
	...

0000000000000777 <.LLST57>:
	...
     787:	7f7b0003          	lb	zero,2039(s6)
     78b:	009f 0000 0000      	0x9f
	...

000000000000079c <.LLST58>:
	...
    buddyNodes[idx]=order+1;
     7ac:	0001                	nop
     7ae:	0066                	c.slli	zero,0x19
	...

00000000000007bf <.LLST59>:
	...
PageMgr::PageMgr(PageNum start,PageNum end):start(start),end(end){
     7cf:	0001                	nop
     7d1:	0066                	c.slli	zero,0x19
	...

00000000000007e2 <.LLST60>:
	...
    DBG(
     7f2:	7f780003          	lb	zero,2039(a6)
     7f6:	009f 0000 0000      	0x9f
	...

0000000000000807 <.LLST61>:
	...
    for(i=0;a>1;a>>=1,i++)r|=a&1;
     817:	01820007          	0x1820007
     81b:	2531                	addiw	a0,a0,12
     81d:	1c31                	addi	s8,s8,-20
     81f:	009f 0000 0000      	0x9f
	...

0000000000000830 <.LLST62>:
	...
    rootOrder=klib::log2up(pages);
     840:	0001                	nop
     842:	0066                	c.slli	zero,0x19
	...

0000000000000853 <.LLST63>:
	...
        ptr_t rt=(tlsf_malloc(size));
     863:	0001                	nop
     865:	0066                	c.slli	zero,0x19
	...

0000000000000876 <.LLST51>:
	...
    for(xlen_t i=1;i<buddyTreeSize;i++)buddyNodes[i]=0;
     886:	0001                	nop
     888:	0000005b          	0x5b
	...
     898:	0100                	addi	s0,sp,128
     89a:	5b00                	lw	s0,48(a4)
	...
        if((pages>>i)&1){
     8ac:	0001                	nop
     8ae:	0000005b          	0x5b
	...

00000000000008bf <.LLST52>:
	...
    for(int i=rootOrder;i>=0;i--){
     8cf:	0002                	c.slli64	zero
     8d1:	9f30                	0x9f30
	...
            printf("buddy: |"); for(xlen_t i=0;i<buddyTreeSize;i++)printf("%d | ",buddyNodes[i]-1);printf("\n");
     8e3:	0001                	nop
     8e5:	005f 0000 0000      	0x5f
	...
     8f3:	0000                	unimp
     8f5:	0200                	addi	s0,sp,256
     8f7:	3000                	fld	fs0,32(s0)
     8f9:	009f 0000 0000      	0x9f
	...

000000000000090a <.LLST53>:
	...
     91a:	0002                	c.slli64	zero
     91c:	9f30                	0x9f30
	...
}
     92e:	0001                	nop
     930:	0064                	addi	s1,sp,12
	...
     93e:	0000                	unimp
    DBG(
     940:	0200                	addi	s0,sp,256
     942:	3000                	fld	fs0,32(s0)
     944:	009f 0000 0000      	0x9f
	...

0000000000000955 <.LLST43>:
	...
            free(base,i);
     965:	0001                	nop
     967:	005a                	c.slli	zero,0x16
	...
     975:	0000                	unimp
     977:	0400                	addi	s0,sp,512
     979:	f300                	sd	s0,32(a4)
     97b:	5a01                	li	s4,-32
     97d:	009f 0000 0000      	0x9f
	...

000000000000098e <.LLST44>:
	...
     99e:	0001                	nop
     9a0:	005a                	c.slli	zero,0x16
	...

00000000000009b1 <.LLST46>:
	...
     9c1:	0009                	c.nop	2
     9c3:	00000003          	lb	zero,0(zero) # 0 <.LLST107>
	...

00000000000009dc <.LLST91>:
	...
     9ec:	0001                	nop
     9ee:	005a                	c.slli	zero,0x16
	...
     9fc:	0000                	unimp
     9fe:	0100                	addi	s0,sp,128
     a00:	5800                	lw	s0,48(s0)
	...
     a12:	0004                	0x4
     a14:	9f5a01f3          	0x9f5a01f3
	...
     a28:	0001                	nop
     a2a:	0058                	addi	a4,sp,4
	...

0000000000000a3b <.LLST92>:
	...
     a4b:	0001                	nop
     a4d:	0000005b          	0x5b
	...
     a5d:	0100                	addi	s0,sp,128
     a5f:	6200                	ld	s0,0(a2)
	...
     a71:	0004                	0x4
     a73:	9f5b01f3          	0x9f5b01f3
	...
     a87:	0001                	nop
     a89:	0062                	c.slli	zero,0x18
	...

0000000000000a9a <.LLST93>:
	...
     aaa:	0001                	nop
     aac:	005c                	addi	a5,sp,4
	...
     aba:	0000                	unimp
     abc:	0100                	addi	s0,sp,128
     abe:	5900                	lw	s0,48(a0)
	...
     ad0:	0004                	0x4
     ad2:	9f5c01f3          	0x9f5c01f3
	...

0000000000000ae6 <.LLST94>:
	...
     af6:	0001                	nop
     af8:	0059                	c.nop	22
	...
     b06:	0000                	unimp
     b08:	0700                	addi	s0,sp,896
     b0a:	f300                	sd	s0,32(a4)
     b0c:	5c01                	li	s8,-32
     b0e:	0082                	c.slli64	ra
     b10:	9f1c                	0x9f1c
	...
     b22:	0008                	0x8
     b24:	f35c01f3          	0xf35c01f3
     b28:	5b01                	li	s6,-32
     b2a:	9f1c                	0x9f1c
	...
     b3c:	0001                	nop
     b3e:	0059                	c.nop	22
	...

0000000000000b4f <.LLST95>:
	...
     b5f:	0001                	nop
     b61:	0059                	c.nop	22
	...
     b6f:	0000                	unimp
     b71:	0100                	addi	s0,sp,128
     b73:	5f00                	lw	s0,56(a4)
	...
     b85:	0001                	nop
     b87:	005f 0000 0000      	0x5f
	...
     b95:	0000                	unimp
     b97:	0100                	addi	s0,sp,128
     b99:	5900                	lw	s0,48(a0)
	...

0000000000000bab <.LLST96>:
	...
     bbb:	0002                	c.slli64	zero
     bbd:	9f30                	0x9f30
	...
     bcf:	0001                	nop
     bd1:	005e                	c.slli	zero,0x17
	...
     bdf:	0000                	unimp
     be1:	0200                	addi	s0,sp,256
     be3:	3000                	fld	fs0,32(s0)
     be5:	009f 0000 0000      	0x9f
	...

0000000000000bf6 <.LLST97>:
	...
     c06:	0002                	c.slli64	zero
     c08:	9f30                	0x9f30
	...
     c1a:	0001                	nop
     c1c:	005d                	c.nop	23
	...
     c2a:	0000                	unimp
     c2c:	0200                	addi	s0,sp,256
     c2e:	3000                	fld	fs0,32(s0)
     c30:	009f 0000 0000      	0x9f
	...

0000000000000c41 <.LLST98>:
	...
     c51:	0001                	nop
     c53:	00000063          	beqz	zero,c53 <.LLST98+0x12>
	...

0000000000000c64 <.LLST99>:
	...
     c74:	0002                	c.slli64	zero
     c76:	9f30                	0x9f30
	...
     c88:	0002                	c.slli64	zero
     c8a:	9f31                	addw	a4,a4,a2
	...

0000000000000c9c <.LLST100>:
	...
     cac:	0001                	nop
     cae:	005a                	c.slli	zero,0x16
	...
     cbc:	0000                	unimp
     cbe:	0100                	addi	s0,sp,128
     cc0:	5a00                	lw	s0,48(a2)
	...

0000000000000cd2 <.LLST101>:
	...
     ce2:	0002                	c.slli64	zero
     ce4:	9f31                	addw	a4,a4,a2
	...
     cf6:	0001                	nop
     cf8:	005f 0000 0000      	0x5f
	...

0000000000000d09 <.LLST102>:
	...
     d19:	0001                	nop
     d1b:	0062                	c.slli	zero,0x18
	...
     d29:	0000                	unimp
     d2b:	0400                	addi	s0,sp,512
     d2d:	f300                	sd	s0,32(a4)
     d2f:	5b01                	li	s6,-32
     d31:	009f 0000 0000      	0x9f
	...
     d3f:	0000                	unimp
     d41:	0100                	addi	s0,sp,128
     d43:	6200                	ld	s0,0(a2)
	...

0000000000000d55 <.LLST103>:
	...
     d65:	0001                	nop
     d67:	005c                	addi	a5,sp,4
	...
     d75:	0000                	unimp
     d77:	0100                	addi	s0,sp,128
     d79:	5c00                	lw	s0,56(s0)
	...

0000000000000d8b <.LLST104>:
	...
     d9b:	0001                	nop
     d9d:	0058                	addi	a4,sp,4
	...
     dab:	0000                	unimp
     dad:	0400                	addi	s0,sp,512
     daf:	f300                	sd	s0,32(a4)
     db1:	5a01                	li	s4,-32
     db3:	009f 0000 0000      	0x9f
	...

0000000000000dc4 <.LLST105>:
	...
     dd4:	0001                	nop
     dd6:	0058                	addi	a4,sp,4
	...
     de4:	0000                	unimp
     de6:	0400                	addi	s0,sp,512
     de8:	f300                	sd	s0,32(a4)
     dea:	5a01                	li	s4,-32
     dec:	009f 0000 0000      	0x9f
	...

0000000000000dfd <.LLST106>:
	...
     e0d:	0002                	c.slli64	zero
     e0f:	9f30                	0x9f30
	...
     e21:	0001                	nop
     e23:	0059                	c.nop	22
	...
     e31:	0000                	unimp
     e33:	0300                	addi	s0,sp,384
     e35:	7900                	ld	s0,48(a0)
     e37:	00009f7f          	kaddw	t5,ra,zero
	...
     e47:	0000                	unimp
     e49:	0001                	nop
     e4b:	0059                	c.nop	22
	...

0000000000000e5c <.LLST36>:
	...
     e6c:	0001                	nop
     e6e:	005a                	c.slli	zero,0x16
	...
     e7c:	0000                	unimp
     e7e:	0400                	addi	s0,sp,512
     e80:	f300                	sd	s0,32(a4)
     e82:	5a01                	li	s4,-32
     e84:	009f 0000 0000      	0x9f
	...

0000000000000e95 <.LLST37>:
	...
     ea5:	0001                	nop
     ea7:	0000005b          	0x5b
	...
     eb7:	0100                	addi	s0,sp,128
     eb9:	5900                	lw	s0,48(a0)
	...
     ecb:	0001                	nop
     ecd:	0000005b          	0x5b
	...
     edd:	0400                	addi	s0,sp,512
     edf:	f300                	sd	s0,32(a4)
     ee1:	5b01                	li	s6,-32
     ee3:	009f 0000 0000      	0x9f
	...
     ef1:	0000                	unimp
     ef3:	0100                	addi	s0,sp,128
     ef5:	5900                	lw	s0,48(a0)
	...
     f07:	0004                	0x4
     f09:	9f5b01f3          	0x9f5b01f3
	...

0000000000000f1d <.LLST38>:
	...
     f2d:	0001                	nop
     f2f:	005c                	addi	a5,sp,4
	...
     f3d:	0000                	unimp
     f3f:	0100                	addi	s0,sp,128
     f41:	5800                	lw	s0,48(s0)
	...
     f53:	0001                	nop
     f55:	005a                	c.slli	zero,0x16
	...
     f63:	0000                	unimp
     f65:	0400                	addi	s0,sp,512
     f67:	f300                	sd	s0,32(a4)
     f69:	5c01                	li	s8,-32
     f6b:	009f 0000 0000      	0x9f
	...
     f79:	0000                	unimp
     f7b:	0100                	addi	s0,sp,128
     f7d:	5800                	lw	s0,48(s0)
	...
     f8f:	0004                	0x4
     f91:	9f5c01f3          	0x9f5c01f3
	...

0000000000000fa5 <.LLST39>:
	...
     fb5:	0002                	c.slli64	zero
     fb7:	9f30                	0x9f30
	...
     fc9:	0002                	c.slli64	zero
     fcb:	9f31                	addw	a4,a4,a2
	...
     fdd:	0002                	c.slli64	zero
     fdf:	9f30                	0x9f30
	...

0000000000000ff1 <.LLST40>:
	...
    1001:	0001                	nop
    1003:	005a                	c.slli	zero,0x16
	...
    1011:	0000                	unimp
    1013:	0100                	addi	s0,sp,128
    1015:	5a00                	lw	s0,48(a2)
	...

0000000000001027 <.LLST23>:
	...
    1037:	0001                	nop
    1039:	005a                	c.slli	zero,0x16
	...
    1047:	0000                	unimp
    1049:	0100                	addi	s0,sp,128
    104b:	5900                	lw	s0,48(a0)
	...
    105d:	0004                	0x4
    105f:	9f5a01f3          	0x9f5a01f3
	...

0000000000001073 <.LLST24>:
	...
    1083:	0001                	nop
    1085:	0058                	addi	a4,sp,4
	...

0000000000001096 <.LLST25>:
	...
    10a6:	10790003          	lb	zero,263(s2)
    10aa:	009f 0000 0000      	0x9f
	...

00000000000010bb <.LLST27>:
	...
    10cb:	0008                	0x8
    10cd:	9362                	add	t1,t1,s8
    10cf:	6308                	ld	a0,0(a4)
    10d1:	04930493          	addi	s1,t1,73
	...
    10e5:	0005                	c.nop	1
    10e7:	9362                	add	t1,t1,s8
    10e9:	9308                	0x9308
    10eb:	0008                	0x8
	...
    10f9:	0000                	unimp
    10fb:	0800                	addi	s0,sp,16
    10fd:	6200                	ld	s0,0(a2)
    10ff:	93630893          	addi	a7,t1,-1738
    1103:	9304                	0x9304
    1105:	0004                	0x4
	...

0000000000001116 <.LLST28>:
	...
    1126:	0002                	c.slli64	zero
    1128:	9f48                	0x9f48
	...

000000000000113a <.LLST29>:
	...
    114a:	0001                	nop
    114c:	005a                	c.slli	zero,0x16
	...

000000000000115d <.LLST31>:
	...
    116d:	0009                	c.nop	2
    116f:	00000003          	lb	zero,0(zero) # 0 <.LLST107>
	...

0000000000001188 <.LLST15>:
	...
    1198:	0001                	nop
    119a:	005a                	c.slli	zero,0x16
	...
    11a8:	0000                	unimp
    11aa:	0100                	addi	s0,sp,128
    11ac:	5800                	lw	s0,48(s0)
	...
    11be:	0004                	0x4
    11c0:	9f5a01f3          	0x9f5a01f3
	...

00000000000011d4 <.LLST16>:
	...
    11e4:	0001                	nop
    11e6:	0000005b          	0x5b
	...
    11f6:	0400                	addi	s0,sp,512
    11f8:	f300                	sd	s0,32(a4)
    11fa:	5b01                	li	s6,-32
    11fc:	009f 0000 0000      	0x9f
	...

000000000000120d <.LLST17>:
	...
    121d:	0001                	nop
    121f:	005c                	addi	a5,sp,4
	...
    122d:	0000                	unimp
    122f:	0400                	addi	s0,sp,512
    1231:	f300                	sd	s0,32(a4)
    1233:	5c01                	li	s8,-32
    1235:	009f 0000 0000      	0x9f
	...

0000000000001246 <.LLST18>:
	...
    1256:	107a0003          	lb	zero,263(s4)
    125a:	009f 0000 0000      	0x9f
	...

000000000000126b <.LLST19>:
	...
    127b:	0002                	c.slli64	zero
    127d:	9f48                	0x9f48
	...

000000000000128f <.LLST20>:
	...
    129f:	0001                	nop
    12a1:	005a                	c.slli	zero,0x16
	...
    12af:	0000                	unimp
    12b1:	0100                	addi	s0,sp,128
    12b3:	5800                	lw	s0,48(s0)
	...

00000000000012c5 <.LLST21>:
	...
    12d5:	0002                	c.slli64	zero
    12d7:	9f30                	0x9f30
	...
    12e9:	0002                	c.slli64	zero
    12eb:	9f31                	addw	a4,a4,a2
	...

00000000000012fd <.LLST22>:
	...
    130d:	0001                	nop
    130f:	005a                	c.slli	zero,0x16
	...
    131d:	0000                	unimp
    131f:	0100                	addi	s0,sp,128
    1321:	5a00                	lw	s0,48(a2)
	...

0000000000001333 <.LLST3>:
	...
    1343:	0001                	nop
    1345:	005a                	c.slli	zero,0x16
	...
    1353:	0000                	unimp
    1355:	0100                	addi	s0,sp,128
    1357:	5800                	lw	s0,48(s0)
	...
    1369:	0004                	0x4
    136b:	9f5a01f3          	0x9f5a01f3
	...

000000000000137f <.LLST4>:
	...
    138f:	0001                	nop
    1391:	0000005b          	0x5b
	...
    13a1:	0100                	addi	s0,sp,128
    13a3:	5a00                	lw	s0,48(a2)
	...
    13b5:	0004                	0x4
    13b7:	9f5b01f3          	0x9f5b01f3
	...

00000000000013cb <.LLST5>:
	...
    13db:	0001                	nop
    13dd:	005c                	addi	a5,sp,4
	...
    13eb:	0000                	unimp
    13ed:	0400                	addi	s0,sp,512
    13ef:	f300                	sd	s0,32(a4)
    13f1:	5c01                	li	s8,-32
    13f3:	009f 0000 0000      	0x9f
	...

0000000000001404 <.LLST6>:
	...
    1414:	0001                	nop
    1416:	005d                	c.nop	23
	...
    1424:	0000                	unimp
    1426:	0100                	addi	s0,sp,128
    1428:	5900                	lw	s0,48(a0)
	...
    143a:	0004                	0x4
    143c:	9f5d01f3          	0x9f5d01f3
	...

0000000000001450 <.LLST7>:
	...
    1460:	0001                	nop
    1462:	005c                	addi	a5,sp,4
	...
    1470:	0000                	unimp
    1472:	0400                	addi	s0,sp,512
    1474:	f300                	sd	s0,32(a4)
    1476:	5c01                	li	s8,-32
    1478:	009f 0000 0000      	0x9f
	...

0000000000001489 <.LLST8>:
	...
    1499:	0001                	nop
    149b:	0000005b          	0x5b
	...
    14ab:	0100                	addi	s0,sp,128
    14ad:	5a00                	lw	s0,48(a2)
	...
    14bf:	0004                	0x4
    14c1:	9f5b01f3          	0x9f5b01f3
	...

00000000000014d5 <.LLST9>:
	...
    14e5:	0001                	nop
    14e7:	005a                	c.slli	zero,0x16
	...
    14f5:	0000                	unimp
    14f7:	0100                	addi	s0,sp,128
    14f9:	5800                	lw	s0,48(s0)
	...

000000000000150b <.LLST10>:
	...
    151b:	10780003          	lb	zero,263(a6)
    151f:	009f 0000 0000      	0x9f
	...

0000000000001530 <.LLST11>:
	...
    1540:	0002                	c.slli64	zero
    1542:	9f48                	0x9f48
	...

0000000000001554 <.LLST12>:
	...
    1564:	0001                	nop
    1566:	0058                	addi	a4,sp,4
	...

0000000000001577 <.LLST13>:
	...
    1587:	0002                	c.slli64	zero
    1589:	9f30                	0x9f30
	...
    159b:	0002                	c.slli64	zero
    159d:	9f31                	addw	a4,a4,a2
	...

00000000000015af <.LLST14>:
	...
    15bf:	0001                	nop
    15c1:	005a                	c.slli	zero,0x16
	...
    15cf:	0000                	unimp
    15d1:	0100                	addi	s0,sp,128
    15d3:	5a00                	lw	s0,48(a2)
	...

00000000000015e5 <.LLST64>:
	...
    15f5:	0001                	nop
    15f7:	005a                	c.slli	zero,0x16
	...
    1605:	0000                	unimp
    1607:	0100                	addi	s0,sp,128
    1609:	5800                	lw	s0,48(s0)
	...
    161b:	0004                	0x4
    161d:	9f5a01f3          	0x9f5a01f3
	...
    1631:	0001                	nop
    1633:	0058                	addi	a4,sp,4
	...

0000000000001644 <.LLST65>:
	...
    1654:	0008                	0x8
    1656:	935a                	add	t1,t1,s6
    1658:	5b08                	lw	a0,48(a4)
    165a:	04930493          	addi	s1,t1,73
	...
    166e:	0009                	c.nop	2
    1670:	0893007f          	radd8	zero,t1,s1
    1674:	9304935b          	0x9304935b
    1678:	0004                	0x4
	...
    1686:	0000                	unimp
    1688:	0a00                	addi	s0,sp,272
    168a:	7f00                	ld	s0,56(a4)
    168c:	9300                	0x9300
    168e:	7f08                	ld	a0,56(a4)
    1690:	9308                	0x9308
    1692:	9304                	0x9304
    1694:	0004                	0x4
	...

00000000000016a5 <.LLST66>:
	...
    16b5:	0001                	nop
    16b7:	0059                	c.nop	22
	...
    16c5:	0000                	unimp
    16c7:	0100                	addi	s0,sp,128
    16c9:	5a00                	lw	s0,48(a2)
	...
    16db:	0001                	nop
    16dd:	0059                	c.nop	22
	...

00000000000016ee <.LLST67>:
	...
    16fe:	10780003          	lb	zero,263(a6)
    1702:	009f 0000 0000      	0x9f
	...
    1710:	0000                	unimp
    1712:	0600                	addi	s0,sp,768
    1714:	f300                	sd	s0,32(a4)
    1716:	5a01                	li	s4,-32
    1718:	009f1023          	sh	s1,0(t5)
	...
    1728:	0000                	unimp
    172a:	0300                	addi	s0,sp,384
    172c:	7800                	ld	s0,48(s0)
    172e:	9f10                	0x9f10
	...

0000000000001740 <.LLST68>:
	...
    1750:	10780003          	lb	zero,263(a6)
    1754:	009f 0000 0000      	0x9f
	...
    1762:	0000                	unimp
    1764:	0600                	addi	s0,sp,768
    1766:	f300                	sd	s0,32(a4)
    1768:	5a01                	li	s4,-32
    176a:	009f1023          	sh	s1,0(t5)
	...
    177a:	0000                	unimp
    177c:	0300                	addi	s0,sp,384
    177e:	7800                	ld	s0,48(s0)
    1780:	9f10                	0x9f10
	...

0000000000001792 <.LLST69>:
	...
    17a2:	0001                	nop
    17a4:	005f 0000 0000      	0x5f
	...
    17b2:	0000                	unimp
    17b4:	0100                	addi	s0,sp,128
    17b6:	5f00                	lw	s0,56(a4)
	...

00000000000017c8 <.LLST70>:
	...
    17d8:	0001                	nop
    17da:	005e                	c.slli	zero,0x17
	...

00000000000017eb <.LLST71>:
	...
    17fb:	0001                	nop
    17fd:	005f 0000 0000      	0x5f
	...

000000000000180e <.LLST72>:
	...
    181e:	0002                	c.slli64	zero
    1820:	9f48                	0x9f48
	...

0000000000001832 <.LLST73>:
	...
    1842:	0001                	nop
    1844:	0058                	addi	a4,sp,4
	...

0000000000001855 <.LLST74>:
	...
    1865:	0002                	c.slli64	zero
    1867:	9f30                	0x9f30
	...
    1879:	0002                	c.slli64	zero
    187b:	9f31                	addw	a4,a4,a2
	...

000000000000188d <.LLST75>:
	...
    189d:	0001                	nop
    189f:	005a                	c.slli	zero,0x16
	...
    18ad:	0000                	unimp
    18af:	0100                	addi	s0,sp,128
    18b1:	5c00                	lw	s0,56(s0)
	...
    18c3:	0001                	nop
    18c5:	005a                	c.slli	zero,0x16
	...
    18d3:	0000                	unimp
    18d5:	0100                	addi	s0,sp,128
    18d7:	5c00                	lw	s0,56(s0)
	...

00000000000018e9 <.LLST0>:
	...
    18f9:	0001                	nop
    18fb:	005a                	c.slli	zero,0x16
	...
    1909:	0000                	unimp
    190b:	0100                	addi	s0,sp,128
    190d:	5f00                	lw	s0,56(a4)
	...
    191f:	0004                	0x4
    1921:	9f5a01f3          	0x9f5a01f3
	...

0000000000001935 <.LLST1>:
	...
    1945:	0001                	nop
    1947:	0000005b          	0x5b
	...
    1957:	0100                	addi	s0,sp,128
    1959:	5a00                	lw	s0,48(a2)
	...
    196b:	0004                	0x4
    196d:	9f5b01f3          	0x9f5b01f3
	...

0000000000001981 <.LLST2>:
	...
    1991:	0001                	nop
    1993:	005c                	addi	a5,sp,4
	...
    19a1:	0000                	unimp
    19a3:	0400                	addi	s0,sp,512
    19a5:	f300                	sd	s0,32(a4)
    19a7:	5c01                	li	s8,-32
    19a9:	009f 0000 0000      	0x9f
	...

00000000000019ba <.LLST32>:
	...
    19ca:	0001                	nop
    19cc:	005a                	c.slli	zero,0x16
	...
    19da:	0000                	unimp
    19dc:	0400                	addi	s0,sp,512
    19de:	f300                	sd	s0,32(a4)
    19e0:	5a01                	li	s4,-32
    19e2:	009f 0000 0000      	0x9f
	...

00000000000019f3 <.LLST33>:
	...
    1a03:	0001                	nop
    1a05:	0000005b          	0x5b
	...
    1a15:	0100                	addi	s0,sp,128
    1a17:	5800                	lw	s0,48(s0)
	...
    1a29:	0001                	nop
    1a2b:	005a                	c.slli	zero,0x16
	...
    1a39:	0000                	unimp
    1a3b:	0400                	addi	s0,sp,512
    1a3d:	f300                	sd	s0,32(a4)
    1a3f:	5b01                	li	s6,-32
    1a41:	009f 0000 0000      	0x9f
	...
    1a4f:	0000                	unimp
    1a51:	0100                	addi	s0,sp,128
    1a53:	5800                	lw	s0,48(s0)
	...
    1a65:	0004                	0x4
    1a67:	9f5b01f3          	0x9f5b01f3
	...

0000000000001a7b <.LLST34>:
	...
    1a8b:	0002                	c.slli64	zero
    1a8d:	9f30                	0x9f30
	...
    1a9f:	0002                	c.slli64	zero
    1aa1:	9f31                	addw	a4,a4,a2
	...
    1ab3:	0002                	c.slli64	zero
    1ab5:	9f30                	0x9f30
	...

0000000000001ac7 <.LLST35>:
	...
    1ad7:	0001                	nop
    1ad9:	005a                	c.slli	zero,0x16
	...
    1ae7:	0000                	unimp
    1ae9:	0100                	addi	s0,sp,128
    1aeb:	5a00                	lw	s0,48(a2)
	...

0000000000001afd <.LLST41>:
	...
    1b0d:	0001                	nop
    1b0f:	005a                	c.slli	zero,0x16
	...
    1b1d:	0000                	unimp
    1b1f:	0400                	addi	s0,sp,512
    1b21:	f300                	sd	s0,32(a4)
    1b23:	5a01                	li	s4,-32
    1b25:	009f 0000 0000      	0x9f
	...

0000000000001b36 <.LLST42>:
	...
    1b46:	0001                	nop
    1b48:	0000005b          	0x5b
	...
    1b58:	0400                	addi	s0,sp,512
    1b5a:	f300                	sd	s0,32(a4)
    1b5c:	5b01                	li	s6,-32
    1b5e:	009f 0000 0000      	0x9f
	...

Disassembly of section .debug_aranges:

0000000000000000 <.debug_aranges>:
HeapMgr::~HeapMgr(){}
   0:	003c                	addi	a5,sp,8
   2:	0000                	unimp
HeapMgr::HeapMgr(ptr_t addr,xlen_t len){
   4:	0002                	c.slli64	zero
   6:	0000                	unimp
    this->pool=addr;
   8:	0000                	unimp
   a:	0008                	0x8
	...

Disassembly of section .debug_ranges:

0000000000000000 <.Ldebug_ranges0>:
	...

Disassembly of section .debug_line:

0000000000000000 <.Ldebug_line0>:
       0:	13d1                	addi	t2,t2,-12
HeapMgr::~HeapMgr(){}
       2:	0000                	unimp
HeapMgr::HeapMgr(ptr_t addr,xlen_t len){
       4:	00f00003          	lb	zero,15(zero) # f <.Ldebug_line0+0xf>
    this->pool=addr;
       8:	0000                	unimp
       a:	0101                	addi	sp,sp,0
HeapMgr::HeapMgr(ptr_t addr,xlen_t len){
       c:	000d0efb          	0xd0efb
    tlsf_create_with_pool(reinterpret_cast<ptr_t>(addr),len);
      10:	0101                	addi	sp,sp,0
      12:	0101                	addi	sp,sp,0
      14:	0000                	unimp
      16:	0100                	addi	s0,sp,128
      18:	0000                	unimp
      1a:	6b01                	0x6b01
HeapMgrGrowable::HeapMgrGrowable(ptr_t addr,xlen_t len,PageMgr &pmgr):HeapMgr(addr,len),pmgr(pmgr),growsize(2){
      1c:	7265                	lui	tp,0xffff9
      1e:	656e                	ld	a0,216(sp)
      20:	006c                	addi	a1,sp,12
      22:	6e69                	lui	t3,0x1a
      24:	64756c63          	bltu	a0,t2,67c <.Ldebug_line0+0x67c>
      28:	0065                	c.nop	25
      2a:	6d6f682f          	0x6d6f682f
      2e:	2f65                	addiw	t5,t5,25
      30:	797a                	ld	s2,440(sp)
      32:	702e2f63          	0x702e2f63
    this->pool=addr;
      36:	616c                	ld	a1,192(a0)
    tlsf_create_with_pool(reinterpret_cast<ptr_t>(addr),len);
      38:	6674                	ld	a3,200(a2)
      3a:	696d726f          	jal	tp,d76d0 <.LLST42+0xd5b9a>
HeapMgrGrowable::HeapMgrGrowable(ptr_t addr,xlen_t len,PageMgr &pmgr):HeapMgr(addr,len),pmgr(pmgr),growsize(2){
      3e:	61702f6f          	jal	t5,2e54 <.LLST42+0x131e>
    tlsf_create_with_pool(reinterpret_cast<ptr_t>(addr),len);
      42:	67616b63          	bltu	sp,s6,6b8 <.Ldebug_line0+0x6b8>
      46:	7365                	lui	t1,0xffff9
HeapMgrGrowable::HeapMgrGrowable(ptr_t addr,xlen_t len,PageMgr &pmgr):HeapMgr(addr,len),pmgr(pmgr),growsize(2){
      48:	6f6f742f          	0x6f6f742f
      4c:	636c                	ld	a1,192(a4)
      4e:	6168                	ld	a0,192(a0)
  inline list(){ head=tail=nullptr; }
      50:	6e69                	lui	t3,0x1a
      52:	672d                	lui	a4,0xb
      54:	3364                	fld	fs1,224(a4)
      56:	7632                	ld	a2,296(sp)
      58:	62696c2f          	0x62696c2f
        ptr_t rt=(tlsf_malloc(size));
      5c:	6363672f          	0x6363672f
      60:	7369722f          	0x7369722f
      64:	6e2d7663          	bgeu	s10,sp,750 <.Ldebug_line0+0x750>
        if(rt!=nullptr)return rt;
      68:	6375                	lui	t1,0x1d
      6a:	656c                	ld	a1,200(a0)
        ptr_t rt=(tlsf_malloc(size));
      6c:	2d69                	addiw	s10,s10,26
      6e:	6c65                	lui	s8,0x19
      70:	2f66                	fld	ft10,88(sp)
      72:	2e39                	addiw	t3,t3,14
      74:	2e32                	fld	ft8,264(sp)
      76:	2f30                	fld	fa2,88(a4)
}
      78:	6e69                	lui	t3,0x1a
      7a:	64756c63          	bltu	a0,t2,6d2 <.Ldebug_line0+0x6d2>
    reservedNode=(klib::ListNode<Span>*)(alloc(sizeof(klib::ListNode<Span>)));
      7e:	0065                	c.nop	25
}
      80:	6e69                	lui	t3,0x1a
      82:	64756c63          	bltu	a0,t2,6da <.Ldebug_line0+0x6da>
      86:	2f65                	addiw	t5,t5,25
      88:	6874                	ld	a3,208(s0)
      8a:	7269                	lui	tp,0xffffa
      8c:	7064                	ld	s1,224(s0)
      8e:	7261                	lui	tp,0xffff8
HeapMgrGrowable::HeapMgrGrowable(HeapMgr &other,PageMgr &pmgr):pmgr(pmgr),HeapMgr(other),growsize(2){
      90:	7974                	ld	a3,240(a0)
      92:	0000                	unimp
      94:	6c61                	lui	s8,0x18
      96:	6f6c                	ld	a1,216(a4)
      98:	63632e63          	0x63632e63
      9c:	0100                	addi	s0,sp,128
      9e:	0000                	unimp
      a0:	62696c6b          	0x62696c6b
      a4:	682e                	ld	a6,200(sp)
      a6:	0068                	addi	a0,sp,12
      a8:	0002                	c.slli64	zero
      aa:	7600                	ld	s0,40(a2)
      ac:	2e6d                	addiw	t3,t3,27
      ae:	6868                	ld	a0,208(s0)
      b0:	0200                	addi	s0,sp,256
      b2:	0000                	unimp
      b4:	6c61                	lui	s8,0x18
      b6:	6f6c                	ld	a1,216(a4)
      b8:	68682e63          	0x68682e63
        ptr_t rt=(tlsf_malloc(size));
      bc:	0200                	addi	s0,sp,256
      be:	0000                	unimp
      c0:	7974                	ld	a3,240(a0)
      c2:	6570                	ld	a2,200(a0)
      c4:	00682e73          	csrrs	t3,0x6,a6
        if(rt!=nullptr)return rt;
      c8:	0002                	c.slli64	zero
      ca:	7300                	ld	s0,32(a4)
        ptr_t rt=(tlsf_malloc(size));
      cc:	6474                	ld	a3,200(s0)
      ce:	6564                	ld	s1,200(a0)
      d0:	2e66                	fld	ft8,88(sp)
      d2:	0068                	addi	a0,sp,12
      d4:	70000003          	lb	zero,1792(zero) # 700 <.Ldebug_line0+0x700>
}
      d8:	616c                	ld	a1,192(a0)
      da:	6674                	ld	a3,200(a2)
    reservedNode=(klib::ListNode<Span>*)(alloc(sizeof(klib::ListNode<Span>)));
      dc:	2e6d726f          	jal	tp,d73c2 <.LLST42+0xd588c>
}
      e0:	0068                	addi	a0,sp,12
      e2:	0002                	c.slli64	zero
      e4:	6b00                	ld	s0,16(a4)
      e6:	696c                	ld	a1,208(a0)
      e8:	2e62                	fld	ft8,24(sp)
      ea:	0068                	addi	a0,sp,12
HeapMgrGrowable::~HeapMgrGrowable(){
      ec:	0002                	c.slli64	zero
      ee:	7400                	ld	s0,40(s0)
      f0:	736c                	ld	a1,224(a4)
      f2:	2e66                	fld	ft8,88(sp)
    DBG(printf("%s()\n",__func__);)
      f4:	0068                	addi	a0,sp,12
      f6:	0004                	0x4
      f8:	0000                	unimp
      fa:	0105                	addi	sp,sp,1
HeapMgrGrowable::~HeapMgrGrowable(){
      fc:	0900                	addi	s0,sp,144
      fe:	0002                	c.slli64	zero
    DBG(printf("%s()\n",__func__);)
     100:	0000                	unimp
     102:	0000                	unimp
     104:	0000                	unimp
     106:	0300                	addi	s0,sp,384
HeapMgrGrowable::~HeapMgrGrowable(){
     108:	010e                	slli	sp,sp,0x3
     10a:	1505                	addi	a0,a0,-31
     10c:	0306                	slli	t1,t1,0x1
     10e:	0900                	addi	s0,sp,144
     110:	0000                	unimp
     112:	0501                	addi	a0,a0,0
     114:	0601                	addi	a2,a2,0
     116:	00097803          	0x97803
     11a:	0100                	addi	s0,sp,128
    DBG(printf("%s()\n",__func__);)
     11c:	0505                	addi	a0,a0,1
     11e:	00090503          	lb	a0,0(s2)
     122:	0100                	addi	s0,sp,128
        printf("pool=%p\n",pool);
     124:	0105                	addi	sp,sp,1
     126:	0306                	slli	t1,t1,0x1
     128:	0000097b          	0x97b
     12c:	0501                	addi	a0,a0,0
     12e:	0905030f          	0x905030f
     132:	0000                	unimp
     134:	0501                	addi	a0,a0,0
     136:	0605                	addi	a2,a2,1
        tlsf_walk_pool(pool);
     138:	00090103          	lb	sp,0(s2)
     13c:	0100                	addi	s0,sp,128
     13e:	0105                	addi	sp,sp,1
     140:	0306                	slli	t1,t1,0x1
     142:	097a                	slli	s2,s2,0x1e
        if(!dynPages.empty())for(auto node=dynPages.head;node->iter.next!=nullptr;node=node->iter.next){
     144:	0000                	unimp
     146:	0501                	addi	a0,a0,0
     148:	031a                	slli	t1,t1,0x6
     14a:	0906                	slli	s2,s2,0x1
     14c:	0000                	unimp
     14e:	0501                	addi	a0,a0,0
     150:	0601                	addi	a2,a2,0
     152:	00091303          	lh	t1,0(s2)
     156:	0100                	addi	s0,sp,128
            tlsf_walk_pool((ptr_t)vm::pn2addr(node->data.first));
     158:	0306                	slli	t1,t1,0x1
     15a:	0900                	addi	s0,sp,144
     15c:	0000                	unimp
     15e:	0501                	addi	a0,a0,0
     160:	0605                	addi	a2,a2,1
     162:	00096c03          	lwu	s8,0(s2)
        if(!dynPages.empty())for(auto node=dynPages.head;node->iter.next!=nullptr;node=node->iter.next){
     166:	0100                	addi	s0,sp,128
     168:	0f05                	addi	t5,t5,1
     16a:	0306                	slli	t1,t1,0x1
     16c:	0900                	addi	s0,sp,144
     16e:	0000                	unimp
    while(!dynPages.empty()){
     170:	0501                	addi	a0,a0,0
     172:	0605                	addi	a2,a2,1
     174:	00090103          	lb	sp,0(s2)
        DBG(printf("0x%lx %d\n",span.first,span.second);)
     178:	0100                	addi	s0,sp,128
     17a:	1a05                	addi	s4,s4,-31
     17c:	0306                	slli	t1,t1,0x1
     17e:	0900                	addi	s0,sp,144
     180:	0000                	unimp
     182:	0501                	addi	a0,a0,0
    head=head->iter.next;
     184:	0301                	addi	t1,t1,0
     186:	00000913          	li	s2,0
     18a:	0501                	addi	a0,a0,0
    delete head;
     18c:	031a                	slli	t1,t1,0x6
     18e:	096d                	addi	s2,s2,27
void HeapMgr::free(ptr_t ptr){ tlsf_free(ptr); }
     190:	0000                	unimp
     192:	0501                	addi	a0,a0,0
     194:	036e                	slli	t1,t1,0x1b
     196:	00000913          	li	s2,0
        DBG(printf("0x%lx %d\n",span.first,span.second);)
     19a:	0401                	addi	s0,s0,0
     19c:	0502                	c.slli64	a0
     19e:	0312                	slli	t1,t1,0x4
     1a0:	0920                	addi	s0,sp,152
     1a2:	0000                	unimp
     1a4:	0401                	addi	s0,s0,0
     1a6:	0501                	addi	a0,a0,0
     1a8:	036e                	slli	t1,t1,0x1b
     1aa:	0960                	addi	s0,sp,156
    while(!dynPages.empty()){
     1ac:	0000                	unimp
     1ae:	0501                	addi	a0,a0,0
     1b0:	0605                	addi	a2,a2,1
     1b2:	00090103          	lb	sp,0(s2)
    if(head==tail)tail=nullptr;
     1b6:	0100                	addi	s0,sp,128
    T rt=head->data;
     1b8:	1a05                	addi	s4,s4,-31
     1ba:	00091603          	lh	a2,0(s2)
     1be:	0100                	addi	s0,sp,128
    if(head==tail)tail=nullptr;
     1c0:	0905                	addi	s2,s2,1
     1c2:	00090103          	lb	sp,0(s2)
     1c6:	0100                	addi	s0,sp,128
     1c8:	1e05                	addi	t3,t3,-31
     1ca:	0306                	slli	t1,t1,0x1
}
     1cc:	0900                	addi	s0,sp,144
     1ce:	0000                	unimp
     1d0:	0501                	addi	a0,a0,0
     1d2:	0609                	addi	a2,a2,2
     1d4:	00090103          	lb	sp,0(s2)
     1d8:	0100                	addi	s0,sp,128
     1da:	00090103          	lb	sp,0(s2)
     1de:	0100                	addi	s0,sp,128
     1e0:	0505                	addi	a0,a0,1
     1e2:	00097d03          	0x97d03
     1e6:	0100                	addi	s0,sp,128
     1e8:	1a05                	addi	s4,s4,-31
     1ea:	00090003          	lb	zero,0(s2)
ptr_t HeapMgr::alloc(xlen_t size){
     1ee:	0100                	addi	s0,sp,128
        ptr_t rt=(tlsf_malloc(size));
     1f0:	0905                	addi	s2,s2,1
     1f2:	00090103          	lb	sp,0(s2)
ptr_t HeapMgr::alloc(xlen_t size){
     1f6:	0100                	addi	s0,sp,128
     1f8:	1e05                	addi	t3,t3,-31
     1fa:	0306                	slli	t1,t1,0x1
     1fc:	0900                	addi	s0,sp,144
     1fe:	0000                	unimp
        ptr_t rt=(tlsf_malloc(size));
     200:	0501                	addi	a0,a0,0
     202:	0609                	addi	a2,a2,2
     204:	00090103          	lb	sp,0(s2)
        if(rt!=nullptr)return rt;
     208:	0100                	addi	s0,sp,128
     20a:	0105                	addi	sp,sp,1
        ptr_t rt=(tlsf_malloc(size));
     20c:	0306                	slli	t1,t1,0x1
     20e:	0969                	addi	s2,s2,26
}
     210:	0000                	unimp
     212:	0501                	addi	a0,a0,0
     214:	0311                	addi	t1,t1,4
     216:	0000097f          	radd16	s2,zero,zero
     21a:	0501                	addi	a0,a0,0
        ptr_t rt=(tlsf_malloc(size));
     21c:	0301                	addi	t1,t1,0
     21e:	0901                	addi	s2,s2,0
     220:	0000                	unimp
     222:	0601                	addi	a2,a2,0
}
     224:	00090103          	lb	sp,0(s2)
     228:	0100                	addi	s0,sp,128
     22a:	6405                	lui	s0,0x1
     22c:	0306                	slli	t1,t1,0x1
     22e:	0900                	addi	s0,sp,144
     230:	0000                	unimp
     232:	0501                	addi	a0,a0,0
ptr_t HeapMgr::alligned_alloc(xlen_t size,xlen_t alignment){
     234:	0301                	addi	t1,t1,0
     236:	0900                	addi	s0,sp,144
        ptr_t rt=(tlsf_memalign(alignment,size));
     238:	0000                	unimp
     23a:	0501                	addi	a0,a0,0
ptr_t HeapMgr::alligned_alloc(xlen_t size,xlen_t alignment){
     23c:	0364                	addi	s1,sp,396
     23e:	0900                	addi	s0,sp,144
     240:	0000                	unimp
     242:	0501                	addi	a0,a0,0
     244:	0301                	addi	t1,t1,0
     246:	0900                	addi	s0,sp,144
     248:	0000                	unimp
     24a:	0501                	addi	a0,a0,0
     24c:	0364                	addi	s1,sp,396
     24e:	0900                	addi	s0,sp,144
        ptr_t rt=(tlsf_memalign(alignment,size));
     250:	0000                	unimp
     252:	0401                	addi	s0,s0,0
     254:	0502                	c.slli64	a0
     256:	0312                	slli	t1,t1,0x4
        if(rt!=nullptr)return rt;
     258:	091d                	addi	s2,s2,7
     25a:	0000                	unimp
        ptr_t rt=(tlsf_memalign(alignment,size));
     25c:	0401                	addi	s0,s0,0
     25e:	0501                	addi	a0,a0,0
}
     260:	0364                	addi	s1,sp,396
     262:	00000963          	beqz	zero,274 <.Ldebug_line0+0x274>
     266:	0501                	addi	a0,a0,0
        ptr_t rt=(tlsf_memalign(alignment,size));
     268:	0605                	addi	a2,a2,1
     26a:	00090103          	lb	sp,0(s2)
}
     26e:	0100                	addi	s0,sp,128
     270:	1a05                	addi	s4,s4,-31
     272:	00091303          	lh	t1,0(s2)
        ptr_t rt=(tlsf_memalign(alignment,size));
     276:	0100                	addi	s0,sp,128
     278:	0905                	addi	s2,s2,1
     27a:	00090103          	lb	sp,0(s2)
}
     27e:	0100                	addi	s0,sp,128
     280:	1e05                	addi	t3,t3,-31
     282:	0306                	slli	t1,t1,0x1
     284:	0900                	addi	s0,sp,144
     286:	0000                	unimp
     288:	0501                	addi	a0,a0,0
     28a:	0609                	addi	a2,a2,2
     28c:	00090103          	lb	sp,0(s2)
void HeapMgr::free(ptr_t ptr){ tlsf_free(ptr); }
     290:	0100                	addi	s0,sp,128
     292:	00090103          	lb	sp,0(s2)
     296:	0100                	addi	s0,sp,128
     298:	0505                	addi	a0,a0,1
     29a:	00097d03          	0x97d03
PageMgr::~PageMgr(){ delete[] buddyNodes; }
     29e:	0100                	addi	s0,sp,128
     2a0:	1a05                	addi	s4,s4,-31
     2a2:	00090003          	lb	zero,0(s2)
     2a6:	0100                	addi	s0,sp,128
     2a8:	0905                	addi	s2,s2,1
     2aa:	00090103          	lb	sp,0(s2)
void HeapMgr::free(ptr_t ptr){ tlsf_free(ptr); }
     2ae:	0100                	addi	s0,sp,128
     2b0:	1e05                	addi	t3,t3,-31
     2b2:	0306                	slli	t1,t1,0x1
PageMgr::~PageMgr(){ delete[] buddyNodes; }
     2b4:	0900                	addi	s0,sp,144
     2b6:	0000                	unimp
     2b8:	0501                	addi	a0,a0,0
     2ba:	0609                	addi	a2,a2,2
     2bc:	00090103          	lb	sp,0(s2)
     2c0:	0100                	addi	s0,sp,128
     2c2:	0105                	addi	sp,sp,1
PageNum PageMgr::alloc(size_t pages){
     2c4:	0306                	slli	t1,t1,0x1
     2c6:	096c                	addi	a1,sp,156
     2c8:	0000                	unimp
     2ca:	0501                	addi	a0,a0,0
     2cc:	0311                	addi	t1,t1,4
     2ce:	0000097f          	radd16	s2,zero,zero
     2d2:	0501                	addi	a0,a0,0
     2d4:	0301                	addi	t1,t1,0
     2d6:	0901                	addi	s2,s2,0
     2d8:	0000                	unimp
     2da:	0601                	addi	a2,a2,0
     2dc:	00090103          	lb	sp,0(s2)
     2e0:	0100                	addi	s0,sp,128
     2e2:	0505                	addi	a0,a0,1
     2e4:	00090103          	lb	sp,0(s2)
    for(i=0;a>1;a>>=1,i++)r|=a&1;
     2e8:	0100                	addi	s0,sp,128
     2ea:	00090003          	lb	zero,0(s2)
     2ee:	0100                	addi	s0,sp,128
     2f0:	0105                	addi	sp,sp,1
     2f2:	0306                	slli	t1,t1,0x1
    int i=0,r=0;
     2f4:	0000097f          	radd16	s2,zero,zero
    for(i=0;a>1;a>>=1,i++)r|=a&1;
     2f8:	0501                	addi	a0,a0,0
     2fa:	0305                	addi	t1,t1,1
     2fc:	0901                	addi	s2,s2,0
     2fe:	0000                	unimp
     300:	0501                	addi	a0,a0,0
     302:	0301                	addi	t1,t1,0
     304:	0000097f          	radd16	s2,zero,zero
     308:	0501                	addi	a0,a0,0
     30a:	0305                	addi	t1,t1,1
     30c:	0901                	addi	s2,s2,0
     30e:	0000                	unimp
     310:	0501                	addi	a0,a0,0
     312:	0301                	addi	t1,t1,0
     314:	0000097f          	radd16	s2,zero,zero
     318:	0501                	addi	a0,a0,0
     31a:	0305                	addi	t1,t1,1
    if(buddyNodes[0]<rounded) return 0;
     31c:	0901                	addi	s2,s2,0
     31e:	0000                	unimp
     320:	0501                	addi	a0,a0,0
     322:	0609                	addi	a2,a2,2
     324:	00090203          	lb	tp,0(s2)
     328:	0100                	addi	s0,sp,128
     32a:	0f05                	addi	t5,t5,1
    for(xlen_t nd=0,size=rootOrder+1;rounded<=size;size-=1){ // find suitable node; size is biased size
     32c:	0306                	slli	t1,t1,0x1
     32e:	0900                	addi	s0,sp,144
     330:	0000                	unimp
     332:	0501                	addi	a0,a0,0
     334:	0609                	addi	a2,a2,2
     336:	00090103          	lb	sp,0(s2)
    xlen_t node=0;
     33a:	0100                	addi	s0,sp,128
        DBG(printf("nd=%ld ",nd);)
     33c:	1705                	addi	a4,a4,-31
     33e:	0306                	slli	t1,t1,0x1
     340:	0900                	addi	s0,sp,144
     342:	0000                	unimp
     344:	0501                	addi	a0,a0,0
     346:	0609                	addi	a2,a2,2
     348:	00090103          	lb	sp,0(s2)
     34c:	0100                	addi	s0,sp,128
     34e:	1b05                	addi	s6,s6,-31
     350:	0306                	slli	t1,t1,0x1
     352:	0900                	addi	s0,sp,144
        if(buddyNodes[nd]==size && buddyNodes[nd]==rounded) node=nd;
     354:	0000                	unimp
     356:	0501                	addi	a0,a0,0
     358:	0309                	addi	t1,t1,2
     35a:	0900                	addi	s0,sp,144
     35c:	0000                	unimp
     35e:	0501                	addi	a0,a0,0
     360:	0649                	addi	a2,a2,18
     362:	00090003          	lb	zero,0(s2)
        inline constexpr xlen_t lsub(xlen_t x){return ((x+1)<<1)-1;}
     366:	0100                	addi	s0,sp,128
     368:	0d05                	addi	s10,s10,1
     36a:	0200                	addi	s0,sp,256
     36c:	0304                	addi	s1,sp,384
     36e:	00090103          	lb	sp,0(s2)
                if(klib::min(buddyNodes[lsub(nd)],buddyNodes[rsub(nd)])>=rounded)
     372:	0100                	addi	s0,sp,128
     374:	0304                	addi	s1,sp,384
     376:	2705                	addiw	a4,a4,1
     378:	0200                	addi	s0,sp,256
     37a:	0304                	addi	s1,sp,384
     37c:	00096203          	lwu	tp,0(s2)
     380:	0100                	addi	s0,sp,128
     382:	3205                	addiw	tp,tp,-31
     384:	0200                	addi	s0,sp,256
     386:	0304                	addi	s1,sp,384
     388:	0306                	slli	t1,t1,0x1
     38a:	0900                	addi	s0,sp,144
     38c:	0000                	unimp
     38e:	0401                	addi	s0,s0,0
                    nd=buddyNodes[lsub(nd)]<buddyNodes[rsub(nd)]?lsub(nd):rsub(nd);
     390:	0501                	addi	a0,a0,0
     392:	0402001b          	addiw	zero,tp,64
    for(xlen_t nd=0,size=rootOrder+1;rounded<=size;size-=1){ // find suitable node; size is biased size
     396:	091e0303          	lb	t1,145(t3) # 1a091 <.LLST42+0x1855b>
     39a:	0000                	unimp
    assert(node>0);
     39c:	0501                	addi	a0,a0,0
     39e:	001e                	c.slli	zero,0x7
     3a0:	0402                	c.slli64	s0
     3a2:	7f030603          	lb	a2,2032(t1) # 1d7f0 <.LLST42+0x1bcba>
     3a6:	0009                	c.nop	2
     3a8:	0100                	addi	s0,sp,128
     3aa:	5705                	li	a4,-31
    buddyNodes[node]=0;
     3ac:	0200                	addi	s0,sp,256
     3ae:	0304                	addi	s1,sp,384
     3b0:	0306                	slli	t1,t1,0x1
     3b2:	0900                	addi	s0,sp,144
     3b4:	0000                	unimp
     3b6:	0501                	addi	a0,a0,0
    for(xlen_t nd=prnt(node);nd>0;nd=prnt(nd))
     3b8:	0049                	c.nop	18
     3ba:	0402                	c.slli64	s0
        buddyNodes[nd]=klib::max(buddyNodes[lsub(nd)],buddyNodes[rsub(nd)]);
     3bc:	00030603          	lb	a2,0(t1)
     3c0:	0009                	c.nop	2
     3c2:	0100                	addi	s0,sp,128
     3c4:	0505                	addi	a0,a0,1
     3c6:	00090403          	lb	s0,0(s2)
     3ca:	0100                	addi	s0,sp,128
     3cc:	0b05                	addi	s6,s6,1
     3ce:	00090003          	lb	zero,0(s2)
     3d2:	0100                	addi	s0,sp,128
        inline constexpr xlen_t prnt(xlen_t x){return ((x+1)>>1)-1;}
     3d4:	1a05                	addi	s4,s4,-31
     3d6:	0306                	slli	t1,t1,0x1
     3d8:	0900                	addi	s0,sp,144
     3da:	0000                	unimp
     3dc:	0501                	addi	a0,a0,0
     3de:	0900030b          	0x900030b
     3e2:	0000                	unimp
     3e4:	0501                	addi	a0,a0,0
     3e6:	0309                	addi	t1,t1,2
     3e8:	00000903          	lb	s2,0(zero) # 0 <.Ldebug_line0>
    for(xlen_t nd=prnt(node);nd>0;nd=prnt(nd))
     3ec:	0401                	addi	s0,s0,0
     3ee:	0502                	c.slli64	a0
    buddyNodes[0]=klib::max(buddyNodes[lsub(0)],buddyNodes[rsub(0)]);
     3f0:	0315                	addi	t1,t1,5
     3f2:	092e                	slli	s2,s2,0xb
     3f4:	0000                	unimp
     3f6:	0501                	addi	a0,a0,0
     3f8:	0305                	addi	t1,t1,1
     3fa:	0900                	addi	s0,sp,144
     3fc:	0000                	unimp
     3fe:	0301                	addi	t1,t1,0
     400:	0901                	addi	s2,s2,0
     402:	0000                	unimp
    PageNum ppn=start+(node+1-(1l<<(rootOrder+1-rounded)))*(1l<<(rounded-1));//((node+1)*rounded-(1l<<rootOrder));
     404:	0401                	addi	s0,s0,0
     406:	0604                	addi	s1,sp,768
     408:	00097603          	0x97603
     40c:	0100                	addi	s0,sp,128
     40e:	0104                	addi	s1,sp,128
     410:	2005                	0x2005
     412:	00097003          	0x97003
     416:	0100                	addi	s0,sp,128
     418:	2905                	addiw	s2,s2,1
     41a:	0306                	slli	t1,t1,0x1
     41c:	0900                	addi	s0,sp,144
     41e:	0000                	unimp
     420:	0501                	addi	a0,a0,0
     422:	0609                	addi	a2,a2,2
     424:	00096b03          	lwu	s6,0(s2)
     428:	0100                	addi	s0,sp,128
     42a:	00090003          	lb	zero,0(s2)
    DBG(
     42e:	0100                	addi	s0,sp,128
     430:	0505                	addi	a0,a0,1
     432:	00097d03          	0x97d03
     436:	0100                	addi	s0,sp,128
     438:	0b05                	addi	s6,s6,1
     43a:	00090003          	lb	zero,0(s2)
     43e:	0100                	addi	s0,sp,128
     440:	1a05                	addi	s4,s4,-31
     442:	0306                	slli	t1,t1,0x1
    assert(ppn<end);
     444:	0900                	addi	s0,sp,144
     446:	0000                	unimp
     448:	0501                	addi	a0,a0,0
     44a:	0900030b          	0x900030b
}
     44e:	0000                	unimp
     450:	0501                	addi	a0,a0,0
     452:	0609                	addi	a2,a2,2
     454:	00090103          	lb	sp,0(s2)
     458:	0100                	addi	s0,sp,128
     45a:	0204                	addi	s1,sp,256
     45c:	0505                	addi	a0,a0,1
     45e:	0306                	slli	t1,t1,0x1
     460:	0000092f          	0x92f
     464:	0501                	addi	a0,a0,0
     466:	097f0307          	0x97f0307
     46a:	0000                	unimp
     46c:	0501                	addi	a0,a0,0
     46e:	0305                	addi	t1,t1,1
     470:	0901                	addi	s2,s2,0
     472:	0000                	unimp
     474:	0501                	addi	a0,a0,0
     476:	09000313          	li	t1,144
                    nd=buddyNodes[lsub(nd)]>buddyNodes[rsub(nd)]?lsub(nd):rsub(nd);
     47a:	0000                	unimp
    for(xlen_t nd=0,size=rootOrder+1;rounded<=size;size-=1){ // find suitable node; size is biased size
     47c:	0401                	addi	s0,s0,0
     47e:	0501                	addi	a0,a0,0
                    nd=buddyNodes[lsub(nd)]>buddyNodes[rsub(nd)]?lsub(nd):rsub(nd);
     480:	0301                	addi	t1,t1,0
     482:	0955                	addi	s2,s2,21
    for(xlen_t nd=0,size=rootOrder+1;rounded<=size;size-=1){ // find suitable node; size is biased size
     484:	0000                	unimp
     486:	0501                	addi	a0,a0,0
     488:	0622                	slli	a2,a2,0x8
     48a:	00090203          	lb	tp,0(s2)
        if(buddyNodes[nd]==size && buddyNodes[nd]==rounded) node=nd;
     48e:	0100                	addi	s0,sp,128
     490:	0505                	addi	a0,a0,1
     492:	00090103          	lb	sp,0(s2)
        inline constexpr xlen_t rsub(xlen_t x){return ((x+1)<<1);}
     496:	0100                	addi	s0,sp,128
     498:	1a05                	addi	s4,s4,-31
     49a:	00090003          	lb	zero,0(s2)
                buddyNodes[lsub(nd)]=buddyNodes[rsub(nd)]=size-1;
     49e:	0100                	addi	s0,sp,128
     4a0:	0905                	addi	s2,s2,1
     4a2:	00090103          	lb	sp,0(s2)
     4a6:	0100                	addi	s0,sp,128
     4a8:	2205                	addiw	tp,tp,1
     4aa:	0306                	slli	t1,t1,0x1
     4ac:	097e                	slli	s2,s2,0x1f
     4ae:	0000                	unimp
        inline constexpr xlen_t lsub(xlen_t x){return ((x+1)<<1)-1;}
     4b0:	0501                	addi	a0,a0,0
     4b2:	031e                	slli	t1,t1,0x7
    for(xlen_t nd=0,size=rootOrder+1;rounded<=size;size-=1){ // find suitable node; size is biased size
     4b4:	0902                	c.slli64	s2
     4b6:	0000                	unimp
                buddyNodes[lsub(nd)]=buddyNodes[rsub(nd)]=size-1;
     4b8:	0501                	addi	a0,a0,0
     4ba:	0322                	slli	t1,t1,0x8
     4bc:	097e                	slli	s2,s2,0x1f
     4be:	0000                	unimp
    for(xlen_t nd=0,size=rootOrder+1;rounded<=size;size-=1){ // find suitable node; size is biased size
     4c0:	0301                	addi	t1,t1,0
     4c2:	0900                	addi	s0,sp,144
     4c4:	0000                	unimp
     4c6:	0501                	addi	a0,a0,0
     4c8:	031e                	slli	t1,t1,0x7
     4ca:	0902                	c.slli64	s2
     4cc:	0000                	unimp
     4ce:	0501                	addi	a0,a0,0
     4d0:	0609                	addi	a2,a2,2
     4d2:	00090103          	lb	sp,0(s2)
     4d6:	0100                	addi	s0,sp,128
    buddyNodes[0]=klib::max(buddyNodes[lsub(0)],buddyNodes[rsub(0)]);
     4d8:	00090103          	lb	sp,0(s2)
     4dc:	0100                	addi	s0,sp,128
     4de:	0505                	addi	a0,a0,1
    assert(ppn<end);
     4e0:	00097d03          	0x97d03
     4e4:	0100                	addi	s0,sp,128
     4e6:	1a05                	addi	s4,s4,-31
     4e8:	00090003          	lb	zero,0(s2)
     4ec:	0100                	addi	s0,sp,128
     4ee:	0905                	addi	s2,s2,1
     4f0:	00090103          	lb	sp,0(s2)
     4f4:	0100                	addi	s0,sp,128
     4f6:	1e05                	addi	t3,t3,-31
     4f8:	0306                	slli	t1,t1,0x1
     4fa:	0900                	addi	s0,sp,144
     4fc:	0000                	unimp
     4fe:	0501                	addi	a0,a0,0
     500:	0301                	addi	t1,t1,0
     502:	0905                	addi	s2,s2,1
     504:	0000                	unimp
     506:	0501                	addi	a0,a0,0
     508:	031e                	slli	t1,t1,0x7
     50a:	0000097b          	0x97b
    for(xlen_t nd=0,size=rootOrder+1;rounded<=size;size-=1){ // find suitable node; size is biased size
     50e:	0501                	addi	a0,a0,0
    assert(node>0);
     510:	0301                	addi	t1,t1,0
     512:	0905                	addi	s2,s2,1
     514:	0000                	unimp
     516:	0501                	addi	a0,a0,0
     518:	063c                	addi	a5,sp,776
     51a:	00090203          	lb	tp,0(s2)
     51e:	0100                	addi	s0,sp,128
     520:	0505                	addi	a0,a0,1
     522:	00090103          	lb	sp,0(s2)
     526:	0100                	addi	s0,sp,128
     528:	1a05                	addi	s4,s4,-31
     52a:	00090003          	lb	zero,0(s2)
     52e:	0100                	addi	s0,sp,128
     530:	0905                	addi	s2,s2,1
     532:	00090103          	lb	sp,0(s2)
     536:	0100                	addi	s0,sp,128
     538:	3c05                	addiw	s8,s8,-31
     53a:	0306                	slli	t1,t1,0x1
     53c:	097e                	slli	s2,s2,0x1f
     53e:	0000                	unimp
     540:	0501                	addi	a0,a0,0
     542:	0320                	addi	s0,sp,392
     544:	0902                	c.slli64	s2
     546:	0000                	unimp
     548:	0501                	addi	a0,a0,0
     54a:	033c                	addi	a5,sp,392
    DBG(
     54c:	097e                	slli	s2,s2,0x1f
     54e:	0000                	unimp
void HeapMgrGrowable::growHeap(){
     550:	0301                	addi	t1,t1,0
     552:	0900                	addi	s0,sp,144
     554:	0000                	unimp
     556:	0501                	addi	a0,a0,0
    DBG(
     558:	0320                	addi	s0,sp,392
     55a:	0902                	c.slli64	s2
     55c:	0000                	unimp
     55e:	0501                	addi	a0,a0,0
void HeapMgrGrowable::growHeap(){
     560:	0609                	addi	a2,a2,2
     562:	00090103          	lb	sp,0(s2)
    DBG(
     566:	0100                	addi	s0,sp,128
     568:	00090103          	lb	sp,0(s2)
void HeapMgrGrowable::growHeap(){
     56c:	0100                	addi	s0,sp,128
     56e:	0505                	addi	a0,a0,1
     570:	00097d03          	0x97d03
    DBG(
     574:	0100                	addi	s0,sp,128
     576:	1a05                	addi	s4,s4,-31
     578:	00090003          	lb	zero,0(s2)
    Span newSpan={pmgr.alloc(growsize),growsize};
     57c:	0100                	addi	s0,sp,128
     57e:	0905                	addi	s2,s2,1
     580:	00090103          	lb	sp,0(s2)
     584:	0100                	addi	s0,sp,128
     586:	2005                	0x2005
     588:	0306                	slli	t1,t1,0x1
     58a:	0900                	addi	s0,sp,144
     58c:	0000                	unimp
     58e:	0501                	addi	a0,a0,0
    reservedNode->data=newSpan;
     590:	0301                	addi	t1,t1,0
     592:	0905                	addi	s2,s2,1
     594:	0000                	unimp
     596:	0501                	addi	a0,a0,0
     598:	0320                	addi	s0,sp,392
     59a:	0000097b          	0x97b
     59e:	0501                	addi	a0,a0,0
    tlsf_add_pool(newPool,growsize*vm::pageSize);
     5a0:	0301                	addi	t1,t1,0
     5a2:	0905                	addi	s2,s2,1
     5a4:	0000                	unimp
     5a6:	0501                	addi	a0,a0,0
     5a8:	0320                	addi	s0,sp,392
     5aa:	0000097b          	0x97b
     5ae:	0501                	addi	a0,a0,0
    if(tail)
     5b0:	0301                	addi	t1,t1,0
     5b2:	0905                	addi	s2,s2,1
    dynPages.push_back(reservedNode);
     5b4:	0000                	unimp
     5b6:	0501                	addi	a0,a0,0
     5b8:	061e                	slli	a2,a2,0x7
     5ba:	00090103          	lb	sp,0(s2)
    nd->iter.next=cur->iter.next;
     5be:	0100                	addi	s0,sp,128
     5c0:	2005                	0x2005
     5c2:	00090003          	lb	zero,0(s2)
    cur->iter.next=nd;
     5c6:	0100                	addi	s0,sp,128
      list::insertAfter(tail,newNode),tail=newNode;
     5c8:	2905                	addiw	s2,s2,1
     5ca:	0306                	slli	t1,t1,0x1
        ptr_t rt=(tlsf_malloc(size));
     5cc:	0900                	addi	s0,sp,144
     5ce:	0000                	unimp
     5d0:	0501                	addi	a0,a0,0
     5d2:	0601                	addi	a2,a2,0
     5d4:	00093003          	ld	zero,0(s2)
     5d8:	0100                	addi	s0,sp,128
     5da:	1605                	addi	a2,a2,-31
        if(rt!=nullptr)return rt;
     5dc:	00090003          	lb	zero,0(s2)
        ptr_t rt=(tlsf_malloc(size));
     5e0:	0100                	addi	s0,sp,128
     5e2:	1f05                	addi	t5,t5,-31
     5e4:	0306                	slli	t1,t1,0x1
     5e6:	0900                	addi	s0,sp,144
     5e8:	0000                	unimp
     5ea:	0501                	addi	a0,a0,0
     5ec:	0329                	addi	t1,t1,10
     5ee:	0900                	addi	s0,sp,144
    reservedNode=(klib::ListNode<Span>*)(alloc(sizeof(klib::ListNode<Span>)));
     5f0:	0000                	unimp
     5f2:	0401                	addi	s0,s0,0
    DBG(
     5f4:	0504                	addi	s1,sp,640
     5f6:	0005                	c.nop	1
     5f8:	0402                	c.slli64	s0
     5fa:	0601                	addi	a2,a2,0
     5fc:	00096303          	lwu	t1,0(s2)
     600:	0100                	addi	s0,sp,128
     602:	0104                	addi	s1,sp,128
     604:	2005                	0x2005
     606:	0200                	addi	s0,sp,256
}
     608:	0104                	addi	s1,sp,128
     60a:	00096d03          	lwu	s10,0(s2)
     60e:	0100                	addi	s0,sp,128
    DBG(
     610:	0105                	addi	sp,sp,1
     612:	0200                	addi	s0,sp,256
}
     614:	0104                	addi	s1,sp,128
     616:	0306                	slli	t1,t1,0x1
     618:	0930                	addi	a2,sp,152
     61a:	0000                	unimp
    DBG(
     61c:	0501                	addi	a0,a0,0
     61e:	0029                	c.nop	10
     620:	0402                	c.slli64	s0
     622:	0301                	addi	t1,t1,0
      head=tail=newNode;
     624:	0950                	addi	a2,sp,148
     626:	0000                	unimp
     628:	0501                	addi	a0,a0,0
     62a:	0402002b          	0x402002b
     62e:	0301                	addi	t1,t1,0
PageNum PageMgr::free(PageNum ppn,int order){
     630:	0930                	addi	a2,sp,152
     632:	0000                	unimp
     634:	0501                	addi	a0,a0,0
     636:	0625                	addi	a2,a2,9
    xlen_t idx=pos2node(ppn-start,order);
     638:	00090203          	lb	tp,0(s2)
            DBG(assert(((pos>>rootOrder)&1)==0);)
     63c:	0100                	addi	s0,sp,128
     63e:	0505                	addi	a0,a0,1
PageNum PageMgr::free(PageNum ppn,int order){
     640:	00090103          	lb	sp,0(s2)
    xlen_t idx=pos2node(ppn-start,order);
     644:	0100                	addi	s0,sp,128
     646:	0204                	addi	s1,sp,256
     648:	097f9503          	lh	a0,151(t6)
PageNum PageMgr::free(PageNum ppn,int order){
     64c:	0000                	unimp
     64e:	0301                	addi	t1,t1,0
     650:	0901                	addi	s2,s2,0
     652:	0000                	unimp
     654:	0501                	addi	a0,a0,0
     656:	030e                	slli	t1,t1,0x3
     658:	0900                	addi	s0,sp,144
     65a:	0000                	unimp
     65c:	0401                	addi	s0,s0,0
     65e:	0501                	addi	a0,a0,0
     660:	0625                	addi	a2,a2,9
     662:	0900e903          	lwu	s2,144(ra)
     666:	0000                	unimp
     668:	0401                	addi	s0,s0,0
     66a:	0502                	c.slli64	a0
     66c:	030e                	slli	t1,t1,0x3
     66e:	00097f97          	auipc	t6,0x97
     672:	0100                	addi	s0,sp,128
            for(int size=rootOrder-1;size>=order;size-=1){
     674:	0104                	addi	s1,sp,128
     676:	2505                	addiw	a0,a0,1
     678:	0900e903          	lwu	s2,144(ra)
     67c:	0000                	unimp
     67e:	0401                	addi	s0,s0,0
     680:	0502                	c.slli64	a0
     682:	030e                	slli	t1,t1,0x3
            xlen_t nd=0;
     684:	00097f97          	auipc	t6,0x97
     688:	0100                	addi	s0,sp,128
     68a:	0d05                	addi	s10,s10,1
            for(int size=rootOrder-1;size>=order;size-=1){
     68c:	00097f03          	0x97f03
     690:	0100                	addi	s0,sp,128
     692:	0a05                	addi	s4,s4,1
                if((pos>>size)&1)nd=rsub(nd);
     694:	00090103          	lb	sp,0(s2)
            for(int size=rootOrder-1;size>=order;size-=1){
     698:	0100                	addi	s0,sp,128
     69a:	0e05                	addi	t3,t3,1
                if((pos>>size)&1)nd=rsub(nd);
     69c:	00090003          	lb	zero,0(s2)
     6a0:	0100                	addi	s0,sp,128
     6a2:	1b05                	addi	s6,s6,-31
     6a4:	0306                	slli	t1,t1,0x1
     6a6:	0900                	addi	s0,sp,144
     6a8:	0000                	unimp
     6aa:	0501                	addi	a0,a0,0
     6ac:	061f 0003 0009      	0x90003061f
            for(int size=rootOrder-1;size>=order;size-=1){
     6b2:	0100                	addi	s0,sp,128
        inline constexpr xlen_t lsub(xlen_t x){return ((x+1)<<1)-1;}
     6b4:	1205                	addi	tp,tp,-31
     6b6:	00090003          	lb	zero,0(s2)
     6ba:	0100                	addi	s0,sp,128
            for(int size=rootOrder-1;size>=order;size-=1){
     6bc:	1c05                	addi	s8,s8,-31
     6be:	00090003          	lb	zero,0(s2)
    DBG(printf("PageMgr::free(pos=%ld order=%d) idx=0x%lx\n",ppn-start,order,idx);)
     6c2:	0100                	addi	s0,sp,128
     6c4:	0505                	addi	a0,a0,1
     6c6:	0306                	slli	t1,t1,0x1
     6c8:	0900                	addi	s0,sp,144
     6ca:	0000                	unimp
     6cc:	0501                	addi	a0,a0,0
     6ce:	030e                	slli	t1,t1,0x3
     6d0:	0900                	addi	s0,sp,144
     6d2:	0000                	unimp
     6d4:	0501                	addi	a0,a0,0
     6d6:	0305                	addi	t1,t1,1
    buddyNodes[idx]=order+1;
     6d8:	0901                	addi	s2,s2,0
     6da:	0000                	unimp
        inline constexpr xlen_t prnt(xlen_t x){return ((x+1)>>1)-1;}
     6dc:	0401                	addi	s0,s0,0
     6de:	0301                	addi	t1,t1,0
     6e0:	00ea                	slli	ra,ra,0x1a
     6e2:	0009                	c.nop	2
     6e4:	0100                	addi	s0,sp,128
     6e6:	1405                	addi	s0,s0,-31
     6e8:	0306                	slli	t1,t1,0x1
     6ea:	0900                	addi	s0,sp,144
    for(idx=prnt(idx);idx>0;idx=prnt(idx)){
     6ec:	0000                	unimp
     6ee:	0501                	addi	a0,a0,0
        buddyNodes[idx]=buddyNodes[lsub(idx)]==buddyNodes[rsub(idx)]?buddyNodes[lsub(idx)]+1:klib::max(buddyNodes[lsub(idx)],buddyNodes[rsub(idx)]); // the free'd leaf node ensures lsub or rsub being not null
     6f0:	0326                	slli	t1,t1,0x9
     6f2:	0900                	addi	s0,sp,144
        inline constexpr xlen_t lsub(xlen_t x){return ((x+1)<<1)-1;}
     6f4:	0000                	unimp
     6f6:	0501                	addi	a0,a0,0
     6f8:	0305                	addi	t1,t1,1
     6fa:	0900                	addi	s0,sp,144
     6fc:	0000                	unimp
     6fe:	0601                	addi	a2,a2,0
     700:	00090103          	lb	sp,0(s2)
     704:	0100                	addi	s0,sp,128
     706:	00090103          	lb	sp,0(s2)
     70a:	0100                	addi	s0,sp,128
        inline constexpr xlen_t rsub(xlen_t x){return ((x+1)<<1);}
     70c:	1505                	addi	a0,a0,-31
     70e:	0306                	slli	t1,t1,0x1
     710:	0900                	addi	s0,sp,144
     712:	0000                	unimp
     714:	0501                	addi	a0,a0,0
     716:	062d                	addi	a2,a2,11
     718:	00090003          	lb	zero,0(s2)
     71c:	0100                	addi	s0,sp,128
     71e:	0c05                	addi	s8,s8,1
        inline constexpr xlen_t prnt(xlen_t x){return ((x+1)>>1)-1;}
     720:	0306                	slli	t1,t1,0x1
     722:	0000097f          	radd16	s2,zero,zero
     726:	0501                	addi	a0,a0,0
     728:	0309                	addi	t1,t1,2
     72a:	0902                	c.slli64	s2
    for(idx=prnt(idx);idx>0;idx=prnt(idx)){
     72c:	0000                	unimp
     72e:	0601                	addi	a2,a2,0
    buddyNodes[0]=klib::max(buddyNodes[lsub(0)],buddyNodes[rsub(0)]);
     730:	00090003          	lb	zero,0(s2)
     734:	0100                	addi	s0,sp,128
     736:	00090003          	lb	zero,0(s2)
     73a:	0100                	addi	s0,sp,128
     73c:	00090103          	lb	sp,0(s2)
     740:	0100                	addi	s0,sp,128
     742:	0c05                	addi	s8,s8,1
        buddyNodes[idx]=buddyNodes[lsub(idx)]==buddyNodes[rsub(idx)]?buddyNodes[lsub(idx)]+1:klib::max(buddyNodes[lsub(idx)],buddyNodes[rsub(idx)]); // the free'd leaf node ensures lsub or rsub being not null
     744:	0306                	slli	t1,t1,0x1
     746:	0900                	addi	s0,sp,144
     748:	0000                	unimp
     74a:	0501                	addi	a0,a0,0
     74c:	0319                	addi	t1,t1,6
     74e:	0900                	addi	s0,sp,144
            DBG(assert(((pos>>rootOrder)&1)==0);)
     750:	0000                	unimp
     752:	0501                	addi	a0,a0,0
     754:	0309                	addi	t1,t1,2
     756:	0900                	addi	s0,sp,144
     758:	0000                	unimp
     75a:	0501                	addi	a0,a0,0
     75c:	060d                	addi	a2,a2,3
     75e:	00090203          	lb	tp,0(s2)
     762:	0100                	addi	s0,sp,128
     764:	1105                	addi	sp,sp,-31
     766:	00090403          	lb	s0,0(s2)
     76a:	0100                	addi	s0,sp,128
     76c:	0404                	addi	s1,sp,512
     76e:	3005                	0x3005
     770:	097f9303          	lh	t1,151(t6) # 9771b <.LLST42+0x95be5>
     774:	0000                	unimp
     776:	0501                	addi	a0,a0,0
     778:	063a                	slli	a2,a2,0xe
     77a:	00090003          	lb	zero,0(s2)
     77e:	0100                	addi	s0,sp,128
     780:	3d05                	addiw	s10,s10,-31
     782:	00090003          	lb	zero,0(s2)
     786:	0100                	addi	s0,sp,128
     788:	4205                	li	tp,1
     78a:	00090003          	lb	zero,0(s2)
    DBG(printf("PageMgr::free(pos=%ld order=%d) idx=0x%lx\n",ppn-start,order,idx);)
     78e:	0100                	addi	s0,sp,128
     790:	0104                	addi	s1,sp,128
     792:	1d05                	addi	s10,s10,-31
     794:	0900ed03          	lwu	s10,144(ra)
     798:	0000                	unimp
     79a:	0401                	addi	s0,s0,0
     79c:	0504                	addi	s1,sp,640
     79e:	0630                	addi	a2,sp,776
     7a0:	097f9403          	lh	s0,151(t6)
    buddyNodes[idx]=order+1;
     7a4:	0000                	unimp
     7a6:	0401                	addi	s0,s0,0
        inline constexpr xlen_t prnt(xlen_t x){return ((x+1)>>1)-1;}
     7a8:	0501                	addi	a0,a0,0
     7aa:	061d                	addi	a2,a2,7
     7ac:	0900ec03          	lwu	s8,144(ra)
    for(idx=prnt(idx);idx>0;idx=prnt(idx)){
     7b0:	0000                	unimp
     7b2:	0501                	addi	a0,a0,0
    buddyNodes[0]=klib::max(buddyNodes[lsub(0)],buddyNodes[rsub(0)]);
     7b4:	0311                	addi	t1,t1,4
     7b6:	0900                	addi	s0,sp,144
     7b8:	0000                	unimp
     7ba:	0501                	addi	a0,a0,0
PageMgr::PageMgr(PageNum start,PageNum end):start(start),end(end){
     7bc:	0615                	addi	a2,a2,5
     7be:	00090103          	lb	sp,0(s2)
     7c2:	0100                	addi	s0,sp,128
     7c4:	0404                	addi	s1,sp,512
     7c6:	3005                	0x3005
     7c8:	097f9203          	lh	tp,151(t6)
     7cc:	0000                	unimp
     7ce:	0301                	addi	t1,t1,0
     7d0:	0901                	addi	s2,s2,0
     7d2:	0000                	unimp
     7d4:	0401                	addi	s0,s0,0
     7d6:	0501                	addi	a0,a0,0
     7d8:	0641                	addi	a2,a2,16
     7da:	0900ed03          	lwu	s10,144(ra)
     7de:	0000                	unimp
    DBG(
     7e0:	0501                	addi	a0,a0,0
     7e2:	0005                	c.nop	1
     7e4:	0402                	c.slli64	s0
     7e6:	0602                	c.slli64	a2
PageMgr::PageMgr(PageNum start,PageNum end):start(start),end(end){
     7e8:	00097703          	0x97703
     7ec:	0100                	addi	s0,sp,128
     7ee:	3805                	addiw	a6,a6,-31
    DBG(
     7f0:	0200                	addi	s0,sp,256
     7f2:	0204                	addi	s1,sp,256
     7f4:	0306                	slli	t1,t1,0x1
     7f6:	0900                	addi	s0,sp,144
    xlen_t pages=end-start;
     7f8:	0000                	unimp
     7fa:	0501                	addi	a0,a0,0
    for(i=0;a>1;a>>=1,i++)r|=a&1;
     7fc:	002d                	c.nop	11
     7fe:	0402                	c.slli64	s0
     800:	0602                	c.slli64	a2
     802:	00090003          	lb	zero,0(s2)
     806:	0100                	addi	s0,sp,128
     808:	0505                	addi	a0,a0,1
     80a:	00090f03          	lb	t5,0(s2)
    int i=0,r=0;
     80e:	0100                	addi	s0,sp,128
    for(i=0;a>1;a>>=1,i++)r|=a&1;
     810:	00090003          	lb	zero,0(s2)
     814:	0100                	addi	s0,sp,128
     816:	00090103          	lb	sp,0(s2)
     81a:	0100                	addi	s0,sp,128
     81c:	1505                	addi	a0,a0,-31
     81e:	0306                	slli	t1,t1,0x1
     820:	0900                	addi	s0,sp,144
     822:	0000                	unimp
     824:	0501                	addi	a0,a0,0
     826:	0605                	addi	a2,a2,1
     828:	00090103          	lb	sp,0(s2)
     82c:	0100                	addi	s0,sp,128
     82e:	0404                	addi	s1,sp,512
     830:	3005                	0x3005
     832:	097f8c03          	lb	s8,151(t6)
     836:	0000                	unimp
    DBG(printf("pages=%d order=%d rootOrder=%ld buddyTreeSize=%ld\n",pages,rootOrder,rootOrder,buddyTreeSize);)
     838:	0401                	addi	s0,s0,0
     83a:	0501                	addi	a0,a0,0
     83c:	0320                	addi	s0,sp,392
     83e:	00f4                	addi	a3,sp,76
    rootOrder=klib::log2up(pages);
     840:	0009                	c.nop	2
     842:	0100                	addi	s0,sp,128
    buddyTreeSize=(1l<<rootOrder)*2-1;
     844:	0905                	addi	s2,s2,1
     846:	0200                	addi	s0,sp,256
    DBG(printf("pages=%d order=%d rootOrder=%ld buddyTreeSize=%ld\n",pages,rootOrder,rootOrder,buddyTreeSize);)
     848:	0204                	addi	s1,sp,256
     84a:	00090103          	lb	sp,0(s2)
     84e:	0100                	addi	s0,sp,128
     850:	2205                	addiw	tp,tp,1
     852:	0200                	addi	s0,sp,256
     854:	0204                	addi	s1,sp,256
     856:	0306                	slli	t1,t1,0x1
    buddyNodes=new uint8_t[buddyTreeSize];
     858:	0900                	addi	s0,sp,144
     85a:	0000                	unimp
        ptr_t rt=(tlsf_malloc(size));
     85c:	0401                	addi	s0,s0,0
     85e:	0504                	addi	s1,sp,640
     860:	0030                	addi	a2,sp,8
     862:	0402                	c.slli64	s0
     864:	0602                	c.slli64	a2
     866:	097f8903          	lb	s2,151(t6)
        if(rt!=nullptr)return rt;
     86a:	0000                	unimp
        ptr_t rt=(tlsf_malloc(size));
     86c:	0501                	addi	a0,a0,0
     86e:	003a                	c.slli	zero,0xe
     870:	0402                	c.slli64	s0
     872:	0602                	c.slli64	a2
     874:	00090003          	lb	zero,0(s2)
    for(xlen_t i=1;i<buddyTreeSize;i++)buddyNodes[i]=0;
     878:	0100                	addi	s0,sp,128
     87a:	3d05                	addiw	s10,s10,-31
    buddyNodes=new uint8_t[buddyTreeSize];
     87c:	0200                	addi	s0,sp,256
     87e:	0204                	addi	s1,sp,256
    for(xlen_t i=1;i<buddyTreeSize;i++)buddyNodes[i]=0;
     880:	00090003          	lb	zero,0(s2)
     884:	0100                	addi	s0,sp,128
     886:	3005                	0x3005
     888:	0200                	addi	s0,sp,256
     88a:	0204                	addi	s1,sp,256
     88c:	0306                	slli	t1,t1,0x1
     88e:	0901                	addi	s2,s2,0
     890:	0000                	unimp
     892:	0401                	addi	s0,s0,0
     894:	0501                	addi	a0,a0,0
     896:	0021                	c.nop	8
     898:	0402                	c.slli64	s0
     89a:	0602                	c.slli64	a2
     89c:	0900f603          	0x900f603
     8a0:	0000                	unimp
     8a2:	0501                	addi	a0,a0,0
    for(int i=rootOrder;i>=0;i--){
     8a4:	04020017          	auipc	zero,0x4020
     8a8:	0302                	c.slli64	t1
     8aa:	0900                	addi	s0,sp,144
        if((pages>>i)&1){
     8ac:	0000                	unimp
     8ae:	0401                	addi	s0,s0,0
     8b0:	0504                	addi	s1,sp,640
     8b2:	003d                	c.nop	15
     8b4:	0402                	c.slli64	s0
     8b6:	0302                	c.slli64	t1
    for(int i=rootOrder;i>=0;i--){
     8b8:	00097f8b          	0x97f8b
     8bc:	0100                	addi	s0,sp,128
     8be:	0104                	addi	s1,sp,128
        if((pages>>i)&1){
     8c0:	1705                	addi	a4,a4,-31
     8c2:	0200                	addi	s0,sp,256
     8c4:	0204                	addi	s1,sp,256
     8c6:	0900f503          	0x900f503
     8ca:	0000                	unimp
    for(int i=rootOrder;i>=0;i--){
     8cc:	0401                	addi	s0,s0,0
     8ce:	0504                	addi	s1,sp,640
     8d0:	0042                	c.slli	zero,0x10
     8d2:	0402                	c.slli64	s0
            printf("buddy: |"); for(xlen_t i=0;i<buddyTreeSize;i++)printf("%d | ",buddyNodes[i]-1);printf("\n");
     8d4:	0302                	c.slli64	t1
     8d6:	00097f8b          	0x97f8b
     8da:	0100                	addi	s0,sp,128
     8dc:	0104                	addi	s1,sp,128
     8de:	1705                	addi	a4,a4,-31
     8e0:	0200                	addi	s0,sp,256
     8e2:	0204                	addi	s1,sp,256
     8e4:	0900f503          	0x900f503
     8e8:	0000                	unimp
     8ea:	0501                	addi	a0,a0,0
     8ec:	0005                	c.nop	1
     8ee:	0402                	c.slli64	s0
     8f0:	0602                	c.slli64	a2
     8f2:	00097f03          	0x97f03
     8f6:	0100                	addi	s0,sp,128
     8f8:	0404                	addi	s1,sp,512
     8fa:	3005                	0x3005
     8fc:	0200                	addi	s0,sp,256
     8fe:	0204                	addi	s1,sp,256
     900:	097f8c03          	lb	s8,151(t6)
     904:	0000                	unimp
     906:	0401                	addi	s0,s0,0
     908:	0501                	addi	a0,a0,0
     90a:	0020                	addi	s0,sp,8
     90c:	0402                	c.slli64	s0
     90e:	0302                	c.slli64	t1
     910:	00f4                	addi	a3,sp,76
     912:	0009                	c.nop	2
     914:	0100                	addi	s0,sp,128
     916:	0505                	addi	a0,a0,1
     918:	00090203          	lb	tp,0(s2)
     91c:	0100                	addi	s0,sp,128
     91e:	1d05                	addi	s10,s10,-31
     920:	0306                	slli	t1,t1,0x1
     922:	0900                	addi	s0,sp,144
     924:	0000                	unimp
     926:	0401                	addi	s0,s0,0
     928:	0504                	addi	s1,sp,640
     92a:	0630                	addi	a2,sp,776
}
     92c:	097f8803          	lb	a6,151(t6)
     930:	0000                	unimp
     932:	0301                	addi	t1,t1,0
     934:	0901                	addi	s2,s2,0
     936:	0000                	unimp
     938:	0401                	addi	s0,s0,0
     93a:	0501                	addi	a0,a0,0
     93c:	0612                	slli	a2,a2,0x4
     93e:	0900f703          	0x900f703
    DBG(
     942:	0000                	unimp
     944:	0501                	addi	a0,a0,0
     946:	0605                	addi	a2,a2,1
}
     948:	00090203          	lb	tp,0(s2)
    DBG(
     94c:	0100                	addi	s0,sp,128
     94e:	3005                	0x3005
     950:	0306                	slli	t1,t1,0x1
     952:	0900                	addi	s0,sp,144
     954:	0000                	unimp
     956:	0501                	addi	a0,a0,0
     958:	0322                	slli	t1,t1,0x8
     95a:	0900                	addi	s0,sp,144
     95c:	0000                	unimp
     95e:	0501                	addi	a0,a0,0
            free(base,i);
     960:	030d                	addi	t1,t1,3
     962:	0900                	addi	s0,sp,144
     964:	0000                	unimp
     966:	0501                	addi	a0,a0,0
     968:	0330                	addi	a2,sp,392
     96a:	0900                	addi	s0,sp,144
     96c:	0000                	unimp
     96e:	0501                	addi	a0,a0,0
     970:	0322                	slli	t1,t1,0x8
     972:	0900                	addi	s0,sp,144
     974:	0000                	unimp
     976:	0501                	addi	a0,a0,0
     978:	031e                	slli	t1,t1,0x7
     97a:	0900                	addi	s0,sp,144
     97c:	0000                	unimp
     97e:	0501                	addi	a0,a0,0
     980:	0900033b          	0x900033b
     984:	0000                	unimp
     986:	0501                	addi	a0,a0,0
     988:	030d                	addi	t1,t1,3
     98a:	0900                	addi	s0,sp,144
     98c:	0000                	unimp
     98e:	0501                	addi	a0,a0,0
     990:	0605                	addi	a2,a2,1
     992:	00090103          	lb	sp,0(s2)
     996:	0100                	addi	s0,sp,128
     998:	00090003          	lb	zero,0(s2)
     99c:	0100                	addi	s0,sp,128
     99e:	00090303          	lb	t1,0(s2)
     9a2:	0100                	addi	s0,sp,128
     9a4:	00090003          	lb	zero,0(s2)
     9a8:	0100                	addi	s0,sp,128
     9aa:	0105                	addi	sp,sp,1
     9ac:	0306                	slli	t1,t1,0x1
     9ae:	0902                	c.slli64	s2
     9b0:	0000                	unimp
     9b2:	0501                	addi	a0,a0,0
     9b4:	0615                	addi	a2,a2,5
     9b6:	00097003          	0x97003
     9ba:	0100                	addi	s0,sp,128
     9bc:	0404                	addi	s1,sp,512
     9be:	3005                	0x3005
     9c0:	097f9003          	lh	zero,151(t6)
     9c4:	0000                	unimp
     9c6:	0301                	addi	t1,t1,0
     9c8:	0901                	addi	s2,s2,0
     9ca:	0000                	unimp
     9cc:	0401                	addi	s0,s0,0
     9ce:	0501                	addi	a0,a0,0
     9d0:	0641                	addi	a2,a2,16
     9d2:	0900ef03          	lwu	t5,144(ra)
     9d6:	0000                	unimp
     9d8:	0501                	addi	a0,a0,0
     9da:	0338                	addi	a4,sp,392
     9dc:	0975                	addi	s2,s2,29
     9de:	0000                	unimp
     9e0:	0501                	addi	a0,a0,0
     9e2:	090b034f          	fnmadd.s	ft6,fs6,fa6,ft1,rne
     9e6:	0000                	unimp
     9e8:	0501                	addi	a0,a0,0
     9ea:	0605                	addi	a2,a2,1
     9ec:	00097503          	0x97503
     9f0:	0100                	addi	s0,sp,128
     9f2:	2d05                	addiw	s10,s10,1
     9f4:	00090003          	lb	zero,0(s2)
     9f8:	0100                	addi	s0,sp,128
     9fa:	2105                	addiw	sp,sp,1
     9fc:	0200                	addi	s0,sp,256
     9fe:	0104                	addi	s1,sp,128
     a00:	0306                	slli	t1,t1,0x1
     a02:	0902                	c.slli64	s2
     a04:	0000                	unimp
     a06:	0501                	addi	a0,a0,0
     a08:	060d                	addi	a2,a2,3
     a0a:	00090203          	lb	tp,0(s2)
     a0e:	0100                	addi	s0,sp,128
     a10:	1105                	addi	sp,sp,-31
     a12:	00090103          	lb	sp,0(s2)
     a16:	0100                	addi	s0,sp,128
     a18:	0404                	addi	s1,sp,512
     a1a:	3005                	0x3005
     a1c:	097f9703          	lh	a4,151(t6)
     a20:	0000                	unimp
     a22:	0501                	addi	a0,a0,0
     a24:	063a                	slli	a2,a2,0xe
     a26:	00090003          	lb	zero,0(s2)
     a2a:	0100                	addi	s0,sp,128
     a2c:	4005                	c.li	zero,1
     a2e:	00090003          	lb	zero,0(s2)
     a32:	0100                	addi	s0,sp,128
     a34:	0104                	addi	s1,sp,128
     a36:	3f05                	addiw	t5,t5,-31
     a38:	0900e903          	lwu	s2,144(ra)
     a3c:	0000                	unimp
     a3e:	0501                	addi	a0,a0,0
     a40:	033a                	slli	t1,t1,0xe
     a42:	0900                	addi	s0,sp,144
     a44:	0000                	unimp
     a46:	0501                	addi	a0,a0,0
     a48:	0900033f 05010000 	0x50100000900033f
     a50:	033a                	slli	t1,t1,0xe
     a52:	0900                	addi	s0,sp,144
     a54:	0000                	unimp
     a56:	0401                	addi	s0,s0,0
     a58:	0504                	addi	s1,sp,640
     a5a:	0630                	addi	a2,sp,776
     a5c:	097f9603          	lh	a2,151(t6)
     a60:	0000                	unimp
     a62:	0401                	addi	s0,s0,0
     a64:	0501                	addi	a0,a0,0
     a66:	0625                	addi	a2,a2,9
     a68:	0900ea03          	lwu	s4,144(ra)
     a6c:	0000                	unimp
     a6e:	0401                	addi	s0,s0,0
     a70:	0504                	addi	s1,sp,640
     a72:	0342                	slli	t1,t1,0x10
     a74:	7f96                	ld	t6,352(sp)
     a76:	0009                	c.nop	2
     a78:	0100                	addi	s0,sp,128
     a7a:	0104                	addi	s1,sp,128
     a7c:	3805                	addiw	a6,a6,-31
     a7e:	0900e503          	lwu	a0,144(ra)
     a82:	0000                	unimp
     a84:	0501                	addi	a0,a0,0
     a86:	0325                	addi	t1,t1,9
     a88:	0905                	addi	s2,s2,1
     a8a:	0000                	unimp
     a8c:	0501                	addi	a0,a0,0
     a8e:	0611                	addi	a2,a2,4
     a90:	00090103          	lb	sp,0(s2)
     a94:	0100                	addi	s0,sp,128
     a96:	0404                	addi	s1,sp,512
     a98:	3005                	0x3005
     a9a:	097f9503          	lh	a0,151(t6)
     a9e:	0000                	unimp
     aa0:	0401                	addi	s0,s0,0
     aa2:	0501                	addi	a0,a0,0
     aa4:	0305                	addi	t1,t1,1
     aa6:	00e5                	addi	ra,ra,25
     aa8:	0009                	c.nop	2
     aaa:	0100                	addi	s0,sp,128
     aac:	2d05                	addiw	s10,s10,1
     aae:	00090003          	lb	zero,0(s2)
     ab2:	0100                	addi	s0,sp,128
     ab4:	3805                	addiw	a6,a6,-31
     ab6:	0306                	slli	t1,t1,0x1
     ab8:	0900                	addi	s0,sp,144
     aba:	0000                	unimp
     abc:	0501                	addi	a0,a0,0
     abe:	0605                	addi	a2,a2,1
     ac0:	00090003          	lb	zero,0(s2)
     ac4:	0100                	addi	s0,sp,128
     ac6:	2d05                	addiw	s10,s10,1
     ac8:	00090003          	lb	zero,0(s2)
     acc:	0100                	addi	s0,sp,128
     ace:	1205                	addi	tp,tp,-31
     ad0:	0306                	slli	t1,t1,0x1
     ad2:	00000913          	li	s2,0
     ad6:	0501                	addi	a0,a0,0
     ad8:	0005                	c.nop	1
     ada:	0402                	c.slli64	s0
     adc:	0601                	addi	a2,a2,0
     ade:	00090603          	lb	a2,0(s2)
     ae2:	0100                	addi	s0,sp,128
     ae4:	0200                	addi	s0,sp,256
     ae6:	0104                	addi	s1,sp,128
     ae8:	00090003          	lb	zero,0(s2)
     aec:	0100                	addi	s0,sp,128
     aee:	2d05                	addiw	s10,s10,1
     af0:	0306                	slli	t1,t1,0x1
     af2:	00000967          	jalr	s2,zero # 0 <.Ldebug_line0>
     af6:	0501                	addi	a0,a0,0
     af8:	0005                	c.nop	1
     afa:	0402                	c.slli64	s0
     afc:	0601                	addi	a2,a2,0
     afe:	00090f03          	lb	t5,0(s2)
     b02:	0100                	addi	s0,sp,128
     b04:	0200                	addi	s0,sp,256
     b06:	0104                	addi	s1,sp,128
     b08:	00090003          	lb	zero,0(s2)
     b0c:	0100                	addi	s0,sp,128
     b0e:	0204                	addi	s1,sp,256
     b10:	0e05                	addi	t3,t3,1
     b12:	0306                	slli	t1,t1,0x1
     b14:	7f84                	ld	s1,56(a5)
     b16:	0009                	c.nop	2
     b18:	0100                	addi	s0,sp,128
     b1a:	0104                	addi	s1,sp,128
     b1c:	2105                	addiw	sp,sp,1
     b1e:	0306                	slli	t1,t1,0x1
     b20:	0901                	addi	s2,s2,0
     b22:	0000                	unimp
     b24:	0501                	addi	a0,a0,0
     b26:	0305                	addi	t1,t1,1
     b28:	0901                	addi	s2,s2,0
     b2a:	0000                	unimp
     b2c:	0301                	addi	t1,t1,0
     b2e:	0900                	addi	s0,sp,144
     b30:	0000                	unimp
     b32:	0501                	addi	a0,a0,0
     b34:	0621                	addi	a2,a2,8
     b36:	00097f03          	0x97f03
     b3a:	0100                	addi	s0,sp,128
     b3c:	0505                	addi	a0,a0,1
     b3e:	00090103          	lb	sp,0(s2)
     b42:	0100                	addi	s0,sp,128
     b44:	2105                	addiw	sp,sp,1
     b46:	00097f03          	0x97f03
     b4a:	0100                	addi	s0,sp,128
     b4c:	0505                	addi	a0,a0,1
     b4e:	00090103          	lb	sp,0(s2)
     b52:	0100                	addi	s0,sp,128
     b54:	2105                	addiw	sp,sp,1
     b56:	00097f03          	0x97f03
     b5a:	0100                	addi	s0,sp,128
     b5c:	0505                	addi	a0,a0,1
     b5e:	00090103          	lb	sp,0(s2)
     b62:	0100                	addi	s0,sp,128
     b64:	0306                	slli	t1,t1,0x1
     b66:	00000903          	lb	s2,0(zero) # 0 <.Ldebug_line0>
     b6a:	0501                	addi	a0,a0,0
     b6c:	061d                	addi	a2,a2,7
     b6e:	00090003          	lb	zero,0(s2)
     b72:	0100                	addi	s0,sp,128
     b74:	2805                	addiw	a6,a6,1
     b76:	00090003          	lb	zero,0(s2)
     b7a:	0100                	addi	s0,sp,128
     b7c:	0505                	addi	a0,a0,1
     b7e:	00090103          	lb	sp,0(s2)
     b82:	0100                	addi	s0,sp,128
     b84:	0306                	slli	t1,t1,0x1
     b86:	0900                	addi	s0,sp,144
     b88:	0000                	unimp
     b8a:	0401                	addi	s0,s0,0
     b8c:	06320503          	lb	a0,99(tp) # ffffffffffff8063 <pool+0xfffffffffff01063>
     b90:	00097803          	0x97803
     b94:	0100                	addi	s0,sp,128
     b96:	0104                	addi	s1,sp,128
     b98:	1705                	addi	a4,a4,-31
     b9a:	00090803          	lb	a6,0(s2)
     b9e:	0100                	addi	s0,sp,128
     ba0:	0505                	addi	a0,a0,1
     ba2:	0306                	slli	t1,t1,0x1
     ba4:	0901                	addi	s2,s2,0
     ba6:	0000                	unimp
     ba8:	0401                	addi	s0,s0,0
     baa:	03270503          	lb	a0,50(a4) # b032 <.LLST42+0x94fc>
     bae:	00000977          	0x977
     bb2:	0401                	addi	s0,s0,0
     bb4:	0501                	addi	a0,a0,0
     bb6:	0305                	addi	t1,t1,1
     bb8:	090a                	slli	s2,s2,0x2
     bba:	0000                	unimp
     bbc:	0501                	addi	a0,a0,0
     bbe:	0612                	slli	a2,a2,0x4
     bc0:	00090003          	lb	zero,0(s2)
     bc4:	0100                	addi	s0,sp,128
     bc6:	0505                	addi	a0,a0,1
     bc8:	0306                	slli	t1,t1,0x1
     bca:	0901                	addi	s2,s2,0
     bcc:	0000                	unimp
     bce:	0401                	addi	s0,s0,0
     bd0:	0502                	c.slli64	a0
     bd2:	0608                	addi	a0,sp,768
     bd4:	00093103          	ld	sp,0(s2)
     bd8:	0100                	addi	s0,sp,128
     bda:	0104                	addi	s1,sp,128
     bdc:	1705                	addi	a4,a4,-31
     bde:	00094f03          	lbu	t5,0(s2)
     be2:	0100                	addi	s0,sp,128
     be4:	0204                	addi	s1,sp,256
     be6:	0505                	addi	a0,a0,1
     be8:	00093103          	ld	sp,0(s2)
     bec:	0100                	addi	s0,sp,128
     bee:	1d05                	addi	s10,s10,-31
     bf0:	00097803          	0x97803
     bf4:	0100                	addi	s0,sp,128
     bf6:	0505                	addi	a0,a0,1
     bf8:	00090003          	lb	zero,0(s2)
     bfc:	0100                	addi	s0,sp,128
     bfe:	00090103          	lb	sp,0(s2)
     c02:	0100                	addi	s0,sp,128
     c04:	0705                	addi	a4,a4,1
     c06:	00090803          	lb	a6,0(s2)
     c0a:	0100                	addi	s0,sp,128
     c0c:	0104                	addi	s1,sp,128
     c0e:	0505                	addi	a0,a0,1
     c10:	0306                	slli	t1,t1,0x1
     c12:	0000094f          	fnmadd.s	fs2,ft0,ft0,ft0,rne
     c16:	0501                	addi	a0,a0,0
     c18:	031a                	slli	t1,t1,0x6
     c1a:	091d                	addi	s2,s2,7
     c1c:	0000                	unimp
     c1e:	0501                	addi	a0,a0,0
     c20:	0309                	addi	t1,t1,2
     c22:	0901                	addi	s2,s2,0
     c24:	0000                	unimp
     c26:	0501                	addi	a0,a0,0
     c28:	061e                	slli	a2,a2,0x7
     c2a:	00090003          	lb	zero,0(s2)
     c2e:	0100                	addi	s0,sp,128
     c30:	0905                	addi	s2,s2,1
     c32:	0306                	slli	t1,t1,0x1
     c34:	0901                	addi	s2,s2,0
     c36:	0000                	unimp
     c38:	0301                	addi	t1,t1,0
     c3a:	0901                	addi	s2,s2,0
     c3c:	0000                	unimp
     c3e:	0501                	addi	a0,a0,0
     c40:	0305                	addi	t1,t1,1
     c42:	097d                	addi	s2,s2,31
     c44:	0000                	unimp
     c46:	0501                	addi	a0,a0,0
     c48:	031a                	slli	t1,t1,0x6
     c4a:	0900                	addi	s0,sp,144
     c4c:	0000                	unimp
     c4e:	0501                	addi	a0,a0,0
     c50:	0309                	addi	t1,t1,2
     c52:	0901                	addi	s2,s2,0
     c54:	0000                	unimp
     c56:	0501                	addi	a0,a0,0
     c58:	061e                	slli	a2,a2,0x7
     c5a:	00090003          	lb	zero,0(s2)
     c5e:	0100                	addi	s0,sp,128
     c60:	0905                	addi	s2,s2,1
     c62:	0306                	slli	t1,t1,0x1
     c64:	0901                	addi	s2,s2,0
     c66:	0000                	unimp
     c68:	0501                	addi	a0,a0,0
     c6a:	0611                	addi	a2,a2,4
     c6c:	00096103          	lwu	sp,0(s2)
     c70:	0100                	addi	s0,sp,128
     c72:	0505                	addi	a0,a0,1
     c74:	0306                	slli	t1,t1,0x1
     c76:	0901                	addi	s2,s2,0
     c78:	0000                	unimp
     c7a:	0301                	addi	t1,t1,0
     c7c:	0900                	addi	s0,sp,144
     c7e:	0000                	unimp
     c80:	0301                	addi	t1,t1,0
     c82:	0900                	addi	s0,sp,144
     c84:	0000                	unimp
     c86:	0501                	addi	a0,a0,0
     c88:	0601                	addi	a2,a2,0
     c8a:	00090403          	lb	s0,0(s2)
     c8e:	0100                	addi	s0,sp,128
     c90:	0505                	addi	a0,a0,1
     c92:	00097c03          	0x97c03
     c96:	0100                	addi	s0,sp,128
     c98:	0105                	addi	sp,sp,1
     c9a:	00090403          	lb	s0,0(s2)
     c9e:	0100                	addi	s0,sp,128
     ca0:	0505                	addi	a0,a0,1
     ca2:	00097c03          	0x97c03
     ca6:	0100                	addi	s0,sp,128
     ca8:	0204                	addi	s1,sp,256
     caa:	0705                	addi	a4,a4,1
     cac:	00093203          	ld	tp,0(s2)
     cb0:	0100                	addi	s0,sp,128
     cb2:	0104                	addi	s1,sp,128
     cb4:	2d05                	addiw	s10,s10,1
     cb6:	0306                	slli	t1,t1,0x1
     cb8:	00cc                	addi	a1,sp,68
     cba:	0009                	c.nop	2
     cbc:	0100                	addi	s0,sp,128
     cbe:	0505                	addi	a0,a0,1
     cc0:	00090103          	lb	sp,0(s2)
     cc4:	0100                	addi	s0,sp,128
     cc6:	2d05                	addiw	s10,s10,1
     cc8:	0306                	slli	t1,t1,0x1
     cca:	0000097f          	radd16	s2,zero,zero
     cce:	0501                	addi	a0,a0,0
     cd0:	0318                	addi	a4,sp,384
     cd2:	0901                	addi	s2,s2,0
     cd4:	0000                	unimp
     cd6:	0401                	addi	s0,s0,0
     cd8:	0504                	addi	s1,sp,640
     cda:	030d                	addi	t1,t1,3
     cdc:	7f84                	ld	s1,56(a5)
     cde:	0009                	c.nop	2
     ce0:	0100                	addi	s0,sp,128
     ce2:	0104                	addi	s1,sp,128
     ce4:	2d05                	addiw	s10,s10,1
     ce6:	0900fb03          	0x900fb03
     cea:	0000                	unimp
     cec:	0501                	addi	a0,a0,0
     cee:	0318                	addi	a4,sp,384
     cf0:	0901                	addi	s2,s2,0
     cf2:	0000                	unimp
     cf4:	0401                	addi	s0,s0,0
     cf6:	0504                	addi	s1,sp,640
     cf8:	030d                	addi	t1,t1,3
     cfa:	7f84                	ld	s1,56(a5)
     cfc:	0009                	c.nop	2
     cfe:	0100                	addi	s0,sp,128
     d00:	0104                	addi	s1,sp,128
     d02:	2d05                	addiw	s10,s10,1
     d04:	0900fb03          	0x900fb03
     d08:	0000                	unimp
     d0a:	0401                	addi	s0,s0,0
     d0c:	0504                	addi	s1,sp,640
     d0e:	030d                	addi	t1,t1,3
     d10:	7f85                	lui	t6,0xfffe1
     d12:	0009                	c.nop	2
     d14:	0100                	addi	s0,sp,128
     d16:	0104                	addi	s1,sp,128
     d18:	2d05                	addiw	s10,s10,1
     d1a:	0900fb03          	0x900fb03
     d1e:	0000                	unimp
     d20:	0401                	addi	s0,s0,0
     d22:	0504                	addi	s1,sp,640
     d24:	060d                	addi	a2,a2,3
     d26:	097f8503          	lb	a0,151(t6) # fffffffffffe1097 <pool+0xffffffffffeea097>
     d2a:	0000                	unimp
     d2c:	0301                	addi	t1,t1,0
     d2e:	0900                	addi	s0,sp,144
     d30:	0000                	unimp
     d32:	0301                	addi	t1,t1,0
     d34:	0900                	addi	s0,sp,144
     d36:	0000                	unimp
     d38:	0301                	addi	t1,t1,0
     d3a:	0901                	addi	s2,s2,0
     d3c:	0000                	unimp
     d3e:	0301                	addi	t1,t1,0
     d40:	0901                	addi	s2,s2,0
     d42:	0000                	unimp
     d44:	0501                	addi	a0,a0,0
     d46:	0615                	addi	a2,a2,5
     d48:	00090003          	lb	zero,0(s2)
     d4c:	0100                	addi	s0,sp,128
     d4e:	2a05                	addiw	s4,s4,1
     d50:	0306                	slli	t1,t1,0x1
     d52:	0900                	addi	s0,sp,144
     d54:	0000                	unimp
     d56:	0501                	addi	a0,a0,0
     d58:	0614                	addi	a3,sp,768
     d5a:	00097f03          	0x97f03
     d5e:	0100                	addi	s0,sp,128
     d60:	2205                	addiw	tp,tp,1
     d62:	0306                	slli	t1,t1,0x1
     d64:	0902                	c.slli64	s2
     d66:	0000                	unimp
     d68:	0501                	addi	a0,a0,0
     d6a:	0330                	addi	a2,sp,392
     d6c:	0978                	addi	a4,sp,156
     d6e:	0000                	unimp
     d70:	0501                	addi	a0,a0,0
     d72:	0636                	slli	a2,a2,0xd
     d74:	00090703          	lb	a4,0(s2)
     d78:	0100                	addi	s0,sp,128
     d7a:	0d05                	addi	s10,s10,1
     d7c:	0306                	slli	t1,t1,0x1
     d7e:	0900                	addi	s0,sp,144
     d80:	0000                	unimp
     d82:	0501                	addi	a0,a0,0
     d84:	032a                	slli	t1,t1,0xa
     d86:	0900                	addi	s0,sp,144
     d88:	0000                	unimp
     d8a:	0501                	addi	a0,a0,0
     d8c:	0629                	addi	a2,a2,10
     d8e:	00090103          	lb	sp,0(s2)
     d92:	0100                	addi	s0,sp,128
     d94:	2a05                	addiw	s4,s4,1
     d96:	00097f03          	0x97f03
     d9a:	0100                	addi	s0,sp,128
     d9c:	1105                	addi	sp,sp,-31
     d9e:	0306                	slli	t1,t1,0x1
     da0:	0901                	addi	s2,s2,0
     da2:	0000                	unimp
     da4:	0501                	addi	a0,a0,0
     da6:	0618                	addi	a4,sp,768
     da8:	00090003          	lb	zero,0(s2)
     dac:	0100                	addi	s0,sp,128
     dae:	1f05                	addi	t5,t5,-31
     db0:	00090003          	lb	zero,0(s2)
     db4:	0100                	addi	s0,sp,128
     db6:	1105                	addi	sp,sp,-31
     db8:	00090003          	lb	zero,0(s2)
     dbc:	0100                	addi	s0,sp,128
     dbe:	1605                	addi	a2,a2,-31
     dc0:	0306                	slli	t1,t1,0x1
     dc2:	0901                	addi	s2,s2,0
     dc4:	0000                	unimp
     dc6:	0501                	addi	a0,a0,0
     dc8:	0330                	addi	a2,sp,392
     dca:	0976                	slli	s2,s2,0x1d
     dcc:	0000                	unimp
     dce:	0501                	addi	a0,a0,0
     dd0:	0636                	slli	a2,a2,0xd
     dd2:	00090803          	lb	a6,0(s2)
     dd6:	0100                	addi	s0,sp,128
     dd8:	4205                	li	tp,1
     dda:	00097803          	0x97803
     dde:	0100                	addi	s0,sp,128
     de0:	0d05                	addi	s10,s10,1
     de2:	0306                	slli	t1,t1,0x1
     de4:	0908                	addi	a0,sp,144
     de6:	0000                	unimp
     de8:	0501                	addi	a0,a0,0
     dea:	032a                	slli	t1,t1,0xa
     dec:	0900                	addi	s0,sp,144
     dee:	0000                	unimp
     df0:	0501                	addi	a0,a0,0
     df2:	030d                	addi	t1,t1,3
     df4:	0906                	slli	s2,s2,0x1
     df6:	0000                	unimp
     df8:	0401                	addi	s0,s0,0
     dfa:	0501                	addi	a0,a0,0
     dfc:	0305                	addi	t1,t1,1
     dfe:	00f5                	addi	ra,ra,29
     e00:	0009                	c.nop	2
     e02:	0100                	addi	s0,sp,128
     e04:	00090003          	lb	zero,0(s2)
     e08:	0100                	addi	s0,sp,128
     e0a:	00090203          	lb	tp,0(s2)
     e0e:	0100                	addi	s0,sp,128
     e10:	1405                	addi	s0,s0,-31
     e12:	0306                	slli	t1,t1,0x1
     e14:	0900                	addi	s0,sp,144
     e16:	0000                	unimp
     e18:	0401                	addi	s0,s0,0
     e1a:	0504                	addi	s1,sp,640
     e1c:	033d                	addi	t1,t1,15
     e1e:	7efd                	lui	t4,0xfffff
     e20:	0009                	c.nop	2
     e22:	0100                	addi	s0,sp,128
     e24:	4205                	li	tp,1
     e26:	00090003          	lb	zero,0(s2)
     e2a:	0100                	addi	s0,sp,128
     e2c:	0104                	addi	s1,sp,128
     e2e:	1405                	addi	s0,s0,-31
     e30:	09018303          	lb	t1,144(gp) # 1090 <.Ldebug_line0+0x1090>
     e34:	0000                	unimp
     e36:	0501                	addi	a0,a0,0
     e38:	0605                	addi	a2,a2,1
     e3a:	00090103          	lb	sp,0(s2)
     e3e:	0100                	addi	s0,sp,128
     e40:	0404                	addi	s1,sp,512
     e42:	3005                	0x3005
     e44:	097efc03          	0x97efc03
     e48:	0000                	unimp
     e4a:	0401                	addi	s0,s0,0
     e4c:	0501                	addi	a0,a0,0
     e4e:	031a                	slli	t1,t1,0x6
     e50:	0184                	addi	s1,sp,192
     e52:	0009                	c.nop	2
     e54:	0100                	addi	s0,sp,128
     e56:	0905                	addi	s2,s2,1
     e58:	00090103          	lb	sp,0(s2)
     e5c:	0100                	addi	s0,sp,128
     e5e:	1905                	addi	s2,s2,-31
     e60:	0306                	slli	t1,t1,0x1
     e62:	0900                	addi	s0,sp,144
     e64:	0000                	unimp
     e66:	0401                	addi	s0,s0,0
     e68:	0504                	addi	s1,sp,640
     e6a:	0630                	addi	a2,sp,776
     e6c:	097ef903          	0x97ef903
     e70:	0000                	unimp
     e72:	0501                	addi	a0,a0,0
     e74:	063a                	slli	a2,a2,0xe
     e76:	00090003          	lb	zero,0(s2)
     e7a:	0100                	addi	s0,sp,128
     e7c:	3d05                	addiw	s10,s10,-31
     e7e:	00090003          	lb	zero,0(s2)
     e82:	0100                	addi	s0,sp,128
     e84:	0104                	addi	s1,sp,128
     e86:	2d05                	addiw	s10,s10,1
     e88:	09018703          	lb	a4,144(gp)
     e8c:	0000                	unimp
     e8e:	0401                	addi	s0,s0,0
     e90:	0504                	addi	s1,sp,640
     e92:	0630                	addi	a2,sp,776
     e94:	097efa03          	0x97efa03
     e98:	0000                	unimp
     e9a:	0401                	addi	s0,s0,0
     e9c:	0501                	addi	a0,a0,0
     e9e:	0644                	addi	s1,sp,772
     ea0:	09018603          	lb	a2,144(gp)
     ea4:	0000                	unimp
     ea6:	0501                	addi	a0,a0,0
     ea8:	0318                	addi	a4,sp,384
     eaa:	0900                	addi	s0,sp,144
     eac:	0000                	unimp
     eae:	0401                	addi	s0,s0,0
     eb0:	0504                	addi	s1,sp,640
     eb2:	0030                	addi	a2,sp,8
     eb4:	0402                	c.slli64	s0
     eb6:	0602                	c.slli64	a2
     eb8:	097ef903          	0x97ef903
     ebc:	0000                	unimp
     ebe:	0001                	nop
     ec0:	0402                	c.slli64	s0
     ec2:	0302                	c.slli64	t1
     ec4:	0901                	addi	s2,s2,0
     ec6:	0000                	unimp
     ec8:	0401                	addi	s0,s0,0
     eca:	0501                	addi	a0,a0,0
     ecc:	0018                	0x18
     ece:	0402                	c.slli64	s0
     ed0:	0604                	addi	s1,sp,768
     ed2:	09018603          	lb	a2,144(gp)
     ed6:	0000                	unimp
     ed8:	0401                	addi	s0,s0,0
     eda:	0504                	addi	s1,sp,640
     edc:	003d                	c.nop	15
     ede:	0402                	c.slli64	s0
     ee0:	0304                	addi	s1,sp,384
     ee2:	00097efb          	0x97efb
     ee6:	0100                	addi	s0,sp,128
     ee8:	0104                	addi	s1,sp,128
     eea:	1805                	addi	a6,a6,-31
     eec:	0200                	addi	s0,sp,256
     eee:	0404                	addi	s1,sp,512
     ef0:	09018503          	lb	a0,144(gp)
     ef4:	0000                	unimp
     ef6:	0501                	addi	a0,a0,0
     ef8:	0005                	c.nop	1
     efa:	0402                	c.slli64	s0
     efc:	0604                	addi	s1,sp,768
     efe:	00097f03          	0x97f03
     f02:	0100                	addi	s0,sp,128
     f04:	0404                	addi	s1,sp,512
     f06:	3005                	0x3005
     f08:	0200                	addi	s0,sp,256
     f0a:	0404                	addi	s1,sp,512
     f0c:	097efc03          	0x97efc03
     f10:	0000                	unimp
     f12:	0501                	addi	a0,a0,0
     f14:	0042                	c.slli	zero,0x10
     f16:	0402                	c.slli64	s0
     f18:	0604                	addi	s1,sp,768
     f1a:	00090003          	lb	zero,0(s2)
     f1e:	0100                	addi	s0,sp,128
     f20:	0104                	addi	s1,sp,128
     f22:	1a05                	addi	s4,s4,-31
     f24:	0200                	addi	s0,sp,256
     f26:	0404                	addi	s1,sp,512
     f28:	0306                	slli	t1,t1,0x1
     f2a:	0184                	addi	s1,sp,192
     f2c:	0009                	c.nop	2
     f2e:	0100                	addi	s0,sp,128
     f30:	0505                	addi	a0,a0,1
     f32:	00090303          	lb	t1,0(s2)
     f36:	0100                	addi	s0,sp,128
     f38:	1d05                	addi	s10,s10,-31
     f3a:	0306                	slli	t1,t1,0x1
     f3c:	0900                	addi	s0,sp,144
     f3e:	0000                	unimp
     f40:	0401                	addi	s0,s0,0
     f42:	0504                	addi	s1,sp,640
     f44:	0630                	addi	a2,sp,776
     f46:	097ef703          	0x97ef703
     f4a:	0000                	unimp
     f4c:	0301                	addi	t1,t1,0
     f4e:	0901                	addi	s2,s2,0
     f50:	0000                	unimp
     f52:	0401                	addi	s0,s0,0
     f54:	0501                	addi	a0,a0,0
     f56:	0612                	slli	a2,a2,0x4
     f58:	09018803          	lb	a6,144(gp)
     f5c:	0000                	unimp
     f5e:	0401                	addi	s0,s0,0
     f60:	0504                	addi	s1,sp,640
     f62:	0030                	addi	a2,sp,8
     f64:	0402                	c.slli64	s0
     f66:	0601                	addi	a2,a2,0
     f68:	097ef703          	0x97ef703
     f6c:	0000                	unimp
     f6e:	0401                	addi	s0,s0,0
     f70:	0501                	addi	a0,a0,0
     f72:	0018                	0x18
     f74:	0402                	c.slli64	s0
     f76:	0601                	addi	a2,a2,0
     f78:	09018703          	lb	a4,144(gp)
     f7c:	0000                	unimp
     f7e:	0401                	addi	s0,s0,0
     f80:	0504                	addi	s1,sp,640
     f82:	060d                	addi	a2,a2,3
     f84:	097eff03          	0x97eff03
     f88:	0000                	unimp
     f8a:	0301                	addi	t1,t1,0
     f8c:	0900                	addi	s0,sp,144
     f8e:	0000                	unimp
     f90:	0301                	addi	t1,t1,0
     f92:	0908                	addi	a0,sp,144
     f94:	0000                	unimp
     f96:	0401                	addi	s0,s0,0
     f98:	0501                	addi	a0,a0,0
     f9a:	0305                	addi	t1,t1,1
     f9c:	00f5                	addi	ra,ra,29
     f9e:	0009                	c.nop	2
     fa0:	0100                	addi	s0,sp,128
     fa2:	00090003          	lb	zero,0(s2)
     fa6:	0100                	addi	s0,sp,128
     fa8:	00090203          	lb	tp,0(s2)
     fac:	0100                	addi	s0,sp,128
     fae:	0404                	addi	s1,sp,512
     fb0:	4205                	li	tp,1
     fb2:	0306                	slli	t1,t1,0x1
     fb4:	7efd                	lui	t4,0xfffff
     fb6:	0009                	c.nop	2
     fb8:	0100                	addi	s0,sp,128
     fba:	0104                	addi	s1,sp,128
     fbc:	1405                	addi	s0,s0,-31
     fbe:	09018303          	lb	t1,144(gp)
     fc2:	0000                	unimp
     fc4:	0501                	addi	a0,a0,0
     fc6:	0605                	addi	a2,a2,1
     fc8:	00090103          	lb	sp,0(s2)
     fcc:	0100                	addi	s0,sp,128
     fce:	0404                	addi	s1,sp,512
     fd0:	3005                	0x3005
     fd2:	097efc03          	0x97efc03
     fd6:	0000                	unimp
     fd8:	0401                	addi	s0,s0,0
     fda:	0501                	addi	a0,a0,0
     fdc:	031a                	slli	t1,t1,0x6
     fde:	0184                	addi	s1,sp,192
     fe0:	0009                	c.nop	2
     fe2:	0100                	addi	s0,sp,128
     fe4:	1205                	addi	tp,tp,-31
     fe6:	0306                	slli	t1,t1,0x1
     fe8:	00000903          	lb	s2,0(zero) # 0 <.Ldebug_line0>
     fec:	0501                	addi	a0,a0,0
     fee:	0601                	addi	a2,a2,0
     ff0:	097fae03          	lw	t3,151(t6)
     ff4:	0000                	unimp
     ff6:	0501                	addi	a0,a0,0
     ff8:	0641                	addi	a2,a2,16
     ffa:	00090003          	lb	zero,0(s2)
     ffe:	0100                	addi	s0,sp,128
    1000:	0505                	addi	a0,a0,1
    1002:	0306                	slli	t1,t1,0x1
    1004:	0901                	addi	s2,s2,0
    1006:	0000                	unimp
    1008:	0301                	addi	t1,t1,0
    100a:	0900                	addi	s0,sp,144
    100c:	0000                	unimp
    100e:	0501                	addi	a0,a0,0
    1010:	0601                	addi	a2,a2,0
    1012:	00097f03          	0x97f03
    1016:	0100                	addi	s0,sp,128
    1018:	0505                	addi	a0,a0,1
    101a:	00090103          	lb	sp,0(s2)
    101e:	0100                	addi	s0,sp,128
    1020:	0105                	addi	sp,sp,1
    1022:	00097f03          	0x97f03
    1026:	0100                	addi	s0,sp,128
    1028:	0505                	addi	a0,a0,1
    102a:	00090103          	lb	sp,0(s2)
    102e:	0100                	addi	s0,sp,128
    1030:	0306                	slli	t1,t1,0x1
    1032:	00000903          	lb	s2,0(zero) # 0 <.Ldebug_line0>
    1036:	0501                	addi	a0,a0,0
    1038:	060c                	addi	a1,sp,768
    103a:	00090003          	lb	zero,0(s2)
    103e:	0100                	addi	s0,sp,128
    1040:	0505                	addi	a0,a0,1
    1042:	0306                	slli	t1,t1,0x1
    1044:	00000913          	li	s2,0
    1048:	0401                	addi	s0,s0,0
    104a:	0302                	c.slli64	t1
    104c:	7fa9                	lui	t6,0xfffea
    104e:	0009                	c.nop	2
    1050:	0100                	addi	s0,sp,128
    1052:	00090103          	lb	sp,0(s2)
    1056:	0100                	addi	s0,sp,128
    1058:	0e05                	addi	t3,t3,1
    105a:	00090003          	lb	zero,0(s2)
    105e:	0100                	addi	s0,sp,128
    1060:	0a05                	addi	s4,s4,1
    1062:	0306                	slli	t1,t1,0x1
    1064:	0900                	addi	s0,sp,144
    1066:	0000                	unimp
    1068:	0501                	addi	a0,a0,0
    106a:	030d                	addi	t1,t1,3
    106c:	0000097f          	radd16	s2,zero,zero
    1070:	0501                	addi	a0,a0,0
    1072:	030e                	slli	t1,t1,0x3
    1074:	0901                	addi	s2,s2,0
    1076:	0000                	unimp
    1078:	0501                	addi	a0,a0,0
    107a:	0003061b          	sext.w	a2,t1
    107e:	0009                	c.nop	2
    1080:	0100                	addi	s0,sp,128
    1082:	1f05                	addi	t5,t5,-31
    1084:	0306                	slli	t1,t1,0x1
    1086:	0900                	addi	s0,sp,144
    1088:	0000                	unimp
    108a:	0501                	addi	a0,a0,0
    108c:	0312                	slli	t1,t1,0x4
    108e:	0900                	addi	s0,sp,144
    1090:	0000                	unimp
    1092:	0501                	addi	a0,a0,0
    1094:	031c                	addi	a5,sp,384
    1096:	0900                	addi	s0,sp,144
    1098:	0000                	unimp
    109a:	0501                	addi	a0,a0,0
    109c:	0605                	addi	a2,a2,1
    109e:	00090003          	lb	zero,0(s2)
    10a2:	0100                	addi	s0,sp,128
    10a4:	0e05                	addi	t3,t3,1
    10a6:	00090003          	lb	zero,0(s2)
    10aa:	0100                	addi	s0,sp,128
    10ac:	0505                	addi	a0,a0,1
    10ae:	00090103          	lb	sp,0(s2)
    10b2:	0100                	addi	s0,sp,128
    10b4:	0104                	addi	s1,sp,128
    10b6:	0306                	slli	t1,t1,0x1
    10b8:	000900d7          	0x900d7
    10bc:	0100                	addi	s0,sp,128
    10be:	0e05                	addi	t3,t3,1
    10c0:	00097e03          	0x97e03
    10c4:	0100                	addi	s0,sp,128
    10c6:	0505                	addi	a0,a0,1
    10c8:	0306                	slli	t1,t1,0x1
    10ca:	0901                	addi	s2,s2,0
    10cc:	0000                	unimp
    10ce:	0501                	addi	a0,a0,0
    10d0:	0612                	slli	a2,a2,0x4
    10d2:	00090003          	lb	zero,0(s2)
    10d6:	0100                	addi	s0,sp,128
    10d8:	0505                	addi	a0,a0,1
    10da:	0306                	slli	t1,t1,0x1
    10dc:	0901                	addi	s2,s2,0
    10de:	0000                	unimp
    10e0:	0301                	addi	t1,t1,0
    10e2:	0900                	addi	s0,sp,144
    10e4:	0000                	unimp
    10e6:	0301                	addi	t1,t1,0
    10e8:	0901                	addi	s2,s2,0
    10ea:	0000                	unimp
    10ec:	0501                	addi	a0,a0,0
    10ee:	061c                	addi	a5,sp,768
    10f0:	00090003          	lb	zero,0(s2)
    10f4:	0100                	addi	s0,sp,128
    10f6:	1a05                	addi	s4,s4,-31
    10f8:	0306                	slli	t1,t1,0x1
    10fa:	094e                	slli	s2,s2,0x13
    10fc:	0000                	unimp
    10fe:	0501                	addi	a0,a0,0
    1100:	0309                	addi	t1,t1,2
    1102:	0901                	addi	s2,s2,0
    1104:	0000                	unimp
    1106:	0501                	addi	a0,a0,0
    1108:	061e                	slli	a2,a2,0x7
    110a:	00090003          	lb	zero,0(s2)
    110e:	0100                	addi	s0,sp,128
    1110:	0905                	addi	s2,s2,1
    1112:	0306                	slli	t1,t1,0x1
    1114:	0901                	addi	s2,s2,0
    1116:	0000                	unimp
    1118:	0301                	addi	t1,t1,0
    111a:	0901                	addi	s2,s2,0
    111c:	0000                	unimp
    111e:	0501                	addi	a0,a0,0
    1120:	0305                	addi	t1,t1,1
    1122:	097d                	addi	s2,s2,31
    1124:	0000                	unimp
    1126:	0501                	addi	a0,a0,0
    1128:	031a                	slli	t1,t1,0x6
    112a:	0900                	addi	s0,sp,144
    112c:	0000                	unimp
    112e:	0501                	addi	a0,a0,0
    1130:	0309                	addi	t1,t1,2
    1132:	0901                	addi	s2,s2,0
    1134:	0000                	unimp
    1136:	0501                	addi	a0,a0,0
    1138:	061e                	slli	a2,a2,0x7
    113a:	00090003          	lb	zero,0(s2)
    113e:	0100                	addi	s0,sp,128
    1140:	0905                	addi	s2,s2,1
    1142:	0306                	slli	t1,t1,0x1
    1144:	0901                	addi	s2,s2,0
    1146:	0000                	unimp
    1148:	0501                	addi	a0,a0,0
    114a:	0615                	addi	a2,a2,5
    114c:	00093103          	ld	sp,0(s2)
    1150:	0100                	addi	s0,sp,128
    1152:	0f05                	addi	t5,t5,1
    1154:	00097f03          	0x97f03
    1158:	0100                	addi	s0,sp,128
    115a:	0505                	addi	a0,a0,1
    115c:	0306                	slli	t1,t1,0x1
    115e:	0901                	addi	s2,s2,0
    1160:	0000                	unimp
    1162:	0501                	addi	a0,a0,0
    1164:	0315                	addi	t1,t1,5
    1166:	0900                	addi	s0,sp,144
    1168:	0000                	unimp
    116a:	0501                	addi	a0,a0,0
    116c:	0028                	addi	a0,sp,8
    116e:	0402                	c.slli64	s0
    1170:	0302                	c.slli64	t1
    1172:	0900                	addi	s0,sp,144
    1174:	0000                	unimp
    1176:	0501                	addi	a0,a0,0
    1178:	0035                	c.nop	13
    117a:	0402                	c.slli64	s0
    117c:	0602                	c.slli64	a2
    117e:	00090003          	lb	zero,0(s2)
    1182:	0100                	addi	s0,sp,128
    1184:	0505                	addi	a0,a0,1
    1186:	0200                	addi	s0,sp,256
    1188:	0204                	addi	s1,sp,256
    118a:	0306                	slli	t1,t1,0x1
    118c:	0900                	addi	s0,sp,144
    118e:	0000                	unimp
    1190:	0501                	addi	a0,a0,0
    1192:	0015                	c.nop	5
    1194:	0402                	c.slli64	s0
    1196:	0602                	c.slli64	a2
    1198:	00090003          	lb	zero,0(s2)
    119c:	0100                	addi	s0,sp,128
    119e:	0505                	addi	a0,a0,1
    11a0:	0200                	addi	s0,sp,256
    11a2:	0204                	addi	s1,sp,256
    11a4:	00090003          	lb	zero,0(s2)
    11a8:	0100                	addi	s0,sp,128
    11aa:	1505                	addi	a0,a0,-31
    11ac:	0200                	addi	s0,sp,256
    11ae:	0204                	addi	s1,sp,256
    11b0:	0306                	slli	t1,t1,0x1
    11b2:	0900                	addi	s0,sp,144
    11b4:	0000                	unimp
    11b6:	0501                	addi	a0,a0,0
    11b8:	0305                	addi	t1,t1,1
    11ba:	0901                	addi	s2,s2,0
    11bc:	0000                	unimp
    11be:	0501                	addi	a0,a0,0
    11c0:	0306                	slli	t1,t1,0x1
    11c2:	0900                	addi	s0,sp,144
    11c4:	0000                	unimp
    11c6:	0501                	addi	a0,a0,0
    11c8:	0305                	addi	t1,t1,1
    11ca:	0901                	addi	s2,s2,0
    11cc:	0000                	unimp
    11ce:	0501                	addi	a0,a0,0
    11d0:	060d                	addi	a2,a2,3
    11d2:	00090003          	lb	zero,0(s2)
    11d6:	0100                	addi	s0,sp,128
    11d8:	1a05                	addi	s4,s4,-31
    11da:	0306                	slli	t1,t1,0x1
    11dc:	0900                	addi	s0,sp,144
    11de:	0000                	unimp
    11e0:	0501                	addi	a0,a0,0
    11e2:	0309                	addi	t1,t1,2
    11e4:	0901                	addi	s2,s2,0
    11e6:	0000                	unimp
    11e8:	0501                	addi	a0,a0,0
    11ea:	0612                	slli	a2,a2,0x4
    11ec:	00090003          	lb	zero,0(s2)
    11f0:	0100                	addi	s0,sp,128
    11f2:	1605                	addi	a2,a2,-31
    11f4:	00090003          	lb	zero,0(s2)
    11f8:	0100                	addi	s0,sp,128
    11fa:	0905                	addi	s2,s2,1
    11fc:	00090003          	lb	zero,0(s2)
    1200:	0100                	addi	s0,sp,128
    1202:	1a05                	addi	s4,s4,-31
    1204:	00097f03          	0x97f03
    1208:	0100                	addi	s0,sp,128
    120a:	0905                	addi	s2,s2,1
    120c:	0306                	slli	t1,t1,0x1
    120e:	0901                	addi	s2,s2,0
    1210:	0000                	unimp
    1212:	0501                	addi	a0,a0,0
    1214:	0612                	slli	a2,a2,0x4
    1216:	00090003          	lb	zero,0(s2)
    121a:	0100                	addi	s0,sp,128
    121c:	1605                	addi	a2,a2,-31
    121e:	00090003          	lb	zero,0(s2)
    1222:	0100                	addi	s0,sp,128
    1224:	0905                	addi	s2,s2,1
    1226:	00090003          	lb	zero,0(s2)
    122a:	0100                	addi	s0,sp,128
    122c:	0505                	addi	a0,a0,1
    122e:	0200                	addi	s0,sp,256
    1230:	0204                	addi	s1,sp,256
    1232:	0306                	slli	t1,t1,0x1
    1234:	0000097f          	radd16	s2,zero,zero
    1238:	0501                	addi	a0,a0,0
    123a:	001a                	c.slli	zero,0x6
    123c:	0402                	c.slli64	s0
    123e:	0302                	c.slli64	t1
    1240:	0900                	addi	s0,sp,144
    1242:	0000                	unimp
    1244:	0501                	addi	a0,a0,0
    1246:	0305                	addi	t1,t1,1
    1248:	0906                	slli	s2,s2,0x1
    124a:	0000                	unimp
    124c:	0301                	addi	t1,t1,0
    124e:	0900                	addi	s0,sp,144
    1250:	0000                	unimp
    1252:	0401                	addi	s0,s0,0
    1254:	0504                	addi	s1,sp,640
    1256:	030d                	addi	t1,t1,3
    1258:	7fa1                	lui	t6,0xfffe8
    125a:	0009                	c.nop	2
    125c:	0100                	addi	s0,sp,128
    125e:	1305                	addi	t1,t1,-31
    1260:	0306                	slli	t1,t1,0x1
    1262:	0900                	addi	s0,sp,144
    1264:	0000                	unimp
    1266:	0501                	addi	a0,a0,0
    1268:	0621                	addi	a2,a2,8
    126a:	00090003          	lb	zero,0(s2)
    126e:	0100                	addi	s0,sp,128
    1270:	3105                	addiw	sp,sp,-31
    1272:	00090003          	lb	zero,0(s2)
    1276:	0100                	addi	s0,sp,128
    1278:	2c05                	addiw	s8,s8,1
    127a:	0306                	slli	t1,t1,0x1
    127c:	0900                	addi	s0,sp,144
    127e:	0000                	unimp
    1280:	0501                	addi	a0,a0,0
    1282:	034a                	slli	t1,t1,0x12
    1284:	0900                	addi	s0,sp,144
    1286:	0000                	unimp
    1288:	0501                	addi	a0,a0,0
    128a:	0331                	addi	t1,t1,12
    128c:	0900                	addi	s0,sp,144
    128e:	0000                	unimp
    1290:	0501                	addi	a0,a0,0
    1292:	0644                	addi	s1,sp,772
    1294:	00090003          	lb	zero,0(s2)
    1298:	0100                	addi	s0,sp,128
    129a:	5f05                	li	t5,-31
    129c:	0306                	slli	t1,t1,0x1
    129e:	0900                	addi	s0,sp,144
    12a0:	0000                	unimp
    12a2:	0501                	addi	a0,a0,0
    12a4:	034a                	slli	t1,t1,0x12
    12a6:	0900                	addi	s0,sp,144
    12a8:	0000                	unimp
    12aa:	0501                	addi	a0,a0,0
    12ac:	035f 0900 0000      	0x900035f
    12b2:	0501                	addi	a0,a0,0
    12b4:	0321                	addi	t1,t1,8
    12b6:	0900                	addi	s0,sp,144
    12b8:	0000                	unimp
    12ba:	0501                	addi	a0,a0,0
    12bc:	034a                	slli	t1,t1,0x12
    12be:	0900                	addi	s0,sp,144
    12c0:	0000                	unimp
    12c2:	0501                	addi	a0,a0,0
    12c4:	0621                	addi	a2,a2,8
    12c6:	00090003          	lb	zero,0(s2)
    12ca:	0100                	addi	s0,sp,128
    12cc:	3105                	addiw	sp,sp,-31
    12ce:	00090003          	lb	zero,0(s2)
    12d2:	0100                	addi	s0,sp,128
    12d4:	6405                	lui	s0,0x1
    12d6:	00090003          	lb	zero,0(s2)
    12da:	0100                	addi	s0,sp,128
    12dc:	6a05                	lui	s4,0x1
    12de:	0306                	slli	t1,t1,0x1
    12e0:	0900                	addi	s0,sp,144
    12e2:	0000                	unimp
    12e4:	0401                	addi	s0,s0,0
    12e6:	0501                	addi	a0,a0,0
    12e8:	0605                	addi	a2,a2,1
    12ea:	0900df03          	lhu	t5,144(ra)
    12ee:	0000                	unimp
    12f0:	0501                	addi	a0,a0,0
    12f2:	0601                	addi	a2,a2,0
    12f4:	00090403          	lb	s0,0(s2)
    12f8:	0100                	addi	s0,sp,128
    12fa:	0505                	addi	a0,a0,1
    12fc:	00097c03          	0x97c03
    1300:	0100                	addi	s0,sp,128
    1302:	0105                	addi	sp,sp,1
    1304:	00090403          	lb	s0,0(s2)
    1308:	0100                	addi	s0,sp,128
    130a:	0505                	addi	a0,a0,1
    130c:	00097c03          	0x97c03
    1310:	0100                	addi	s0,sp,128
    1312:	0204                	addi	s1,sp,256
    1314:	0e05                	addi	t3,t3,1
    1316:	097f9e03          	lh	t3,151(t6) # fffffffffffe8097 <pool+0xffffffffffef1097>
    131a:	0000                	unimp
    131c:	0401                	addi	s0,s0,0
    131e:	0501                	addi	a0,a0,0
    1320:	060d                	addi	a2,a2,3
    1322:	0900de03          	lhu	t3,144(ra)
    1326:	0000                	unimp
    1328:	0501                	addi	a0,a0,0
    132a:	0611                	addi	a2,a2,4
    132c:	00090003          	lb	zero,0(s2)
    1330:	0100                	addi	s0,sp,128
    1332:	0009                	c.nop	2
    1334:	0000                	unimp
    1336:	0101                	addi	sp,sp,0
    1338:	0105                	addi	sp,sp,1
    133a:	0900                	addi	s0,sp,144
    133c:	0002                	c.slli64	zero
    133e:	0000                	unimp
    1340:	0000                	unimp
    1342:	0000                	unimp
    1344:	0300                	addi	s0,sp,384
    1346:	01a2                	slli	gp,gp,0x8
    1348:	0501                	addi	a0,a0,0
    134a:	0305                	addi	t1,t1,1
    134c:	7ee9                	lui	t4,0xffffa
    134e:	0009                	c.nop	2
    1350:	0100                	addi	s0,sp,128
    1352:	0105                	addi	sp,sp,1
    1354:	0306                	slli	t1,t1,0x1
    1356:	00090197          	auipc	gp,0x90
    135a:	0100                	addi	s0,sp,128
    135c:	0f05                	addi	t5,t5,1
    135e:	097ee903          	lwu	s2,151(t4) # ffffffffffffa097 <pool+0xfffffffffff03097>
    1362:	0000                	unimp
    1364:	0501                	addi	a0,a0,0
    1366:	031a                	slli	t1,t1,0x6
    1368:	0901                	addi	s2,s2,0
    136a:	0000                	unimp
    136c:	0501                	addi	a0,a0,0
    136e:	0301                	addi	t1,t1,0
    1370:	0196                	slli	gp,gp,0x5
    1372:	0009                	c.nop	2
    1374:	0100                	addi	s0,sp,128
    1376:	0f05                	addi	t5,t5,1
    1378:	097ee903          	lwu	s2,151(t4)
    137c:	0000                	unimp
    137e:	0501                	addi	a0,a0,0
    1380:	0605                	addi	a2,a2,1
    1382:	00090103          	lb	sp,0(s2)
    1386:	0100                	addi	s0,sp,128
    1388:	1a05                	addi	s4,s4,-31
    138a:	0306                	slli	t1,t1,0x1
    138c:	0900                	addi	s0,sp,144
    138e:	0000                	unimp
    1390:	0501                	addi	a0,a0,0
    1392:	0309                	addi	t1,t1,2
    1394:	0000093f 03010501 	0x30105010000093f
    139c:	000900d7          	0x900d7
    13a0:	0100                	addi	s0,sp,128
    13a2:	0905                	addi	s2,s2,1
    13a4:	097fa903          	lw	s2,151(t6)
    13a8:	0000                	unimp
    13aa:	0501                	addi	a0,a0,0
    13ac:	0301                	addi	t1,t1,0
    13ae:	000900d7          	0x900d7
    13b2:	0100                	addi	s0,sp,128
    13b4:	0905                	addi	s2,s2,1
    13b6:	097fa903          	lw	s2,151(t6)
    13ba:	0000                	unimp
    13bc:	0501                	addi	a0,a0,0
    13be:	0301                	addi	t1,t1,0
    13c0:	000900d7          	0x900d7
    13c4:	0100                	addi	s0,sp,128
    13c6:	0905                	addi	s2,s2,1
    13c8:	097fa903          	lw	s2,151(t6)
    13cc:	0000                	unimp
    13ce:	0901                	addi	s2,s2,0
    13d0:	0000                	unimp
    13d2:	0100                	addi	s0,sp,128
    13d4:	01              	Address 0x00000000000013d4 is out of bounds.


Disassembly of section .debug_str:

0000000000000000 <.LASF161>:
   0:	7270                	ld	a2,224(a2)
HeapMgr::~HeapMgr(){}
   2:	6e69                	lui	t3,0x1a
HeapMgr::HeapMgr(ptr_t addr,xlen_t len){
   4:	6674                	ld	a3,200(a2)
	...

0000000000000007 <.LASF57>:
   7:	7270                	ld	a2,224(a2)
    this->pool=addr;
   9:	6e69                	lui	t3,0x1a
   b:	0074                	addi	a3,sp,12

000000000000000d <.LASF114>:
   d:	7964                	ld	s1,240(a0)
HeapMgr::HeapMgr(ptr_t addr,xlen_t len){
   f:	506e                	0x506e
    tlsf_create_with_pool(reinterpret_cast<ptr_t>(addr),len);
  11:	6761                	lui	a4,0x18
  13:	7365                	lui	t1,0xffff9
	...

0000000000000016 <.LASF90>:
  16:	7372                	ld	t1,312(sp)
  18:	6275                	lui	tp,0x1d
	...

000000000000001b <.LASF137>:
  1b:	5f5f 6e69 635f      	0x635f6e695f5f
HeapMgrGrowable::HeapMgrGrowable(ptr_t addr,xlen_t len,PageMgr &pmgr):HeapMgr(addr,len),pmgr(pmgr),growsize(2){
  21:	7268                	ld	a0,224(a2)
  23:	          	jr	1687(t1) # ffffffffffff9697 <pool+0xfffffffffff02697>

0000000000000025 <.LASF7>:
  25:	657a6973          	csrrsi	s2,0x657,20
  29:	745f        	0x4e5a5f00745f

000000000000002c <.LASF91>:
  2c:	5a5f 354e 6c61      	0x6c61354e5a5f
  32:	6f6c                	ld	a1,216(a4)
    this->pool=addr;
  34:	61503763          	0x61503763
    tlsf_create_with_pool(reinterpret_cast<ptr_t>(addr),len);
  38:	674d6567          	0x674d6567
HeapMgrGrowable::HeapMgrGrowable(ptr_t addr,xlen_t len,PageMgr &pmgr):HeapMgr(addr,len),pmgr(pmgr),growsize(2){
  3c:	3472                	fld	fs0,312(sp)
  3e:	7372                	ld	t1,312(sp)
    tlsf_create_with_pool(reinterpret_cast<ptr_t>(addr),len);
  40:	6275                	lui	tp,0x1d
  42:	6d45                	lui	s10,0x11
	...

0000000000000045 <.LASF101>:
  45:	776f7267          	0x776f7267
HeapMgrGrowable::HeapMgrGrowable(ptr_t addr,xlen_t len,PageMgr &pmgr):HeapMgr(addr,len),pmgr(pmgr),growsize(2){
  49:	6548                	ld	a0,136(a0)
  4b:	7061                	c.lui	zero,0xffff8
	...

000000000000004e <.LASF47>:
  4e:	7570                	ld	a2,232(a0)
  inline list(){ head=tail=nullptr; }
  50:	625f6873          	csrrsi	a6,0x625,30
  54:	6361                	lui	t1,0x18
  56:	          	0x6572006b

0000000000000058 <.LASF115>:
  58:	6572                	ld	a0,280(sp)
  5a:	76726573          	csrrsi	a0,0x767,4
        ptr_t rt=(tlsf_malloc(size));
  5e:	6465                	lui	s0,0x19
  60:	6f4e                	ld	t5,208(sp)
  62:	6564                	ld	s1,200(a0)
	...

0000000000000065 <.LASF99>:
  65:	7562                	ld	a0,56(sp)
  67:	6464                	ld	s1,200(s0)
        if(rt!=nullptr)return rt;
  69:	4e79                	li	t3,30
  6b:	7365646f          	jal	s0,567a1 <.LLST42+0x54c6b>
	...

0000000000000070 <.LASF60>:
  70:	7270                	ld	a2,224(a2)
        ptr_t rt=(tlsf_malloc(size));
  72:	7665                	lui	a2,0xffff9
	...

0000000000000075 <.LASF65>:
  75:	616d                	addi	sp,sp,240
  77:	3c78                	fld	fa4,248(s0)
}
  79:	6e75                	lui	t3,0x1d
  7b:	6e676973          	csrrsi	s2,0x6e6,14
    reservedNode=(klib::ListNode<Span>*)(alloc(sizeof(klib::ListNode<Span>)));
  7f:	6465                	lui	s0,0x19
}
  81:	6320                	ld	s0,64(a4)
  83:	6168                	ld	a0,192(a0)
  85:	3e72                	fld	ft8,312(sp)
	...

0000000000000088 <.LASF122>:
  88:	6e617053          	0x6e617053
	...

000000000000008d <.LASF124>:
  8d:	6165486b          	0x6165486b
HeapMgrGrowable::HeapMgrGrowable(HeapMgr &other,PageMgr &pmgr):pmgr(pmgr),HeapMgr(other),growsize(2){
  91:	4d70                	lw	a2,92(a0)
  93:	          	0x6c007267

0000000000000096 <.LASF6>:
  96:	6f6c                	ld	a1,216(a4)
  98:	676e                	ld	a4,216(sp)
  9a:	6920                	ld	s0,80(a0)
  9c:	746e                	ld	s0,248(sp)
	...

000000000000009f <.LASF121>:
  9f:	5a5f 354e 6c61      	0x6c61354e5a5f
  a5:	6f6c                	ld	a1,216(a4)
  a7:	48353163          	0x48353163
  ab:	6165                	addi	sp,sp,112
  ad:	4d70                	lw	a2,92(a0)
  af:	72477267          	0x72477267
  b3:	6261776f          	jal	a4,176d9 <.LLST42+0x15ba3>
  b7:	656c                	ld	a1,200(a0)
  b9:	3444                	fld	fs1,168(s0)
  bb:	7645                	lui	a2,0xffff1
	...

00000000000000be <.LASF160>:
  be:	6c74                	ld	a3,216(s0)
        ptr_t rt=(tlsf_malloc(size));
  c0:	635f6673          	csrrsi	a2,0x635,30
  c4:	6572                	ld	a0,280(sp)
  c6:	7461                	lui	s0,0xffff8
        if(rt!=nullptr)return rt;
  c8:	5f65                	li	t5,-7
  ca:	68746977          	0x68746977
        ptr_t rt=(tlsf_malloc(size));
  ce:	705f 6f6f 006c      	0x6c6f6f705f

00000000000000d4 <.LASF157>:
  d4:	6e75                	lui	t3,0x1d
  d6:	776f6e6b          	0x776f6e6b
}
  da:	006e                	c.slli	zero,0x1b

00000000000000dc <.LASF158>:
  dc:	7265706f          	j	57802 <.LLST42+0x55ccc>
  e0:	7461                	lui	s0,0xffff8
  e2:	6e20726f          	jal	tp,77c4 <.LLST42+0x5c8e>
  e6:	7765                	lui	a4,0xffff9
  e8:	5b20                	lw	s0,112(a4)
  ea:	005d                	c.nop	23

00000000000000ec <.LASF146>:
  ec:	6461                	lui	s0,0x18
HeapMgrGrowable::~HeapMgrGrowable(){
  ee:	7264                	ld	s1,224(a2)
	...

00000000000000f1 <.LASF133>:
  f1:	6564726f          	jal	tp,47747 <.LLST42+0x45c11>
    DBG(printf("%s()\n",__func__);)
  f5:	0072                	c.slli	zero,0x1c

00000000000000f7 <.LASF151>:
  f7:	5a5f 354e 6c61      	0x6c61354e5a5f
HeapMgrGrowable::~HeapMgrGrowable(){
  fd:	6f6c                	ld	a1,216(a4)
  ff:	65483763          	0x65483763
    DBG(printf("%s()\n",__func__);)
 103:	7061                	c.lui	zero,0xffff8
 105:	674d                	lui	a4,0x13
 107:	4472                	lw	s0,28(sp)
HeapMgrGrowable::~HeapMgrGrowable(){
 109:	4532                	lw	a0,12(sp)
 10b:	0076                	c.slli	zero,0x1d

000000000000010d <.LASF98>:
 10d:	7562                	ld	a0,56(sp)
 10f:	6464                	ld	s1,200(s0)
 111:	5479                	li	s0,-2
 113:	6572                	ld	a0,280(sp)
 115:	5365                	li	t1,-7
 117:	7a69                	lui	s4,0xffffa
 119:	0065                	c.nop	25

000000000000011b <.LASF30>:
 11b:	656e                	ld	a0,216(sp)
    DBG(printf("%s()\n",__func__);)
 11d:	7478                	ld	a4,232(s0)
	...

0000000000000120 <.LASF180>:
 120:	475f 4f4c 4142      	0x41424f4c475f
        printf("pool=%p\n",pool);
 126:	5f4c                	lw	a1,60(a4)
 128:	735f 6275 495f      	0x495f6275735f
 12e:	5f5f 4e5a 6135      	0x61354e5a5f5f
 134:	6c6c                	ld	a1,216(s0)
 136:	4837636f          	jal	t1,76db8 <.LLST42+0x75282>
        tlsf_walk_pool(pool);
 13a:	6165                	addi	sp,sp,112
 13c:	4d70                	lw	a2,92(a0)
 13e:	32437267          	0x32437267
 142:	5045                	c.li	zero,-15
        if(!dynPages.empty())for(auto node=dynPages.head;node->iter.next!=nullptr;node=node->iter.next){
 144:	6d76                	ld	s10,344(sp)
	...

0000000000000147 <.LASF174>:
 147:	6d6f682f          	0x6d6f682f
 14b:	2f65                	addiw	t5,t5,25
 14d:	797a                	ld	s2,440(sp)
 14f:	6f432f63          	0x6f432f63
 153:	6964                	ld	s1,208(a0)
 155:	676e                	ld	a4,216(sp)
 157:	4f56522f          	0x4f56522f
            tlsf_walk_pool((ptr_t)vm::pn2addr(node->data.first));
 15b:	          	0x6f6c0053

000000000000015d <.LASF8>:
 15d:	6f6c                	ld	a1,216(a4)
 15f:	676e                	ld	a4,216(sp)
 161:	6c20                	ld	s0,88(s0)
 163:	20676e6f          	jal	t3,76369 <.LLST42+0x74833>
        if(!dynPages.empty())for(auto node=dynPages.head;node->iter.next!=nullptr;node=node->iter.next){
 167:	6e69                	lui	t3,0x1a
 169:	0074                	addi	a3,sp,12

000000000000016b <.LASF10>:
 16b:	6e676973          	csrrsi	s2,0x6e6,14
 16f:	6465                	lui	s0,0x19
    while(!dynPages.empty()){
 171:	6320                	ld	s0,64(a4)
 173:	6168                	ld	a0,192(a0)
 175:	0072                	c.slli	zero,0x1c

0000000000000177 <.LASF25>:
 177:	7562                	ld	a0,56(sp)
        DBG(printf("0x%lx %d\n",span.first,span.second);)
 179:	6666                	ld	a2,88(sp)
	...

000000000000017c <.LASF144>:
 17c:	6568746f          	jal	s0,877d2 <.LLST42+0x85c9c>
 180:	0072                	c.slli	zero,0x1c

0000000000000182 <.LASF68>:
 182:	5a5f 344e 6c6b      	0x6c6b344e5a5f
    head=head->iter.next;
 188:	6269                	lui	tp,0x1a
 18a:	6e696d33          	0x6e696d33
    delete head;
 18e:	6849                	lui	a6,0x12
void HeapMgr::free(ptr_t ptr){ tlsf_free(ptr); }
 190:	4545                	li	a0,17
 192:	5f54                	lw	a3,60(a4)
 194:	535f3153          	0x535f3153
        DBG(printf("0x%lx %d\n",span.first,span.second);)
 198:	5f31                	li	t5,-20
	...

000000000000019b <.LASF63>:
 19b:	694c                	ld	a1,144(a0)
 19d:	6f4e7473          	csrrci	s0,0x6f4,28
 1a1:	6564                	ld	s1,200(a0)
	...

00000000000001a4 <.LASF24>:
 1a4:	62696c6b          	0x62696c6b
	...

00000000000001a9 <.LASF39>:
 1a9:	6f636573          	csrrsi	a0,0x6f6,6
    while(!dynPages.empty()){
 1ad:	646e                	ld	s0,216(sp)
	...

00000000000001b0 <.LASF181>:
 1b0:	5f5f 7473 7461      	0x746174735f5f
    if(head==tail)tail=nullptr;
 1b6:	6369                	lui	t1,0x1a
    T rt=head->data;
 1b8:	695f 696e 6974      	0x6974696e695f
 1be:	6c61                	lui	s8,0x18
    if(head==tail)tail=nullptr;
 1c0:	7a69                	lui	s4,0xffffa
 1c2:	7461                	lui	s0,0xffff8
 1c4:	6f69                	lui	t5,0x1a
 1c6:	5f6e                	lw	t5,248(sp)
 1c8:	6e61                	lui	t3,0x18
 1ca:	5f64                	lw	s1,124(a4)
}
 1cc:	6564                	ld	s1,200(a0)
 1ce:	75727473          	csrrci	s0,0x757,4
 1d2:	6f697463          	bgeu	s2,s6,8ba <.LASF170+0xe>
 1d6:	5f6e                	lw	t5,248(sp)
 1d8:	0030                	addi	a2,sp,8

00000000000001da <.LASF31>:
 1da:	6d65                	lui	s10,0x19
 1dc:	7470                	ld	a2,232(s0)
 1de:	0079                	c.nop	30

00000000000001e0 <.LASF41>:
 1e0:	696c                	ld	a1,208(a0)
 1e2:	646e7473          	csrrci	s0,0x646,28
 1e6:	7470                	ld	a2,232(s0)
 1e8:	0072                	c.slli	zero,0x1c

00000000000001ea <.LASF0>:
 1ea:	7470                	ld	a2,232(s0)
ptr_t HeapMgr::alloc(xlen_t size){
 1ec:	5f72                	lw	t5,60(sp)
 1ee:	0074                	addi	a3,sp,12

00000000000001f0 <.LASF138>:
 1f0:	5a5f 354e 6c61      	0x6c61354e5a5f
 1f6:	6f6c                	ld	a1,216(a4)
 1f8:	61503763          	0x61503763
 1fc:	674d6567          	0x674d6567
        ptr_t rt=(tlsf_malloc(size));
 200:	4472                	lw	s0,28(sp)
 202:	4532                	lw	a0,12(sp)
 204:	0076                	c.slli	zero,0x1d

0000000000000206 <.LASF132>:
 206:	656e                	ld	a0,216(sp)
        if(rt!=nullptr)return rt;
 208:	646f4e77          	0x646f4e77
        ptr_t rt=(tlsf_malloc(size));
 20c:	0065                	c.nop	25

000000000000020e <.LASF109>:
 20e:	5a5f 354e 6c61      	0x6c61354e5a5f
}
 214:	6f6c                	ld	a1,216(a4)
 216:	65483763          	0x65483763
 21a:	7061                	c.lui	zero,0xffff8
        ptr_t rt=(tlsf_malloc(size));
 21c:	674d                	lui	a4,0x13
 21e:	3472                	fld	fs0,312(sp)
 220:	7266                	ld	tp,120(sp)
 222:	6565                	lui	a0,0x19
}
 224:	5045                	c.li	zero,-15
 226:	0076                	c.slli	zero,0x1d

0000000000000228 <.LASF156>:
 228:	5a5f 6c64 7650      	0x76506c645a5f
 22e:	006d                	c.nop	27

0000000000000230 <.LASF40>:
 230:	696c                	ld	a1,208(a0)
 232:	6b3c7473          	csrrci	s0,0x6b3,24
ptr_t HeapMgr::alligned_alloc(xlen_t size,xlen_t alignment){
 236:	696c                	ld	a1,208(a0)
        ptr_t rt=(tlsf_memalign(alignment,size));
 238:	3a62                	fld	fs4,56(sp)
 23a:	703a                	0x703a
ptr_t HeapMgr::alligned_alloc(xlen_t size,xlen_t alignment){
 23c:	6961                	lui	s2,0x18
 23e:	3c72                	fld	fs8,312(sp)
 240:	6f6c                	ld	a1,216(a4)
 242:	676e                	ld	a4,216(sp)
 244:	7520                	ld	s0,104(a0)
 246:	736e                	ld	t1,248(sp)
 248:	6769                	lui	a4,0x1a
 24a:	656e                	ld	a0,216(sp)
 24c:	2064                	fld	fs1,192(s0)
 24e:	6e69                	lui	t3,0x1a
        ptr_t rt=(tlsf_memalign(alignment,size));
 250:	2c74                	fld	fa3,216(s0)
 252:	6920                	ld	s0,80(a0)
 254:	746e                	ld	s0,248(sp)
 256:	203e                	fld	ft0,456(sp)
        if(rt!=nullptr)return rt;
 258:	003e                	c.slli	zero,0xf

000000000000025a <.LASF56>:
 25a:	5a5f 344e 6c6b      	0x6c6b344e5a5f
}
 260:	6269                	lui	tp,0x1a
 262:	6c34                	ld	a3,88(s0)
 264:	7369                	lui	t1,0xffffa
 266:	4974                	lw	a3,84(a0)
        ptr_t rt=(tlsf_memalign(alignment,size));
 268:	534e                	lw	t1,240(sp)
 26a:	345f 6170 7269      	0x72696170345f
}
 270:	6d49                	lui	s10,0x12
 272:	4569                	li	a0,26
        ptr_t rt=(tlsf_memalign(alignment,size));
 274:	4545                	li	a0,17
 276:	6535                	lui	a0,0xd
 278:	706d                	c.lui	zero,0xffffb
 27a:	7974                	ld	a3,240(a0)
}
 27c:	7645                	lui	a2,0xffff1
	...

000000000000027f <.LASF78>:
 27f:	5a5f 324e 6d76      	0x6d76324e5a5f
 285:	326e7037          	lui	zero,0x326e7
 289:	6461                	lui	s0,0x18
 28b:	7264                	ld	s1,224(a2)
 28d:	6d45                	lui	s10,0x11
	...

0000000000000290 <.LASF113>:
 290:	6d70                	ld	a2,216(a0)
void HeapMgr::free(ptr_t ptr){ tlsf_free(ptr); }
 292:	          	0x69007267

0000000000000295 <.LASF43>:
 295:	6e69                	lui	t3,0x1a
 297:	74726573          	csrrsi	a0,0x747,4
 29b:	6641                	lui	a2,0x10
PageMgr::~PageMgr(){ delete[] buddyNodes; }
 29d:	6574                	ld	a3,200(a0)
 29f:	0072                	c.slli	zero,0x1c

00000000000002a1 <.LASF163>:
 2a1:	6c74                	ld	a3,216(s0)
 2a3:	665f6673          	csrrsi	a2,0x665,30
 2a7:	6572                	ld	a0,280(sp)
 2a9:	0065                	c.nop	25

00000000000002ab <.LASF19>:
 2ab:	6e65                	lui	t3,0x19
void HeapMgr::free(ptr_t ptr){ tlsf_free(ptr); }
 2ad:	6261                	lui	tp,0x18
 2af:	656c                	ld	a1,200(a0)
	...

00000000000002b2 <.LASF92>:
 2b2:	7270                	ld	a2,224(a2)
PageMgr::~PageMgr(){ delete[] buddyNodes; }
 2b4:	746e                	ld	s0,248(sp)
	...

00000000000002b7 <.LASF49>:
 2b7:	5a5f 344e 6c6b      	0x6c6b344e5a5f
 2bd:	6269                	lui	tp,0x1a
 2bf:	6c34                	ld	a3,88(s0)
 2c1:	7369                	lui	t1,0xffffa
 2c3:	4974                	lw	a3,84(a0)
PageNum PageMgr::alloc(size_t pages){
 2c5:	534e                	lw	t1,240(sp)
 2c7:	345f 6170 7269      	0x72696170345f
 2cd:	6d49                	lui	s10,0x12
 2cf:	4569                	li	a0,26
 2d1:	4545                	li	a0,17
 2d3:	7039                	c.lui	zero,0xfffee
 2d5:	7375                	lui	t1,0xffffd
 2d7:	5f68                	lw	a0,124(a4)
 2d9:	6162                	ld	sp,24(sp)
 2db:	50456b63          	bltu	a0,tp,7f1 <.LASF54+0x1>
 2df:	534e                	lw	t1,240(sp)
 2e1:	385f 694c 7473      	0x7473694c385f
 2e7:	6f4e                	ld	t5,208(sp)
    for(i=0;a>1;a>>=1,i++)r|=a&1;
 2e9:	6564                	ld	s1,200(a0)
 2eb:	5349                	li	t1,-14
 2ed:	5f32                	lw	t5,44(sp)
 2ef:	4545                	li	a0,17
	...

00000000000002f2 <.LASF131>:
 2f2:	6874                	ld	a3,208(s0)
    int i=0,r=0;
 2f4:	7369                	lui	t1,0xffffa
	...

00000000000002f7 <.LASF104>:
 2f7:	487e                	lw	a6,220(sp)
    for(i=0;a>1;a>>=1,i++)r|=a&1;
 2f9:	6165                	addi	sp,sp,112
 2fb:	4d70                	lw	a2,92(a0)
 2fd:	          	0x5f007267

0000000000000300 <.LASF28>:
 300:	5a5f 344e 6c6b      	0x6c6b344e5a5f
 306:	6269                	lui	tp,0x1a
 308:	6e697237          	lui	tp,0x6e697
 30c:	66756267          	0x66756267
 310:	6349                	lui	t1,0x12
 312:	6d4c                	ld	a1,152(a0)
 314:	3231                	addiw	tp,tp,-20
 316:	4538                	lw	a4,72(a0)
 318:	3345                	addiw	t1,t1,-15
 31a:	7570                	ld	a2,232(a0)
    if(buddyNodes[0]<rounded) return 0;
 31c:	4574                	lw	a3,76(a0)
 31e:	          	beq	s2,t1,9fe <.LASF103+0x15>

0000000000000320 <.LASF127>:
 320:	6e69                	lui	t3,0x1a
 322:	7469                	lui	s0,0xffffa
 324:	6548                	ld	a0,136(a0)
 326:	7061                	c.lui	zero,0xffff8
 328:	674d                	lui	a4,0x13
 32a:	0072                	c.slli	zero,0x1c

000000000000032c <.LASF21>:
 32c:	69616c63          	bltu	sp,s6,9c4 <.LASF53+0x20>
    for(xlen_t nd=0,size=rootOrder+1;rounded<=size;size-=1){ // find suitable node; size is biased size
 330:	006d                	c.nop	27

0000000000000332 <.LASF58>:
 332:	5a5f 344e 6c6b      	0x6c6b344e5a5f
    xlen_t node=0;
 338:	6269                	lui	tp,0x1a
 33a:	6c34                	ld	a3,88(s0)
        DBG(printf("nd=%ld ",nd);)
 33c:	7369                	lui	t1,0xffffa
 33e:	4974                	lw	a3,84(a0)
 340:	534e                	lw	t1,240(sp)
 342:	345f 6170 7269      	0x72696170345f
 348:	6d49                	lui	s10,0x12
 34a:	4569                	li	a0,26
 34c:	4545                	li	a0,17
 34e:	7035                	c.lui	zero,0xfffed
 350:	6972                	ld	s2,280(sp)
 352:	746e                	ld	s0,248(sp)
        if(buddyNodes[nd]==size && buddyNodes[nd]==rounded) node=nd;
 354:	5045                	c.li	zero,-15
 356:	7646                	ld	a2,112(sp)
 358:	4b52                	lw	s6,20(sp)
 35a:	455f3253          	0x455f3253
	...

000000000000035f <.LASF102>:
 35f:	5a5f 354e 6c61      	0x6c61354e5a5f
        inline constexpr xlen_t lsub(xlen_t x){return ((x+1)<<1)-1;}
 365:	6f6c                	ld	a1,216(a4)
 367:	65483763          	0x65483763
 36b:	7061                	c.lui	zero,0xffff8
 36d:	674d                	lui	a4,0x13
 36f:	3872                	fld	fa6,312(sp)
                if(klib::min(buddyNodes[lsub(nd)],buddyNodes[rsub(nd)])>=rounded)
 371:	776f7267          	0x776f7267
 375:	6548                	ld	a0,136(a0)
 377:	7061                	c.lui	zero,0xffff8
 379:	7645                	lui	a2,0xffff1
	...

000000000000037c <.LASF129>:
 37c:	5f5f 6e69 7469      	0x74696e695f5f
 382:	6169                	addi	sp,sp,208
 384:	696c                	ld	a1,208(a0)
 386:	657a                	ld	a0,408(sp)
 388:	705f        	0x73757000705f

000000000000038b <.LASF51>:
 38b:	7570                	ld	a2,232(a0)
 38d:	665f6873          	csrrsi	a6,0x665,30
                    nd=buddyNodes[lsub(nd)]<buddyNodes[rsub(nd)]?lsub(nd):rsub(nd);
 391:	6f72                	ld	t5,280(sp)
 393:	746e                	ld	s0,248(sp)
	...

0000000000000396 <.LASF59>:
 396:	694c                	ld	a1,144(a0)
    for(xlen_t nd=0,size=rootOrder+1;rounded<=size;size-=1){ // find suitable node; size is biased size
 398:	6f4e7473          	csrrci	s0,0x6f4,28
    assert(node>0);
 39c:	6564                	ld	s1,200(a0)
 39e:	6b3c                	ld	a5,80(a4)
 3a0:	696c                	ld	a1,208(a0)
 3a2:	3a62                	fld	fs4,56(sp)
 3a4:	703a                	0x703a
 3a6:	6961                	lui	s2,0x18
 3a8:	3c72                	fld	fs8,312(sp)
 3aa:	6f6c                	ld	a1,216(a4)
    buddyNodes[node]=0;
 3ac:	676e                	ld	a4,216(sp)
 3ae:	7520                	ld	s0,104(a0)
 3b0:	736e                	ld	t1,248(sp)
 3b2:	6769                	lui	a4,0x1a
 3b4:	656e                	ld	a0,216(sp)
 3b6:	2064                	fld	fs1,192(s0)
    for(xlen_t nd=prnt(node);nd>0;nd=prnt(nd))
 3b8:	6e69                	lui	t3,0x1a
 3ba:	2c74                	fld	fa3,216(s0)
        buddyNodes[nd]=klib::max(buddyNodes[lsub(nd)],buddyNodes[rsub(nd)]);
 3bc:	6920                	ld	s0,80(a0)
 3be:	746e                	ld	s0,248(sp)
 3c0:	203e                	fld	ft0,456(sp)
 3c2:	003e                	c.slli	zero,0xf

00000000000003c4 <.LASF77>:
 3c4:	6e70                	ld	a2,216(a2)
 3c6:	6132                	ld	sp,264(sp)
 3c8:	6464                	ld	s1,200(s0)
 3ca:	0072                	c.slli	zero,0x1c

00000000000003cc <.LASF142>:
 3cc:	6e617073          	csrci	0x6e6,2
	...

00000000000003d1 <.LASF171>:
 3d1:	6c74                	ld	a3,216(s0)
 3d3:	615f6673          	csrrsi	a2,0x615,30
        inline constexpr xlen_t prnt(xlen_t x){return ((x+1)>>1)-1;}
 3d7:	6464                	ld	s1,200(s0)
 3d9:	705f 6f6f 006c      	0x6c6f6f705f

00000000000003df <.LASF48>:
 3df:	5a5f 344e 6c6b      	0x6c6b344e5a5f
 3e5:	6269                	lui	tp,0x1a
 3e7:	6c34                	ld	a3,88(s0)
 3e9:	7369                	lui	t1,0xffffa
 3eb:	4974                	lw	a3,84(a0)
    for(xlen_t nd=prnt(node);nd>0;nd=prnt(nd))
 3ed:	534e                	lw	t1,240(sp)
 3ef:	345f 6170 7269      	0x72696170345f
    buddyNodes[0]=klib::max(buddyNodes[lsub(0)],buddyNodes[rsub(0)]);
 3f5:	6d49                	lui	s10,0x12
 3f7:	4569                	li	a0,26
 3f9:	4545                	li	a0,17
 3fb:	76453443          	fmadd.q	fs0,fa0,ft4,fa4,rup
	...

0000000000000400 <.LASF50>:
 400:	5a5f 344e 6c6b      	0x6c6b344e5a5f
    PageNum ppn=start+(node+1-(1l<<(rootOrder+1-rounded)))*(1l<<(rounded-1));//((node+1)*rounded-(1l<<rootOrder));
 406:	6269                	lui	tp,0x1a
 408:	6c34                	ld	a3,88(s0)
 40a:	7369                	lui	t1,0xffffa
 40c:	4974                	lw	a3,84(a0)
 40e:	534e                	lw	t1,240(sp)
 410:	345f 6170 7269      	0x72696170345f
 416:	6d49                	lui	s10,0x12
 418:	4569                	li	a0,26
 41a:	4545                	li	a0,17
 41c:	7039                	c.lui	zero,0xfffee
 41e:	7375                	lui	t1,0xffffd
 420:	5f68                	lw	a0,124(a4)
 422:	6162                	ld	sp,24(sp)
 424:	52456b63          	bltu	a0,tp,95a <.LASF73+0x5>
 428:	5f32534b          	fnmsub.q	ft6,ft4,fs3,fa1,unknown
	...

000000000000042d <.LASF3>:
 42d:	6e75                	lui	t3,0x1d
    DBG(
 42f:	6e676973          	csrrsi	s2,0x6e6,14
 433:	6465                	lui	s0,0x19
 435:	6920                	ld	s0,80(a0)
 437:	746e                	ld	s0,248(sp)
	...

000000000000043a <.LASF155>:
 43a:	7265706f          	j	57b60 <.LLST42+0x5602a>
 43e:	7461                	lui	s0,0xffff8
 440:	6420726f          	jal	tp,7a82 <.LLST42+0x5f4c>
    assert(ppn<end);
 444:	6c65                	lui	s8,0x19
 446:	7465                	lui	s0,0xffff9
 448:	0065                	c.nop	25

000000000000044a <.LASF159>:
 44a:	5a5f 616e 006d      	0x6d616e5a5f

0000000000000450 <.LASF100>:
 450:	6548                	ld	a0,136(a0)
}
 452:	7061                	c.lui	zero,0xffff8
 454:	674d                	lui	a4,0x13
 456:	0072                	c.slli	zero,0x1c

0000000000000458 <.LASF150>:
 458:	656e                	ld	a0,216(sp)
 45a:	6f6f5077          	0x6f6f5077
 45e:	006c                	addi	a1,sp,12

0000000000000460 <.LASF2>:
 460:	6f6c                	ld	a1,216(a4)
 462:	676e                	ld	a4,216(sp)
 464:	7520                	ld	s0,104(a0)
 466:	736e                	ld	t1,248(sp)
 468:	6769                	lui	a4,0x1a
 46a:	656e                	ld	a0,216(sp)
 46c:	2064                	fld	fs1,192(s0)
 46e:	6e69                	lui	t3,0x1a
 470:	0074                	addi	a3,sp,12

0000000000000472 <.LASF145>:
 472:	5a5f 354e 6c61      	0x6c61354e5a5f
                    nd=buddyNodes[lsub(nd)]>buddyNodes[rsub(nd)]?lsub(nd):rsub(nd);
 478:	6f6c                	ld	a1,216(a4)
 47a:	48353163          	0x48353163
    for(xlen_t nd=0,size=rootOrder+1;rounded<=size;size-=1){ // find suitable node; size is biased size
 47e:	6165                	addi	sp,sp,112
                    nd=buddyNodes[lsub(nd)]>buddyNodes[rsub(nd)]?lsub(nd):rsub(nd);
 480:	4d70                	lw	a2,92(a0)
 482:	72477267          	0x72477267
    for(xlen_t nd=0,size=rootOrder+1;rounded<=size;size-=1){ // find suitable node; size is biased size
 486:	6261776f          	jal	a4,17aac <.LLST42+0x15f76>
 48a:	656c                	ld	a1,200(a0)
        if(buddyNodes[nd]==size && buddyNodes[nd]==rounded) node=nd;
 48c:	52453243          	fmadd.d	ft4,fa0,ft4,fa0,rup
 490:	534e                	lw	t1,240(sp)
 492:	375f 6548 7061      	0x70616548375f
        inline constexpr xlen_t rsub(xlen_t x){return ((x+1)<<1);}
 498:	674d                	lui	a4,0x13
 49a:	4572                	lw	a0,28(sp)
                buddyNodes[lsub(nd)]=buddyNodes[rsub(nd)]=size-1;
 49c:	4e52                	lw	t3,20(sp)
 49e:	50375f53          	0x50375f53
 4a2:	6761                	lui	a4,0x18
 4a4:	4d65                	li	s10,25
 4a6:	00457267          	0x457267

00000000000004aa <.LASF14>:
 4aa:	6175                	addi	sp,sp,368
 4ac:	7472                	ld	s0,312(sp)
 4ae:	0030                	addi	a2,sp,8

00000000000004b0 <.LASF44>:
 4b0:	6e69                	lui	t3,0x1a
        inline constexpr xlen_t lsub(xlen_t x){return ((x+1)<<1)-1;}
 4b2:	74726573          	csrrsi	a0,0x747,4
    for(xlen_t nd=0,size=rootOrder+1;rounded<=size;size-=1){ // find suitable node; size is biased size
 4b6:	6542                	ld	a0,16(sp)
                buddyNodes[lsub(nd)]=buddyNodes[rsub(nd)]=size-1;
 4b8:	6f66                	ld	t5,88(sp)
 4ba:	6572                	ld	a0,280(sp)
	...

00000000000004bd <.LASF75>:
 4bd:	7076                	0x7076
 4bf:	4d6e                	lw	s10,216(sp)
    for(xlen_t nd=0,size=rootOrder+1;rounded<=size;size-=1){ // find suitable node; size is biased size
 4c1:	7361                	lui	t1,0xffff8
 4c3:	          	0x736c006b

00000000000004c5 <.LASF88>:
 4c5:	736c                	ld	a1,224(a4)
 4c7:	6275                	lui	tp,0x1d
	...

00000000000004ca <.LASF93>:
 4ca:	5a5f 354e 6c61      	0x6c61354e5a5f
 4d0:	6f6c                	ld	a1,216(a4)
 4d2:	61503763          	0x61503763
 4d6:	674d6567          	0x674d6567
    buddyNodes[0]=klib::max(buddyNodes[lsub(0)],buddyNodes[rsub(0)]);
 4da:	3472                	fld	fs0,312(sp)
 4dc:	7270                	ld	a2,224(a2)
 4de:	746e                	ld	s0,248(sp)
    assert(ppn<end);
 4e0:	6d45                	lui	s10,0x11
	...

00000000000004e3 <.LASF66>:
 4e3:	5a5f 344e 6c6b      	0x6c6b344e5a5f
 4e9:	6269                	lui	tp,0x1a
 4eb:	78616d33          	0x78616d33
 4ef:	6849                	lui	a6,0x12
 4f1:	4545                	li	a0,17
 4f3:	5f54                	lw	a3,60(a4)
 4f5:	535f3153          	0x535f3153
 4f9:	5f31                	li	t5,-20
	...

00000000000004fc <.LASF119>:
 4fc:	5a5f 354e 6c61      	0x6c61354e5a5f
 502:	6f6c                	ld	a1,216(a4)
 504:	48353163          	0x48353163
 508:	6165                	addi	sp,sp,112
 50a:	4d70                	lw	a2,92(a0)
    for(xlen_t nd=0,size=rootOrder+1;rounded<=size;size-=1){ // find suitable node; size is biased size
 50c:	72477267          	0x72477267
    assert(node>0);
 510:	6261776f          	jal	a4,17b36 <.LLST42+0x16000>
 514:	656c                	ld	a1,200(a0)
 516:	50453443          	fmadd.s	fs0,fa0,ft4,fa0,rup
 51a:	6d76                	ld	s10,344(sp)
 51c:	4e52                	lw	t3,20(sp)
 51e:	50375f53          	0x50375f53
 522:	6761                	lui	a4,0x18
 524:	4d65                	li	s10,25
 526:	00457267          	0x457267

000000000000052a <.LASF61>:
 52a:	6164                	ld	s1,192(a0)
 52c:	6174                	ld	a3,192(a0)
	...

000000000000052f <.LASF105>:
 52f:	5a5f 354e 6c61      	0x6c61354e5a5f
 535:	6f6c                	ld	a1,216(a4)
 537:	65483763          	0x65483763
 53b:	7061                	c.lui	zero,0xffff8
 53d:	674d                	lui	a4,0x13
 53f:	4472                	lw	s0,28(sp)
 541:	4534                	lw	a3,72(a0)
 543:	0076                	c.slli	zero,0x1d

0000000000000545 <.LASF136>:
 545:	657a6973          	csrrsi	s2,0x657,20
	...

000000000000054a <.LASF12>:
 54a:	726f6873          	csrrsi	a6,0x726,30
    DBG(
 54e:	2074                	fld	fa3,192(s0)
void HeapMgrGrowable::growHeap(){
 550:	6e75                	lui	t3,0x1d
 552:	6e676973          	csrrsi	s2,0x6e6,14
 556:	6465                	lui	s0,0x19
    DBG(
 558:	6920                	ld	s0,80(a0)
 55a:	746e                	ld	s0,248(sp)
	...

000000000000055d <.LASF37>:
 55d:	6170                	ld	a2,192(a0)
 55f:	7269                	lui	tp,0xffffa
void HeapMgrGrowable::growHeap(){
 561:	6c3c                	ld	a5,88(s0)
 563:	20676e6f          	jal	t3,76769 <.LLST42+0x74c33>
    DBG(
 567:	6e75                	lui	t3,0x1d
 569:	6e676973          	csrrsi	s2,0x6e6,14
void HeapMgrGrowable::growHeap(){
 56d:	6465                	lui	s0,0x19
 56f:	6920                	ld	s0,80(a0)
 571:	746e                	ld	s0,248(sp)
 573:	202c                	fld	fa1,64(s0)
    DBG(
 575:	6e69                	lui	t3,0x1a
 577:	3e74                	fld	fa3,248(a2)
	...

000000000000057a <.LASF177>:
 57a:	5a5f 344e 6c6b      	0x6c6b344e5a5f
    Span newSpan={pmgr.alloc(growsize),growsize};
 580:	6269                	lui	tp,0x1a
 582:	6e697237          	lui	tp,0x6e697
 586:	66756267          	0x66756267
 58a:	6349                	lui	t1,0x12
 58c:	6d4c                	ld	a1,152(a0)
 58e:	3231                	addiw	tp,tp,-20
    reservedNode->data=newSpan;
 590:	4538                	lw	a4,72(a0)
 592:	3345                	addiw	t1,t1,-15
 594:	45746567          	0x45746567
 598:	0076                	c.slli	zero,0x1d

000000000000059a <.LASF166>:
 59a:	6c74                	ld	a3,216(s0)
 59c:	6d5f6673          	csrrsi	a2,0x6d5,30
    tlsf_add_pool(newPool,growsize*vm::pageSize);
 5a0:	6c61                	lui	s8,0x18
 5a2:	6f6c                	ld	a1,216(a4)
 5a4:	          	beq	zero,s7,ce4 <.LLST101+0x12>

00000000000005a6 <.LASF167>:
 5a6:	7570                	ld	a2,232(a0)
 5a8:	6374                	ld	a3,192(a4)
 5aa:	6168                	ld	a0,192(a0)
 5ac:	0072                	c.slli	zero,0x1c

00000000000005ae <.LASF106>:
 5ae:	5a5f 354e 6c61      	0x6c61354e5a5f
    dynPages.push_back(reservedNode);
 5b4:	6f6c                	ld	a1,216(a4)
 5b6:	65483763          	0x65483763
    if(tail)
 5ba:	7061                	c.lui	zero,0xffff8
    nd->iter.next=cur->iter.next;
 5bc:	674d                	lui	a4,0x13
 5be:	3572                	fld	fa0,312(sp)
 5c0:	6c61                	lui	s8,0x18
 5c2:	6f6c                	ld	a1,216(a4)
    cur->iter.next=nd;
 5c4:	006d4563          	blt	s10,t1,5ce <.LASF36+0x6>

00000000000005c8 <.LASF36>:
 5c8:	6972                	ld	s2,280(sp)
      list::insertAfter(tail,newNode),tail=newNode;
 5ca:	676e                	ld	a4,216(sp)
        ptr_t rt=(tlsf_malloc(size));
 5cc:	7562                	ld	a0,56(sp)
 5ce:	3c66                	fld	fs8,120(sp)
 5d0:	72616863          	bltu	sp,t1,d00 <.LLST101+0x2e>
 5d4:	202c                	fld	fa1,64(s0)
 5d6:	3231                	addiw	tp,tp,-20
 5d8:	3e38                	fld	fa4,120(a2)
	...

00000000000005db <.LASF87>:
 5db:	5a5f 354e 6c61      	0x6c61354e5a5f
 5e1:	6f6c                	ld	a1,216(a4)
 5e3:	61503763          	0x61503763
 5e7:	674d6567          	0x674d6567
 5eb:	3572                	fld	fa0,312(sp)
 5ed:	7270                	ld	a2,224(a2)
 5ef:	6e69                	lui	t3,0x1a
    reservedNode=(klib::ListNode<Span>*)(alloc(sizeof(klib::ListNode<Span>)));
 5f1:	4574                	lw	a3,76(a0)
 5f3:	0076                	c.slli	zero,0x1d

00000000000005f5 <.LASF97>:
 5f5:	6f72                	ld	t5,280(sp)
    DBG(
 5f7:	724f746f          	jal	s0,f7d1b <pool+0xd1b>
 5fb:	6564                	ld	s1,200(a0)
 5fd:	0072                	c.slli	zero,0x1c

00000000000005ff <.LASF141>:
 5ff:	6572                	ld	a0,280(sp)
 601:	7274                	ld	a3,224(a2)
 603:	0079                	c.nop	30

0000000000000605 <.LASF17>:
 605:	7270                	ld	a2,224(a2)
 607:	6f69                	lui	t5,0x1a
}
 609:	6972                	ld	s2,280(sp)
 60b:	7974                	ld	a3,240(a0)
	...

000000000000060e <.LASF118>:
 60e:	5a5f 354e 6c61      	0x6c61354e5a5f
 614:	6f6c                	ld	a1,216(a4)
 616:	48353163          	0x48353163
 61a:	6165                	addi	sp,sp,112
    DBG(
 61c:	4d70                	lw	a2,92(a0)
 61e:	72477267          	0x72477267
 622:	6261776f          	jal	a4,17c48 <.LLST42+0x16112>
      head=tail=newNode;
 626:	656c                	ld	a1,200(a0)
 628:	52453443          	fmadd.d	fs0,fa0,ft4,fa0,rup
 62c:	534e                	lw	t1,240(sp)
 62e:	375f 6548 7061      	0x70616548375f
PageNum PageMgr::free(PageNum ppn,int order){
 634:	674d                	lui	a4,0x13
 636:	4572                	lw	a0,28(sp)
    xlen_t idx=pos2node(ppn-start,order);
 638:	4e52                	lw	t3,20(sp)
 63a:	50375f53          	0x50375f53
            DBG(assert(((pos>>rootOrder)&1)==0);)
 63e:	6761                	lui	a4,0x18
PageNum PageMgr::free(PageNum ppn,int order){
 640:	4d65                	li	s10,25
 642:	00457267          	0x457267

0000000000000646 <.LASF72>:
 646:	6f62                	ld	t5,24(sp)
 648:	          	jal	s8,6c38 <.LLST42+0x5102>

000000000000064b <.LASF143>:
 64b:	5a5f 354e 6c61      	0x6c61354e5a5f
 651:	6f6c                	ld	a1,216(a4)
 653:	48353163          	0x48353163
 657:	6165                	addi	sp,sp,112
 659:	4d70                	lw	a2,92(a0)
 65b:	72477267          	0x72477267
 65f:	6261776f          	jal	a4,17c85 <.LLST42+0x1614f>
 663:	656c                	ld	a1,200(a0)
 665:	3244                	fld	fs1,160(a2)
 667:	7645                	lui	a2,0xffff1
	...

000000000000066a <.LASF165>:
 66a:	5f5f 7562 6c69      	0x6c6975625f5f
 670:	6974                	ld	a3,208(a0)
 672:	5f6e                	lw	t5,248(sp)
            for(int size=rootOrder-1;size>=order;size-=1){
 674:	7570                	ld	a2,232(a0)
 676:	7374                	ld	a3,224(a4)
	...

0000000000000679 <.LASF175>:
 679:	6564                	ld	s1,200(a0)
 67b:	79746c63          	bltu	s0,s7,e13 <.LLST106+0x16>
 67f:	6570                	ld	a2,200(a0)
 681:	6e28                	ld	a0,88(a2)
 683:	6c75                	lui	s8,0x1d
            xlen_t nd=0;
 685:	706c                	ld	a1,224(s0)
 687:	7274                	ld	a3,224(a2)
 689:	0029                	c.nop	10

000000000000068b <.LASF86>:
 68b:	5a5f 354e 6c61      	0x6c61354e5a5f
            for(int size=rootOrder-1;size>=order;size-=1){
 691:	6f6c                	ld	a1,216(a4)
 693:	61503763          	0x61503763
                if((pos>>size)&1)nd=rsub(nd);
 697:	674d6567          	0x674d6567
            for(int size=rootOrder-1;size>=order;size-=1){
 69b:	3472                	fld	fs0,312(sp)
                if((pos>>size)&1)nd=rsub(nd);
 69d:	7266                	ld	tp,120(sp)
 69f:	6565                	lui	a0,0x19
 6a1:	6d45                	lui	s10,0x11
 6a3:	0069                	c.nop	26

00000000000006a5 <.LASF172>:
 6a5:	20554e47          	fmsub.s	ft8,fa0,ft5,ft4,rmm
 6a9:	312b2b43          	fmadd.s	fs6,fs6,fs2,ft6,rdn
 6ad:	2034                	fld	fa3,64(s0)
 6af:	2e39                	addiw	t3,t3,14
            for(int size=rootOrder-1;size>=order;size-=1){
 6b1:	2e32                	fld	ft8,264(sp)
 6b3:	2030                	fld	fa2,64(s0)
        inline constexpr xlen_t lsub(xlen_t x){return ((x+1)<<1)-1;}
 6b5:	6d2d                	lui	s10,0xb
 6b7:	7261                	lui	tp,0xffff8
 6b9:	723d6863          	bltu	s10,gp,de9 <.LLST105+0x25>
            for(int size=rootOrder-1;size>=order;size-=1){
 6bd:	3676                	fld	fa2,376(sp)
 6bf:	6934                	ld	a3,80(a0)
    DBG(printf("PageMgr::free(pos=%ld order=%d) idx=0x%lx\n",ppn-start,order,idx);)
 6c1:	616d                	addi	sp,sp,240
 6c3:	2d20                	fld	fs0,88(a0)
 6c5:	616d                	addi	sp,sp,240
 6c7:	6962                	ld	s2,24(sp)
 6c9:	6c3d                	lui	s8,0xf
 6cb:	3670                	fld	fa2,232(a2)
 6cd:	2034                	fld	fa3,64(s0)
 6cf:	6d2d                	lui	s10,0xb
 6d1:	646f6d63          	bltu	t5,t1,d2b <.LLST102+0x22>
 6d5:	6c65                	lui	s8,0x19
 6d7:	6d3d                	lui	s10,0xf
    buddyNodes[idx]=order+1;
 6d9:	6465                	lui	s0,0x19
 6db:	6e61                	lui	t3,0x18
        inline constexpr xlen_t prnt(xlen_t x){return ((x+1)>>1)-1;}
 6dd:	2079                	0x2079
 6df:	6d2d                	lui	s10,0xb
 6e1:	7574                	ld	a3,232(a0)
 6e3:	656e                	ld	a0,216(sp)
 6e5:	723d                	lui	tp,0xfffef
 6e7:	656b636f          	jal	t1,b6d3d <.LLST42+0xb5207>
 6eb:	2074                	fld	fa3,192(s0)
    for(idx=prnt(idx);idx>0;idx=prnt(idx)){
 6ed:	672d                	lui	a4,0xb
 6ef:	2d20                	fld	fs0,88(a0)
        buddyNodes[idx]=buddyNodes[lsub(idx)]==buddyNodes[rsub(idx)]?buddyNodes[lsub(idx)]+1:klib::max(buddyNodes[lsub(idx)],buddyNodes[rsub(idx)]); // the free'd leaf node ensures lsub or rsub being not null
 6f1:	          	fnmadd.d	ft4,ft0,ft0,fa2,rup

00000000000006f4 <.LASF15>:
 6f4:	6162                	ld	sp,24(sp)
        inline constexpr xlen_t lsub(xlen_t x){return ((x+1)<<1)-1;}
 6f6:	          	csrrsi	a0,0x700,0

00000000000006f9 <.LASF123>:
 6f9:	7570                	ld	a2,232(a0)
 6fb:	7374                	ld	a3,224(a4)
	...

00000000000006fe <.LASF117>:
 6fe:	5a5f 354e 6c61      	0x6c61354e5a5f
 704:	6f6c                	ld	a1,216(a4)
 706:	48353163          	0x48353163
 70a:	6165                	addi	sp,sp,112
        inline constexpr xlen_t rsub(xlen_t x){return ((x+1)<<1);}
 70c:	4d70                	lw	a2,92(a0)
 70e:	72477267          	0x72477267
 712:	6261776f          	jal	a4,17d38 <.LLST42+0x16202>
 716:	656c                	ld	a1,200(a0)
 718:	6738                	ld	a4,72(a4)
 71a:	6f72                	ld	t5,280(sp)
 71c:	61654877          	0x61654877
        inline constexpr xlen_t prnt(xlen_t x){return ((x+1)>>1)-1;}
 720:	4570                	lw	a2,76(a0)
 722:	0076                	c.slli	zero,0x1d

0000000000000724 <.LASF126>:
 724:	6170                	ld	a2,192(a0)
 726:	00736567          	0x736567

000000000000072a <.LASF27>:
 72a:	6174                	ld	a3,192(a0)
    for(idx=prnt(idx);idx>0;idx=prnt(idx)){
 72c:	6c69                	lui	s8,0x1a
	...

000000000000072f <.LASF176>:
 72f:	6e696c63          	bltu	s2,t1,e27 <.LLST106+0x2a>
    buddyNodes[0]=klib::max(buddyNodes[lsub(0)],buddyNodes[rsub(0)]);
 733:	0074                	addi	a3,sp,12

0000000000000735 <.LASF74>:
 735:	6170                	ld	a2,192(a0)
 737:	6e456567          	0x6e456567
 73b:	7274                	ld	a3,224(a2)
 73d:	6569                	lui	a0,0x1a
 73f:	72655073          	csrwi	0x726,10
 743:	6150                	ld	a2,128(a0)
        buddyNodes[idx]=buddyNodes[lsub(idx)]==buddyNodes[rsub(idx)]?buddyNodes[lsub(idx)]+1:klib::max(buddyNodes[lsub(idx)],buddyNodes[rsub(idx)]); // the free'd leaf node ensures lsub or rsub being not null
 745:	          	0x6c006567

0000000000000748 <.LASF9>:
 748:	6f6c                	ld	a1,216(a4)
 74a:	676e                	ld	a4,216(sp)
 74c:	6420                	ld	s0,72(s0)
 74e:	6c62756f          	jal	a0,27e14 <.LLST42+0x262de>
            DBG(assert(((pos>>rootOrder)&1)==0);)
 752:	0065                	c.nop	25

0000000000000754 <.LASF34>:
 754:	7566                	ld	a0,120(sp)
 756:	6c6c                	ld	a1,216(s0)
	...

0000000000000759 <.LASF154>:
 759:	5a5f 6164 7650      	0x765061645a5f
	...

0000000000000760 <.LASF76>:
 760:	6150                	ld	a2,128(a0)
 762:	754e6567          	0x754e6567
 766:	006d                	c.nop	27

0000000000000768 <.LASF18>:
 768:	6570                	ld	a2,200(a0)
 76a:	646e                	ld	s0,216(sp)
 76c:	6e69                	lui	t3,0x1a
 76e:	          	jr	1445(t5) # 1a5a5 <.LLST42+0x18a6f>

0000000000000770 <.LASF152>:
 770:	5a5f 354e 6c61      	0x6c61354e5a5f
 776:	6f6c                	ld	a1,216(a4)
 778:	65483763          	0x65483763
 77c:	7061                	c.lui	zero,0xffff8
 77e:	674d                	lui	a4,0x13
 780:	4372                	lw	t1,28(sp)
 782:	4532                	lw	a0,12(sp)
 784:	7650                	ld	a2,168(a2)
 786:	006d                	c.nop	27

0000000000000788 <.LASF70>:
 788:	5a5f 344e 6c6b      	0x6c6b344e5a5f
    DBG(printf("PageMgr::free(pos=%ld order=%d) idx=0x%lx\n",ppn-start,order,idx);)
 78e:	6269                	lui	tp,0x1a
 790:	6c36                	ld	s8,328(sp)
 792:	7532676f          	jal	a4,276e4 <.LLST42+0x25bae>
 796:	4570                	lw	a2,76(a0)
 798:	006d                	c.nop	27

000000000000079a <.LASF69>:
 79a:	6f6c                	ld	a1,216(a4)
 79c:	70753267          	0x70753267
	...

00000000000007a1 <.LASF82>:
 7a1:	507e                	0x507e
 7a3:	6761                	lui	a4,0x18
    buddyNodes[idx]=order+1;
 7a5:	4d65                	li	s10,25
 7a7:	          	0x74007267

00000000000007aa <.LASF169>:
 7aa:	6c74                	ld	a3,216(s0)
 7ac:	6d5f6673          	csrrsi	a2,0x6d5,30
    for(idx=prnt(idx);idx>0;idx=prnt(idx)){
 7b0:	6d65                	lui	s10,0x19
 7b2:	6c61                	lui	s8,0x18
    buddyNodes[0]=klib::max(buddyNodes[lsub(0)],buddyNodes[rsub(0)]);
 7b4:	6769                	lui	a4,0x1a
 7b6:	006e                	c.slli	zero,0x1b

00000000000007b8 <.LASF13>:
 7b8:	6c70                	ld	a2,216(s0)
 7ba:	7461                	lui	s0,0xffff8
PageMgr::PageMgr(PageNum start,PageNum end):start(start),end(end){
 7bc:	6f66                	ld	t5,88(sp)
 7be:	6d72                	ld	s10,280(sp)
	...

00000000000007c1 <.LASF134>:
 7c1:	6f72                	ld	t5,280(sp)
 7c3:	6e75                	lui	t3,0x1d
 7c5:	6564                	ld	s1,200(a0)
 7c7:	0064                	addi	s1,sp,12

00000000000007c9 <.LASF62>:
 7c9:	7469                	lui	s0,0xffffa
 7cb:	7265                	lui	tp,0xffff9
	...

00000000000007ce <.LASF33>:
 7ce:	5a5f 344e 6c6b      	0x6c6b344e5a5f
 7d4:	6269                	lui	tp,0x1a
 7d6:	6e697237          	lui	tp,0x6e697
 7da:	66756267          	0x66756267
 7de:	6349                	lui	t1,0x12
    DBG(
 7e0:	6d4c                	ld	a1,152(a0)
 7e2:	3231                	addiw	tp,tp,-20
 7e4:	4538                	lw	a4,72(a0)
 7e6:	3545                	addiw	a0,a0,-15
PageMgr::PageMgr(PageNum start,PageNum end):start(start),end(end){
 7e8:	6d65                	lui	s10,0x19
 7ea:	7470                	ld	a2,232(s0)
 7ec:	4579                	li	a0,30
 7ee:	0076                	c.slli	zero,0x1d

00000000000007f0 <.LASF54>:
 7f0:	6f70                	ld	a2,216(a4)
    DBG(
 7f2:	5f70                	lw	a2,124(a4)
 7f4:	7266                	ld	tp,120(sp)
 7f6:	00746e6f          	jal	t3,46ffc <.LLST42+0x454c6>

00000000000007fa <.LASF64>:
 7fa:	5a5f 344e 6c6b      	0x6c6b344e5a5f
    for(i=0;a>1;a>>=1,i++)r|=a&1;
 800:	6269                	lui	tp,0x1a
 802:	4c38                	lw	a4,88(s0)
 804:	7369                	lui	t1,0xffffa
 806:	4e74                	lw	a3,92(a2)
 808:	4965646f          	jal	s0,56c9e <.LLST42+0x55168>
    int i=0,r=0;
 80c:	534e                	lw	t1,240(sp)
 80e:	345f 6170 7269      	0x72696170345f
    for(i=0;a>1;a>>=1,i++)r|=a&1;
 814:	6d49                	lui	s10,0x12
 816:	4569                	li	a0,26
 818:	4545                	li	a0,17
 81a:	52453443          	fmadd.d	fs0,fa0,ft4,fa0,rup
 81e:	5f32534b          	fnmsub.q	ft6,ft4,fs3,fa1,unknown
	...

0000000000000823 <.LASF46>:
 823:	5a5f 344e 6c6b      	0x6c6b344e5a5f
 829:	6269                	lui	tp,0x1a
 82b:	6c34                	ld	a3,88(s0)
 82d:	7369                	lui	t1,0xffffa
 82f:	4974                	lw	a3,84(a0)
 831:	534e                	lw	t1,240(sp)
 833:	345f 6170 7269      	0x72696170345f
    DBG(printf("pages=%d order=%d rootOrder=%ld buddyTreeSize=%ld\n",pages,rootOrder,rootOrder,buddyTreeSize);)
 839:	6d49                	lui	s10,0x12
 83b:	4569                	li	a0,26
 83d:	4545                	li	a0,17
 83f:	3231                	addiw	tp,tp,-20
    rootOrder=klib::log2up(pages);
 841:	6e69                	lui	t3,0x1a
 843:	74726573          	csrrsi	a0,0x747,4
    buddyTreeSize=(1l<<rootOrder)*2-1;
 847:	6542                	ld	a0,16(sp)
    DBG(printf("pages=%d order=%d rootOrder=%ld buddyTreeSize=%ld\n",pages,rootOrder,rootOrder,buddyTreeSize);)
 849:	6f66                	ld	t5,88(sp)
 84b:	6572                	ld	a0,280(sp)
 84d:	5045                	c.li	zero,-15
 84f:	534e                	lw	t1,240(sp)
 851:	385f 694c 7473      	0x7473694c385f
 857:	6f4e                	ld	t5,208(sp)
    buddyNodes=new uint8_t[buddyTreeSize];
 859:	6564                	ld	s1,200(a0)
 85b:	5349                	li	t1,-14
        ptr_t rt=(tlsf_malloc(size));
 85d:	5f32                	lw	t5,44(sp)
 85f:	4545                	li	a0,17
 861:	005f3653          	fadd.s	fa2,ft10,ft5,rup

0000000000000865 <.LASF140>:
 865:	6c61                	lui	s8,0x18
 867:	6769                	lui	a4,0x1a
        if(rt!=nullptr)return rt;
 869:	6d6e                	ld	s10,216(sp)
 86b:	6e65                	lui	t3,0x19
        ptr_t rt=(tlsf_malloc(size));
 86d:	0074                	addi	a3,sp,12

000000000000086f <.LASF52>:
 86f:	5a5f 344e 6c6b      	0x6c6b344e5a5f
 875:	6269                	lui	tp,0x1a
 877:	6c34                	ld	a3,88(s0)
    for(xlen_t i=1;i<buddyTreeSize;i++)buddyNodes[i]=0;
 879:	7369                	lui	t1,0xffffa
 87b:	4974                	lw	a3,84(a0)
    buddyNodes=new uint8_t[buddyTreeSize];
 87d:	534e                	lw	t1,240(sp)
 87f:	345f 6170 7269      	0x72696170345f
    for(xlen_t i=1;i<buddyTreeSize;i++)buddyNodes[i]=0;
 885:	6d49                	lui	s10,0x12
 887:	4569                	li	a0,26
 889:	4545                	li	a0,17
 88b:	3031                	0x3031
 88d:	7570                	ld	a2,232(a0)
 88f:	665f6873          	csrrsi	a6,0x665,30
 893:	6f72                	ld	t5,280(sp)
 895:	746e                	ld	s0,248(sp)
 897:	5045                	c.li	zero,-15
 899:	534e                	lw	t1,240(sp)
 89b:	385f 694c 7473      	0x7473694c385f
 8a1:	6f4e                	ld	t5,208(sp)
 8a3:	6564                	ld	s1,200(a0)
    for(int i=rootOrder;i>=0;i--){
 8a5:	5349                	li	t1,-14
 8a7:	5f32                	lw	t5,44(sp)
 8a9:	4545                	li	a0,17
	...

00000000000008ac <.LASF170>:
 8ac:	6c74                	ld	a3,216(s0)
        if((pages>>i)&1){
 8ae:	775f6673          	csrrsi	a2,0x775,30
 8b2:	6c61                	lui	s8,0x18
 8b4:	6f705f6b          	0x6f705f6b
    for(int i=rootOrder;i>=0;i--){
 8b8:	          	jal	s8,6fb8 <.LLST42+0x5482>

00000000000008bb <.LASF16>:
 8bb:	6c70                	ld	a2,216(s0)
 8bd:	6369                	lui	t1,0x1a
	...

00000000000008c0 <.LASF20>:
 8c0:	6874                	ld	a3,208(s0)
        if((pages>>i)&1){
 8c2:	6572                	ld	a0,280(sp)
 8c4:	6c6f6873          	csrrsi	a6,0x6c6,30
 8c8:	0064                	addi	s1,sp,12

00000000000008ca <.LASF5>:
 8ca:	6e75                	lui	t3,0x1d
    for(int i=rootOrder;i>=0;i--){
 8cc:	6e676973          	csrrsi	s2,0x6e6,14
 8d0:	6465                	lui	s0,0x19
 8d2:	6320                	ld	s0,64(a4)
            printf("buddy: |"); for(xlen_t i=0;i<buddyTreeSize;i++)printf("%d | ",buddyNodes[i]-1);printf("\n");
 8d4:	6168                	ld	a0,192(a0)
 8d6:	0072                	c.slli	zero,0x1c

00000000000008d8 <.LASF135>:
 8d8:	6f6e                	ld	t5,216(sp)
 8da:	6564                	ld	s1,200(a0)
	...

00000000000008dd <.LASF11>:
 8dd:	726f6873          	csrrsi	a6,0x726,30
 8e1:	2074                	fld	fa3,192(s0)
 8e3:	6e69                	lui	t3,0x1a
 8e5:	0074                	addi	a3,sp,12

00000000000008e7 <.LASF29>:
 8e7:	5a5f 344e 6c6b      	0x6c6b344e5a5f
 8ed:	6269                	lui	tp,0x1a
 8ef:	6e697237          	lui	tp,0x6e697
 8f3:	66756267          	0x66756267
 8f7:	6349                	lui	t1,0x12
 8f9:	6d4c                	ld	a1,152(a0)
 8fb:	3231                	addiw	tp,tp,-20
 8fd:	4538                	lw	a4,72(a0)
 8ff:	3345                	addiw	t1,t1,-15
 901:	6f70                	ld	a2,216(a4)
 903:	4570                	lw	a2,76(a0)
 905:	0076                	c.slli	zero,0x1d

0000000000000907 <.LASF23>:
 907:	746d                	lui	s0,0xffffb
 909:	6d69                	lui	s10,0x1a
 90b:	6365                	lui	t1,0x19
 90d:	706d                	c.lui	zero,0xffffb
	...

0000000000000910 <.LASF182>:
 910:	5a5f 344e 6c6b      	0x6c6b344e5a5f
 916:	6269                	lui	tp,0x1a
 918:	6c34                	ld	a3,88(s0)
 91a:	7369                	lui	t1,0xffffa
 91c:	4974                	lw	a3,84(a0)
 91e:	534e                	lw	t1,240(sp)
 920:	345f 6170 7269      	0x72696170345f
 926:	6d49                	lui	s10,0x12
 928:	4569                	li	a0,26
 92a:	4545                	li	a0,17
}
 92c:	76453243          	fmadd.q	ft4,fa0,ft4,fa4,rup
	...

0000000000000931 <.LASF179>:
 931:	6572                	ld	a0,280(sp)
 933:	7274                	ld	a3,224(a2)
 935:	4c79                	li	s8,30
 937:	6d69                	lui	s10,0x1a
 939:	7469                	lui	s0,0xffffa
	...

000000000000093c <.LASF89>:
 93c:	5a5f 354e 6c61      	0x6c61354e5a5f
    DBG(
 942:	6f6c                	ld	a1,216(a4)
 944:	61503763          	0x61503763
}
 948:	674d6567          	0x674d6567
    DBG(
 94c:	3472                	fld	fs0,312(sp)
 94e:	736c                	ld	a1,224(a4)
 950:	6275                	lui	tp,0x1d
 952:	6d45                	lui	s10,0x11
	...

0000000000000955 <.LASF73>:
 955:	6170                	ld	a2,192(a0)
 957:	69536567          	0x69536567
 95b:	657a                	ld	a0,408(sp)
	...

000000000000095e <.LASF120>:
 95e:	487e                	lw	a6,220(sp)
            free(base,i);
 960:	6165                	addi	sp,sp,112
 962:	4d70                	lw	a2,92(a0)
 964:	72477267          	0x72477267
 968:	6261776f          	jal	a4,17f8e <.LLST42+0x16458>
 96c:	656c                	ld	a1,200(a0)
	...

000000000000096f <.LASF26>:
 96f:	6568                	ld	a0,200(a0)
 971:	6461                	lui	s0,0x18
	...

0000000000000974 <.LASF107>:
 974:	6c61                	lui	s8,0x18
 976:	696c                	ld	a1,208(a0)
 978:	64656e67          	0x64656e67
 97c:	615f 6c6c 636f      	0x636f6c6c615f
	...

0000000000000983 <.LASF22>:
 983:	746d                	lui	s0,0xffffb
 985:	6d69                	lui	s10,0x1a
 987:	0065                	c.nop	25

0000000000000989 <.LASF38>:
 989:	6966                	ld	s2,88(sp)
 98b:	7372                	ld	t1,312(sp)
 98d:	0074                	addi	a3,sp,12

000000000000098f <.LASF71>:
 98f:	72616863          	bltu	sp,t1,10bf <.LLST27+0x4>
	...

0000000000000994 <.LASF112>:
 994:	6548                	ld	a0,136(a0)
 996:	7061                	c.lui	zero,0xffff8
 998:	674d                	lui	a4,0x13
 99a:	4772                	lw	a4,28(sp)
 99c:	6f72                	ld	t5,280(sp)
 99e:	6c626177          	0x6c626177
 9a2:	0065                	c.nop	25

00000000000009a4 <.LASF53>:
 9a4:	5a5f 344e 6c6b      	0x6c6b344e5a5f
 9aa:	6269                	lui	tp,0x1a
 9ac:	6c34                	ld	a3,88(s0)
 9ae:	7369                	lui	t1,0xffffa
 9b0:	4974                	lw	a3,84(a0)
 9b2:	534e                	lw	t1,240(sp)
 9b4:	345f 6170 7269      	0x72696170345f
 9ba:	6d49                	lui	s10,0x12
 9bc:	4569                	li	a0,26
 9be:	4545                	li	a0,17
 9c0:	3031                	0x3031
 9c2:	7570                	ld	a2,232(a0)
 9c4:	665f6873          	csrrsi	a6,0x665,30
 9c8:	6f72                	ld	t5,280(sp)
 9ca:	746e                	ld	s0,248(sp)
 9cc:	5245                	li	tp,-15
 9ce:	5f32534b          	fnmsub.q	ft6,ft4,fs3,fa1,unknown
	...

00000000000009d3 <.LASF83>:
 9d3:	5a5f 354e 6c61      	0x6c61354e5a5f
 9d9:	6f6c                	ld	a1,216(a4)
 9db:	61503763          	0x61503763
 9df:	674d6567          	0x674d6567
 9e3:	4472                	lw	s0,28(sp)
 9e5:	4534                	lw	a3,72(a0)
 9e7:	0076                	c.slli	zero,0x1d

00000000000009e9 <.LASF103>:
 9e9:	5a5f 354e 6c61      	0x6c61354e5a5f
 9ef:	6f6c                	ld	a1,216(a4)
 9f1:	65483763          	0x65483763
 9f5:	7061                	c.lui	zero,0xffff8
 9f7:	674d                	lui	a4,0x13
 9f9:	4372                	lw	t1,28(sp)
 9fb:	4534                	lw	a3,72(a0)
 9fd:	7650                	ld	a2,168(a2)
 9ff:	006d                	c.nop	27

0000000000000a01 <.LASF164>:
 a01:	5f5f 7863 5f61      	0x5f6178635f5f
 a07:	7461                	lui	s0,0xffff8
 a09:	7865                	lui	a6,0xffff9
 a0b:	7469                	lui	s0,0xffffa
	...

0000000000000a0e <.LASF79>:
 a0e:	6c61                	lui	s8,0x18
 a10:	6f6c                	ld	a1,216(a4)
 a12:	          	beq	t5,t0,fb2 <.LLST39+0xd>

0000000000000a14 <.LASF45>:
 a14:	5a5f 344e 6c6b      	0x6c6b344e5a5f
 a1a:	6269                	lui	tp,0x1a
 a1c:	6c34                	ld	a3,88(s0)
 a1e:	7369                	lui	t1,0xffffa
 a20:	4974                	lw	a3,84(a0)
 a22:	534e                	lw	t1,240(sp)
 a24:	345f 6170 7269      	0x72696170345f
 a2a:	6d49                	lui	s10,0x12
 a2c:	4569                	li	a0,26
 a2e:	4545                	li	a0,17
 a30:	3131                	addiw	sp,sp,-20
 a32:	6e69                	lui	t3,0x1a
 a34:	74726573          	csrrsi	a0,0x747,4
 a38:	6641                	lui	a2,0x10
 a3a:	6574                	ld	a3,200(a0)
 a3c:	4572                	lw	a0,28(sp)
 a3e:	4e50                	lw	a2,28(a2)
 a40:	4c385f53          	0x4c385f53
 a44:	7369                	lui	t1,0xffffa
 a46:	4e74                	lw	a3,92(a2)
 a48:	4965646f          	jal	s0,56ede <.LLST42+0x553a8>
 a4c:	455f3253          	0x455f3253
 a50:	5345                	li	t1,-15
 a52:	5f36                	lw	t5,108(sp)
	...

0000000000000a55 <.LASF35>:
 a55:	5a5f 344e 6c6b      	0x6c6b344e5a5f
 a5b:	6269                	lui	tp,0x1a
 a5d:	6e697237          	lui	tp,0x6e697
 a61:	66756267          	0x66756267
 a65:	6349                	lui	t1,0x12
 a67:	6d4c                	ld	a1,152(a0)
 a69:	3231                	addiw	tp,tp,-20
 a6b:	4538                	lw	a4,72(a0)
 a6d:	3445                	addiw	s0,s0,-15
 a6f:	7566                	ld	a0,120(sp)
 a71:	6c6c                	ld	a1,216(s0)
 a73:	7645                	lui	a2,0xffff1
	...

0000000000000a76 <.LASF1>:
 a76:	6c78                	ld	a4,216(s0)
 a78:	6e65                	lui	t3,0x19
 a7a:	745f        	0x4e5a5f00745f

0000000000000a7d <.LASF147>:
 a7d:	5a5f 354e 6c61      	0x6c61354e5a5f
 a83:	6f6c                	ld	a1,216(a4)
 a85:	48353163          	0x48353163
 a89:	6165                	addi	sp,sp,112
 a8b:	4d70                	lw	a2,92(a0)
 a8d:	72477267          	0x72477267
 a91:	6261776f          	jal	a4,180b7 <.LLST42+0x16581>
 a95:	656c                	ld	a1,200(a0)
 a97:	50453243          	fmadd.s	ft4,fa0,ft4,fa0,rup
 a9b:	6d76                	ld	s10,344(sp)
 a9d:	4e52                	lw	t3,20(sp)
 a9f:	50375f53          	0x50375f53
 aa3:	6761                	lui	a4,0x18
 aa5:	4d65                	li	s10,25
 aa7:	00457267          	0x457267

0000000000000aab <.LASF173>:
 aab:	6e72656b          	0x6e72656b
 aaf:	6c65                	lui	s8,0x19
 ab1:	6c6c612f          	0x6c6c612f
 ab5:	632e636f          	jal	t1,e70e7 <.LLST42+0xe55b1>
 ab9:	          	beq	a2,t1,11d9 <.LLST16+0x5>

0000000000000abb <.LASF84>:
 abb:	7266                	ld	tp,120(sp)
 abd:	6565                	lui	a0,0x19
	...

0000000000000ac0 <.LASF111>:
 ac0:	5a5f 354e 6c61      	0x6c61354e5a5f
 ac6:	6f6c                	ld	a1,216(a4)
 ac8:	65483763          	0x65483763
 acc:	7061                	c.lui	zero,0xffff8
 ace:	674d                	lui	a4,0x13
 ad0:	3772                	fld	fa4,312(sp)
 ad2:	6572                	ld	a0,280(sp)
 ad4:	6c61                	lui	s8,0x18
 ad6:	6f6c                	ld	a1,216(a4)
 ad8:	00764563          	blt	a2,t2,ae2 <.LASF32+0x6>

0000000000000adc <.LASF32>:
 adc:	5a5f 344e 6c6b      	0x6c6b344e5a5f
 ae2:	6269                	lui	tp,0x1a
 ae4:	6e697237          	lui	tp,0x6e697
 ae8:	66756267          	0x66756267
 aec:	6349                	lui	t1,0x12
 aee:	6d4c                	ld	a1,152(a0)
 af0:	3231                	addiw	tp,tp,-20
 af2:	4538                	lw	a4,72(a0)
 af4:	3445                	addiw	s0,s0,-15
 af6:	656e                	ld	a0,216(sp)
 af8:	7478                	ld	a4,232(s0)
 afa:	6d45                	lui	s10,0x11
	...

0000000000000afd <.LASF116>:
 afd:	776f7267          	0x776f7267
 b01:	657a6973          	csrrsi	s2,0x657,20
	...

0000000000000b06 <.LASF139>:
 b06:	5a5f 354e 6c61      	0x6c61354e5a5f
 b0c:	6f6c                	ld	a1,216(a4)
 b0e:	61503763          	0x61503763
 b12:	674d6567          	0x674d6567
 b16:	4372                	lw	t1,28(sp)
 b18:	4532                	lw	a0,12(sp)
 b1a:	6d6d                	lui	s10,0x1b
	...

0000000000000b1d <.LASF168>:
 b1d:	5f5f 7562 6c69      	0x6c6975625f5f
 b23:	6974                	ld	a3,208(a0)
 b25:	5f6e                	lw	t5,248(sp)
 b27:	7570                	ld	a2,232(a0)
 b29:	6374                	ld	a3,192(a4)
 b2b:	6168                	ld	a0,192(a0)
 b2d:	0072                	c.slli	zero,0x1c

0000000000000b2f <.LASF94>:
 b2f:	6f70                	ld	a2,216(a4)
 b31:	6f6e3273          	csrrc	tp,0x6f6,t3
 b35:	6564                	ld	s1,200(a0)
	...

0000000000000b38 <.LASF80>:
 b38:	6150                	ld	a2,128(a0)
 b3a:	674d6567          	0x674d6567
 b3e:	0072                	c.slli	zero,0x1c

0000000000000b40 <.LASF85>:
 b40:	5a5f 354e 6c61      	0x6c61354e5a5f
 b46:	6f6c                	ld	a1,216(a4)
 b48:	61503763          	0x61503763
 b4c:	674d6567          	0x674d6567
 b50:	3572                	fld	fa0,312(sp)
 b52:	6c61                	lui	s8,0x18
 b54:	6f6c                	ld	a1,216(a4)
 b56:	006d4563          	blt	s10,t1,b60 <.LASF108+0x6>

0000000000000b5a <.LASF108>:
 b5a:	5a5f 354e 6c61      	0x6c61354e5a5f
 b60:	6f6c                	ld	a1,216(a4)
 b62:	65483763          	0x65483763
 b66:	7061                	c.lui	zero,0xffff8
 b68:	674d                	lui	a4,0x13
 b6a:	3172                	fld	ft2,312(sp)
 b6c:	6134                	ld	a3,64(a0)
 b6e:	6c6c                	ld	a1,216(s0)
 b70:	6769                	lui	a4,0x1a
 b72:	656e                	ld	a0,216(sp)
 b74:	5f64                	lw	s1,124(a4)
 b76:	6c61                	lui	s8,0x18
 b78:	6f6c                	ld	a1,216(a4)
 b7a:	6d6d4563          	blt	s10,s6,1244 <.LLST17+0x37>
	...

0000000000000b7f <.LASF55>:
 b7f:	5a5f 344e 6c6b      	0x6c6b344e5a5f
 b85:	6269                	lui	tp,0x1a
 b87:	6c34                	ld	a3,88(s0)
 b89:	7369                	lui	t1,0xffffa
 b8b:	4974                	lw	a3,84(a0)
 b8d:	534e                	lw	t1,240(sp)
 b8f:	345f 6170 7269      	0x72696170345f
 b95:	6d49                	lui	s10,0x12
 b97:	4569                	li	a0,26
 b99:	4545                	li	a0,17
 b9b:	7039                	c.lui	zero,0xfffee
 b9d:	665f706f          	j	f8a01 <pool+0x1a01>
 ba1:	6f72                	ld	t5,280(sp)
 ba3:	746e                	ld	s0,248(sp)
 ba5:	7645                	lui	a2,0xffff1
	...

0000000000000ba8 <.LASF125>:
 ba8:	6f70                	ld	a2,216(a4)
 baa:	          	jal	s8,72fa <.LLST42+0x57c4>

0000000000000bad <.LASF4>:
 bad:	6975                	lui	s2,0x1d
 baf:	746e                	ld	s0,248(sp)
 bb1:	5f38                	lw	a4,120(a4)
 bb3:	0074                	addi	a3,sp,12

0000000000000bb5 <.LASF178>:
 bb5:	7562                	ld	a0,56(sp)
 bb7:	6666                	ld	a2,88(sp)
 bb9:	657a6973          	csrrsi	s2,0x657,20
	...

0000000000000bbe <.LASF149>:
 bbe:	656e                	ld	a0,216(sp)
 bc0:	61705377          	0x61705377
 bc4:	006e                	c.slli	zero,0x1b

0000000000000bc6 <.LASF162>:
 bc6:	6168                	ld	a0,192(a0)
 bc8:	746c                	ld	a1,232(s0)
	...

0000000000000bcb <.LASF110>:
 bcb:	6572                	ld	a0,280(sp)
 bcd:	6c61                	lui	s8,0x18
 bcf:	6f6c                	ld	a1,216(a4)
 bd1:	          	beq	t1,t2,1311 <.LLST22+0x14>

0000000000000bd3 <.LASF96>:
 bd3:	72617473          	csrrci	s0,0x726,2
 bd7:	0074                	addi	a3,sp,12

0000000000000bd9 <.LASF148>:
 bd9:	5f5f 7566 636e      	0x636e75665f5f
 bdf:	5f5f        	0x73696c005f5f

0000000000000be2 <.LASF42>:
 be2:	696c                	ld	a1,208(a0)
 be4:	          	csrrci	s0,0x5f0,0

0000000000000be7 <.LASF130>:
 be7:	5f5f 7270 6f69      	0x6f6972705f5f
 bed:	6972                	ld	s2,280(sp)
 bef:	7974                	ld	a3,240(a0)
	...

0000000000000bf2 <.LASF153>:
 bf2:	7265706f          	j	58318 <.LLST42+0x567e2>
 bf6:	7461                	lui	s0,0xffff8
 bf8:	6420726f          	jal	tp,823a <.LLST42+0x6704>
 bfc:	6c65                	lui	s8,0x19
 bfe:	7465                	lui	s0,0xffff9
 c00:	2065                	0x2065
 c02:	          	0x5f005d5b

0000000000000c05 <.LASF128>:
 c05:	5f5f 7364 5f6f      	0x5f6f73645f5f
 c0b:	6168                	ld	a0,192(a0)
 c0d:	646e                	ld	s0,216(sp)
 c0f:	656c                	ld	a1,200(a0)
	...

0000000000000c12 <.LASF95>:
 c12:	5a5f 354e 6c61      	0x6c61354e5a5f
 c18:	6f6c                	ld	a1,216(a4)
 c1a:	61503763          	0x61503763
 c1e:	674d6567          	0x674d6567
 c22:	3872                	fld	fa6,312(sp)
 c24:	6f70                	ld	a2,216(a4)
 c26:	6f6e3273          	csrrc	tp,0x6f6,t3
 c2a:	6564                	ld	s1,200(a0)
 c2c:	6d45                	lui	s10,0x11
 c2e:	0069                	c.nop	26

0000000000000c30 <.LASF81>:
 c30:	5a5f 354e 6c61      	0x6c61354e5a5f
 c36:	6f6c                	ld	a1,216(a4)
 c38:	61503763          	0x61503763
 c3c:	674d6567          	0x674d6567
 c40:	4372                	lw	t1,28(sp)
 c42:	4534                	lw	a3,72(a0)
 c44:	6d6d                	lui	s10,0x1b
	...

0000000000000c47 <.LASF67>:
 c47:	696d                	lui	s2,0x1b
 c49:	3c6e                	fld	fs8,248(sp)
 c4b:	6e75                	lui	t3,0x1d
 c4d:	6e676973          	csrrsi	s2,0x6e6,14
 c51:	6465                	lui	s0,0x19
 c53:	6320                	ld	s0,64(a4)
 c55:	6168                	ld	a0,192(a0)
 c57:	3e72                	fld	ft8,312(sp)
	...

Disassembly of section .sdata.DW.ref.__gxx_personality_v0:

0000000000000000 <DW.ref.__gxx_personality_v0>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
HeapMgr::~HeapMgr(){}
   0:	4700                	lw	s0,8(a4)
   2:	203a4343          	fmadd.s	ft6,fs4,ft3,ft4,rmm
HeapMgr::HeapMgr(ptr_t addr,xlen_t len){
   6:	4728                	lw	a0,72(a4)
    this->pool=addr;
   8:	554e                	lw	a0,240(sp)
   a:	2029                	0x2029
HeapMgr::HeapMgr(ptr_t addr,xlen_t len){
   c:	2e39                	addiw	t3,t3,14
   e:	2e32                	fld	ft8,264(sp)
    tlsf_create_with_pool(reinterpret_cast<ptr_t>(addr),len);
  10:	0030                	addi	a2,sp,8

Disassembly of section .eh_frame:

0000000000000000 <.eh_frame>:
   0:	0010                	0x10
   2:	0000                	unimp
   4:	0000                	unimp
   6:	0000                	unimp
   8:	7a01                	lui	s4,0xfffe0
   a:	0052                	c.slli	zero,0x14
   c:	7c01                	lui	s8,0xfffe0
   e:	0101                	addi	sp,sp,0
  10:	00020d1b          	sext.w	s10,tp
  14:	0010                	0x10
  16:	0000                	unimp
  18:	0018                	0x18
	...
  26:	0000                	unimp
  28:	0010                	0x10
  2a:	0000                	unimp
  2c:	002c                	addi	a1,sp,8
	...
  3a:	0000                	unimp
  3c:	0024                	addi	s1,sp,8
  3e:	0000                	unimp
  40:	0040                	addi	s0,sp,4
	...
  4a:	0000                	unimp
  4c:	4400                	lw	s0,8(s0)
  4e:	200e                	fld	ft0,192(sp)
  50:	8848                	0x8848
  52:	8904                	0x8904
  54:	4806                	lw	a6,64(sp)
  56:	0281                	addi	t0,t0,0
  58:	4c02                	lw	s8,0(sp)
  5a:	48c1                	li	a7,16
  5c:	44c8                	lw	a0,12(s1)
  5e:	44c9                	li	s1,18
  60:	000e                	c.slli	zero,0x3
  62:	0000                	unimp
  64:	001c                	0x1c
  66:	0000                	unimp
  68:	0068                	addi	a0,sp,12
	...
  72:	0000                	unimp
  74:	4800                	lw	s0,16(s0)
  76:	100e                	c.slli	zero,0x23
  78:	8848                	0x8848
  7a:	8104                	0x8104
  7c:	7c02                	ld	s8,32(sp)
  7e:	48c1                	li	a7,16
  80:	44c8                	lw	a0,12(s1)
  82:	000e                	c.slli	zero,0x3
  84:	0018                	0x18
  86:	0000                	unimp
  88:	0000                	unimp
  8a:	0000                	unimp
  8c:	7a01                	lui	s4,0xfffe0
  8e:	4c50                	lw	a2,28(s0)
  90:	0052                	c.slli	zero,0x14
  92:	7c01                	lui	s8,0xfffe0
  94:	0701                	addi	a4,a4,0
  96:	0000009b          	sext.w	ra,zero
  9a:	1b00                	addi	s0,sp,432
  9c:	00020d1b          	sext.w	s10,tp
  a0:	0034                	addi	a3,sp,8
  a2:	0000                	unimp
  a4:	0020                	addi	s0,sp,8
	...
  ae:	0000                	unimp
  b0:	0004                	0x4
  b2:	0000                	unimp
  b4:	4400                	lw	s0,8(s0)
  b6:	300e                	fld	ft0,224(sp)
  b8:	894c                	0x894c
  ba:	6006                	0x6006
  bc:	0281                	addi	t0,t0,0
  be:	0488                	addi	a0,sp,576
  c0:	0892                	slli	a7,a7,0x4
  c2:	0c940a93          	addi	s5,s0,201 # 190c9 <.LLST42+0x17593>
  c6:	b402                	fsd	ft0,40(sp)
  c8:	44c1                	li	s1,16
  ca:	44c8                	lw	a0,12(s1)
  cc:	44c9                	li	s1,18
  ce:	44d2                	lw	s1,20(sp)
  d0:	44d444d3          	0x44d444d3
  d4:	000e                	c.slli	zero,0x3
  d6:	0000                	unimp
  d8:	0028                	addi	a0,sp,8
  da:	0000                	unimp
  dc:	00dc                	addi	a5,sp,68
	...
  e6:	0000                	unimp
  e8:	4400                	lw	s0,8(s0)
  ea:	100e                	c.slli	zero,0x23
  ec:	884c                	0x884c
  ee:	8104                	0x8104
  f0:	5802                	lw	a6,32(sp)
  f2:	c80a                	sw	sp,16(sp)
  f4:	c144                	sw	s1,4(a0)
  f6:	0e44                	addi	s1,sp,788
  f8:	4800                	lw	s0,16(s0)
  fa:	44c1440b          	0x44c1440b
  fe:	44c8                	lw	a0,12(s1)
 100:	000e                	c.slli	zero,0x3
 102:	0000                	unimp
 104:	002c                	addi	a1,sp,8
 106:	0000                	unimp
 108:	0108                	addi	a0,sp,128
	...
 112:	0000                	unimp
 114:	4400                	lw	s0,8(s0)
 116:	200e                	fld	ft0,192(sp)
 118:	8850                	0x8850
 11a:	8904                	0x8904
 11c:	8106                	mv	sp,ra
 11e:	5c02                	lw	s8,32(sp)
 120:	c80a                	sw	sp,16(sp)
 122:	c144                	sw	s1,4(a0)
 124:	c948                	sw	a0,20(a0)
 126:	0e44                	addi	s1,sp,788
 128:	4800                	lw	s0,16(s0)
 12a:	44c1440b          	0x44c1440b
 12e:	44c8                	lw	a0,12(s1)
 130:	44c9                	li	s1,18
 132:	000e                	c.slli	zero,0x3
 134:	0010                	0x10
 136:	0000                	unimp
 138:	0138                	addi	a4,sp,136
	...
 146:	0000                	unimp
 148:	001c                	0x1c
 14a:	0000                	unimp
 14c:	00c8                	addi	a0,sp,68
	...
 156:	0000                	unimp
 158:	0004                	0x4
 15a:	0000                	unimp
 15c:	4c00                	lw	s0,24(s0)
 15e:	100e                	c.slli	zero,0x23
 160:	8144                	0x8144
 162:	4c02                	lw	s8,0(sp)
 164:	44c1                	li	s1,16
 166:	000e                	c.slli	zero,0x3
 168:	003c                	addi	a5,sp,8
 16a:	0000                	unimp
 16c:	016c                	addi	a1,sp,140
	...
 176:	0000                	unimp
 178:	4400                	lw	s0,8(s0)
 17a:	400e                	0x400e
 17c:	9660                	0x9660
 17e:	8110                	0x8110
 180:	8802                	jr	a6
 182:	8904                	0x8904
 184:	9206                	add	tp,tp,ra
 186:	9308                	0x9308
 188:	940a                	add	s0,s0,sp
 18a:	950c                	0x950c
 18c:	030e                	slli	t1,t1,0x3
 18e:	0168                	addi	a0,sp,140
 190:	c10a                	sw	sp,128(sp)
 192:	c848                	sw	a0,20(s0)
 194:	c944                	sw	s1,20(a0)
 196:	d244                	sw	s1,36(a2)
 198:	d344                	sw	s1,36(a4)
 19a:	d444                	sw	s1,44(s0)
 19c:	d544                	sw	s1,44(a0)
 19e:	d644                	sw	s1,44(a2)
 1a0:	0e44                	addi	s1,sp,788
 1a2:	4400                	lw	s0,8(s0)
 1a4:	0000000b          	0xb
 1a8:	0028                	addi	a0,sp,8
 1aa:	0000                	unimp
 1ac:	01ac                	addi	a1,sp,200
	...
 1b6:	0000                	unimp
 1b8:	4800                	lw	s0,16(s0)
 1ba:	200e                	fld	ft0,192(sp)
 1bc:	884c                	0x884c
 1be:	5404                	lw	s1,40(s0)
 1c0:	0281                	addi	t0,t0,0
 1c2:	0689                	addi	a3,a3,2
 1c4:	9802                	jalr	a6
 1c6:	c80a                	sw	sp,16(sp)
 1c8:	c144                	sw	s1,4(a0)
 1ca:	c948                	sw	a0,20(a0)
 1cc:	0e44                	addi	s1,sp,788
 1ce:	4800                	lw	s0,16(s0)
 1d0:	0000000b          	0xb
 1d4:	0020                	addi	s0,sp,8
 1d6:	0000                	unimp
 1d8:	01d8                	addi	a4,sp,196
	...
 1e2:	0000                	unimp
 1e4:	4400                	lw	s0,8(s0)
 1e6:	400e                	0x400e
 1e8:	9444                	0x9444
 1ea:	680c                	ld	a1,16(s0)
 1ec:	0689                	addi	a3,a3,2
 1ee:	0892                	slli	a7,a7,0x4
 1f0:	0281                	addi	t0,t0,0
 1f2:	0488                	addi	a0,sp,576
 1f4:	0e950a93          	addi	s5,a0,233 # 190e9 <.LLST42+0x175b3>
 1f8:	0030                	addi	a2,sp,8
 1fa:	0000                	unimp
 1fc:	01fc                	addi	a5,sp,204
	...
 206:	0000                	unimp
 208:	4400                	lw	s0,8(s0)
 20a:	300e                	fld	ft0,224(sp)
 20c:	8854                	0x8854
 20e:	8904                	0x8904
 210:	9206                	add	tp,tp,ra
 212:	8108                	0x8108
 214:	9302                	jalr	t1
 216:	030a                	slli	t1,t1,0x2
 218:	015c                	addi	a5,sp,132
 21a:	c80a                	sw	sp,16(sp)
 21c:	c144                	sw	s1,4(a0)
 21e:	c944                	sw	s1,20(a0)
 220:	d244                	sw	s1,36(a2)
 222:	d344                	sw	s1,36(a4)
 224:	0e4c                	addi	a1,sp,788
 226:	4800                	lw	s0,16(s0)
 228:	0000000b          	0xb
 22c:	0020                	addi	s0,sp,8
 22e:	0000                	unimp
 230:	0230                	addi	a2,sp,264
	...
 23a:	0000                	unimp
 23c:	4400                	lw	s0,8(s0)
 23e:	100e                	c.slli	zero,0x23
 240:	884c                	0x884c
 242:	5004                	lw	s1,32(s0)
 244:	0281                	addi	t0,t0,0
 246:	c854                	sw	a3,20(s0)
 248:	c144                	sw	s1,4(a0)
 24a:	0e54                	addi	a3,sp,788
 24c:	0000                	unimp
	...

Disassembly of section .riscv.attributes:

0000000000000000 <.riscv.attributes>:
HeapMgr::~HeapMgr(){}
   0:	2541                	addiw	a0,a0,16
   2:	0000                	unimp
HeapMgr::HeapMgr(ptr_t addr,xlen_t len){
   4:	7200                	ld	s0,32(a2)
   6:	7369                	lui	t1,0xffffa
    this->pool=addr;
   8:	01007663          	bgeu	zero,a6,14 <.riscv.attributes+0x14>
HeapMgr::HeapMgr(ptr_t addr,xlen_t len){
   c:	0000001b          	sext.w	zero,zero
    tlsf_create_with_pool(reinterpret_cast<ptr_t>(addr),len);
  10:	1004                	addi	s1,sp,32
  12:	7205                	lui	tp,0xfffe1
  14:	3676                	fld	fa2,376(sp)
  16:	6934                	ld	a3,80(a0)
  18:	7032                	0x7032
  1a:	5f30                	lw	a2,120(a4)
HeapMgrGrowable::HeapMgrGrowable(ptr_t addr,xlen_t len,PageMgr &pmgr):HeapMgr(addr,len),pmgr(pmgr),growsize(2){
  1c:	326d                	addiw	tp,tp,-5
  1e:	3070                	fld	fa2,224(s0)
  20:	615f 7032 0030      	0x307032615f
